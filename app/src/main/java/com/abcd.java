/*       */
package com;
/*       */
/*       */

import android.content.Context;
import android.util.Base64;

import com.general.files.GeneralFunctions;

import java.net.URL;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.Policy;

import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

/*       */
/*       */
/*       */
/*       */
/*       */
/*       */
/*       */
/*       */
/*       */
/*       */
/*       */
/*       */
/*       */
/*       */ class abcd
        /*       */ {
    /*       */ Context a;

    /*       */
    /*       */   class h
            /*       */ {
        /*       */ Policy.Parameters a;
        /*    33 */     private double c = 0.0D;
        /*    34 */     private double d = 0.0D;
        /*    35 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public h(a this$0) {
            /*    40 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*    45 */
            if (param1Int == 0 || param1Int == 1)
                /*    46 */ return 1;
            /*    47 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*    56 */
            double d = param1Double;
            /*    57 */
            if (this.f == true)
                /*    58 */ d = Math.toRadians(param1Double);
            /*    59 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*    64 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*    70 */
            byte b1 = 0;
            /*    71 */
            byte b2 = 0;
            /*    72 */
            byte b3 = 40;
            /*    73 */
            byte b4 = 41;
            /*    74 */
            String str = param1String;
            /*    75 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*    76 */
                if (param1String.charAt(b5) == b3) {
                    /*    77 */
                    b1++;
                    /*    78 */
                } else if (param1String.charAt(b5) == b4) {
                    /*    79 */
                    b2++;
                    /*       */
                }
                /*    81 */
            }
            while (b1 > 0) {
                /*    82 */
                str = str + b4;
                /*    83 */
                b1--;
                /*       */
            }
            /*    85 */
            while (b2 > 0) {
                /*    86 */
                str = b3 + str;
                /*    87 */
                b2--;
                /*       */
            }
            /*    89 */
            str = b(str);
            /*    90 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*    95 */
            String str = "";
            /*    96 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*    97 */
                str = str + param1String.charAt(b);
                /*    98 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*   100 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*   101 */ str = str + '*';
                    /*   102 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*   103 */ str = str + '1';
                    /*       */
                }
                /*   105 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    private static byte[] a(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   110 */
        if (paramInt2 % 4 != 0) {
            /*   111 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   114 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   115 */
            paramInt2--;
            /*       */
        }
        /*   117 */
        int i = paramInt2 * 3 / 4;
        /*   118 */
        byte[] arrayOfByte = new byte[i];
        /*   119 */
        int j = paramInt1;
        /*   120 */
        int k = paramInt1 + paramInt2;
        /*   121 */
        byte b = 0;
        /*   122 */
        while (j < k) {
            /*   123 */
            char c1 = paramArrayOfchar[j++];
            /*   124 */
            char c2 = paramArrayOfchar[j++];
            /*   125 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   126 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   128 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   129 */
                return new byte[0];
                /*       */
            }
            /*   131 */
            byte b3 = au[c1];
            /*   132 */
            byte b4 = au[c2];
            /*   133 */
            byte b5 = au[b1];
            /*   134 */
            byte b6 = au[b2];
            /*   135 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   136 */
                return new byte[0];
                /*       */
            }
            /*   138 */
            int m = b3 << 2 | b4 >>> 4;
            /*   139 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   140 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   141 */
            arrayOfByte[b++] = (byte) m;
            /*   142 */
            if (b < i) {
                /*   143 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   145 */
            if (b < i) {
                /*   146 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   149 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] b(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   153 */
        if (paramInt2 % 4 != 0) {
            /*   154 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   157 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   158 */
            paramInt2--;
            /*       */
        }
        /*   160 */
        int i = paramInt2 * 3 / 4;
        /*   161 */
        byte[] arrayOfByte = new byte[i];
        /*   162 */
        int j = paramInt1;
        /*   163 */
        int k = paramInt1 + paramInt2;
        /*   164 */
        byte b = 0;
        /*   165 */
        while (j < k) {
            /*   166 */
            char c1 = paramArrayOfchar[j++];
            /*   167 */
            char c2 = paramArrayOfchar[j++];
            /*   168 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   169 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   171 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   172 */
                return new byte[0];
                /*       */
            }
            /*   174 */
            byte b3 = au[c1];
            /*   175 */
            byte b4 = au[c2];
            /*   176 */
            byte b5 = au[b1];
            /*   177 */
            byte b6 = au[b2];
            /*   178 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   179 */
                return new byte[0];
                /*       */
            }
            /*   181 */
            int m = b3 << 2 | b4 >>> 4;
            /*   182 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   183 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   184 */
            arrayOfByte[b++] = (byte) m;
            /*   185 */
            if (b < i) {
                /*   186 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   188 */
            if (b < i) {
                /*   189 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   192 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] c(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   197 */
        if (paramInt2 % 4 != 0) {
            /*   198 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   201 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   202 */
            paramInt2--;
            /*       */
        }
        /*   204 */
        int i = paramInt2 * 3 / 4;
        /*   205 */
        byte[] arrayOfByte = new byte[i];
        /*   206 */
        int j = paramInt1;
        /*   207 */
        int k = paramInt1 + paramInt2;
        /*   208 */
        byte b = 0;
        /*   209 */
        while (j < k) {
            /*   210 */
            char c1 = paramArrayOfchar[j++];
            /*   211 */
            char c2 = paramArrayOfchar[j++];
            /*   212 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   213 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   215 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   216 */
                return new byte[0];
                /*       */
            }
            /*   218 */
            byte b3 = au[c1];
            /*   219 */
            byte b4 = au[c2];
            /*   220 */
            byte b5 = au[b1];
            /*   221 */
            byte b6 = au[b2];
            /*   222 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   223 */
                return new byte[0];
                /*       */
            }
            /*   225 */
            int m = b3 << 2 | b4 >>> 4;
            /*   226 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   227 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   228 */
            arrayOfByte[b++] = (byte) m;
            /*   229 */
            if (b < i) {
                /*   230 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   232 */
            if (b < i) {
                /*   233 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   236 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] d(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   240 */
        if (paramInt2 % 4 != 0) {
            /*   241 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   244 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   245 */
            paramInt2--;
            /*       */
        }
        /*   247 */
        int i = paramInt2 * 3 / 4;
        /*   248 */
        byte[] arrayOfByte = new byte[i];
        /*   249 */
        int j = paramInt1;
        /*   250 */
        int k = paramInt1 + paramInt2;
        /*   251 */
        byte b = 0;
        /*   252 */
        while (j < k) {
            /*   253 */
            char c1 = paramArrayOfchar[j++];
            /*   254 */
            char c2 = paramArrayOfchar[j++];
            /*   255 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   256 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   258 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   259 */
                return new byte[0];
                /*       */
            }
            /*   261 */
            byte b3 = au[c1];
            /*   262 */
            byte b4 = au[c2];
            /*   263 */
            byte b5 = au[b1];
            /*   264 */
            byte b6 = au[b2];
            /*   265 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   266 */
                return new byte[0];
                /*       */
            }
            /*   268 */
            int m = b3 << 2 | b4 >>> 4;
            /*   269 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   270 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   271 */
            arrayOfByte[b++] = (byte) m;
            /*   272 */
            if (b < i) {
                /*   273 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   275 */
            if (b < i) {
                /*   276 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   279 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] e(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   283 */
        if (paramInt2 % 4 != 0) {
            /*   284 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   287 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   288 */
            paramInt2--;
            /*       */
        }
        /*   290 */
        int i = paramInt2 * 3 / 4;
        /*   291 */
        byte[] arrayOfByte = new byte[i];
        /*   292 */
        int j = paramInt1;
        /*   293 */
        int k = paramInt1 + paramInt2;
        /*   294 */
        byte b = 0;
        /*   295 */
        while (j < k) {
            /*   296 */
            char c1 = paramArrayOfchar[j++];
            /*   297 */
            char c2 = paramArrayOfchar[j++];
            /*   298 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   299 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   301 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   302 */
                return new byte[0];
                /*       */
            }
            /*   304 */
            byte b3 = au[c1];
            /*   305 */
            byte b4 = au[c2];
            /*   306 */
            byte b5 = au[b1];
            /*   307 */
            byte b6 = au[b2];
            /*   308 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   309 */
                return new byte[0];
                /*       */
            }
            /*   311 */
            int m = b3 << 2 | b4 >>> 4;
            /*   312 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   313 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   314 */
            arrayOfByte[b++] = (byte) m;
            /*   315 */
            if (b < i) {
                /*   316 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   318 */
            if (b < i) {
                /*   319 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   322 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */   class i
            /*       */ {
        /*       */ Policy.Parameters a;
        /*   329 */     private double c = 0.0D;
        /*   330 */     private double d = 0.0D;
        /*   331 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public i(a this$0) {
            /*   336 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*   341 */
            if (param1Int == 0 || param1Int == 1)
                /*   342 */ return 1;
            /*   343 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*   352 */
            double d = param1Double;
            /*   353 */
            if (this.f == true)
                /*   354 */ d = Math.toRadians(param1Double);
            /*   355 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*   360 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*   366 */
            byte b1 = 0;
            /*   367 */
            byte b2 = 0;
            /*   368 */
            byte b3 = 40;
            /*   369 */
            byte b4 = 41;
            /*   370 */
            String str = param1String;
            /*   371 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*   372 */
                if (param1String.charAt(b5) == b3) {
                    /*   373 */
                    b1++;
                    /*   374 */
                } else if (param1String.charAt(b5) == b4) {
                    /*   375 */
                    b2++;
                    /*       */
                }
                /*   377 */
            }
            while (b1 > 0) {
                /*   378 */
                str = str + b4;
                /*   379 */
                b1--;
                /*       */
            }
            /*   381 */
            while (b2 > 0) {
                /*   382 */
                str = b3 + str;
                /*   383 */
                b2--;
                /*       */
            }
            /*   385 */
            str = b(str);
            /*   386 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*   391 */
            String str = "";
            /*   392 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*   393 */
                str = str + param1String.charAt(b);
                /*   394 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*   396 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*   397 */ str = str + '*';
                    /*   398 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*   399 */ str = str + '1';
                    /*       */
                }
                /*   401 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    private static byte[] f(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   406 */
        if (paramInt2 % 4 != 0) {
            /*   407 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   410 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   411 */
            paramInt2--;
            /*       */
        }
        /*   413 */
        int i = paramInt2 * 3 / 4;
        /*   414 */
        byte[] arrayOfByte = new byte[i];
        /*   415 */
        int j = paramInt1;
        /*   416 */
        int k = paramInt1 + paramInt2;
        /*   417 */
        byte b = 0;
        /*   418 */
        while (j < k) {
            /*   419 */
            char c1 = paramArrayOfchar[j++];
            /*   420 */
            char c2 = paramArrayOfchar[j++];
            /*   421 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   422 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   424 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   425 */
                return new byte[0];
                /*       */
            }
            /*   427 */
            byte b3 = au[c1];
            /*   428 */
            byte b4 = au[c2];
            /*   429 */
            byte b5 = au[b1];
            /*   430 */
            byte b6 = au[b2];
            /*   431 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   432 */
                return new byte[0];
                /*       */
            }
            /*   434 */
            int m = b3 << 2 | b4 >>> 4;
            /*   435 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   436 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   437 */
            arrayOfByte[b++] = (byte) m;
            /*   438 */
            if (b < i) {
                /*   439 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   441 */
            if (b < i) {
                /*   442 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   445 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] g(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   449 */
        if (paramInt2 % 4 != 0) {
            /*   450 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   453 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   454 */
            paramInt2--;
            /*       */
        }
        /*   456 */
        int i = paramInt2 * 3 / 4;
        /*   457 */
        byte[] arrayOfByte = new byte[i];
        /*   458 */
        int j = paramInt1;
        /*   459 */
        int k = paramInt1 + paramInt2;
        /*   460 */
        byte b = 0;
        /*   461 */
        while (j < k) {
            /*   462 */
            char c1 = paramArrayOfchar[j++];
            /*   463 */
            char c2 = paramArrayOfchar[j++];
            /*   464 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   465 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   467 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   468 */
                return new byte[0];
                /*       */
            }
            /*   470 */
            byte b3 = au[c1];
            /*   471 */
            byte b4 = au[c2];
            /*   472 */
            byte b5 = au[b1];
            /*   473 */
            byte b6 = au[b2];
            /*   474 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   475 */
                return new byte[0];
                /*       */
            }
            /*   477 */
            int m = b3 << 2 | b4 >>> 4;
            /*   478 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   479 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   480 */
            arrayOfByte[b++] = (byte) m;
            /*   481 */
            if (b < i) {
                /*   482 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   484 */
            if (b < i) {
                /*   485 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   488 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] h(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   493 */
        if (paramInt2 % 4 != 0) {
            /*   494 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   497 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   498 */
            paramInt2--;
            /*       */
        }
        /*   500 */
        int i = paramInt2 * 3 / 4;
        /*   501 */
        byte[] arrayOfByte = new byte[i];
        /*   502 */
        int j = paramInt1;
        /*   503 */
        int k = paramInt1 + paramInt2;
        /*   504 */
        byte b = 0;
        /*   505 */
        while (j < k) {
            /*   506 */
            char c1 = paramArrayOfchar[j++];
            /*   507 */
            char c2 = paramArrayOfchar[j++];
            /*   508 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   509 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   511 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   512 */
                return new byte[0];
                /*       */
            }
            /*   514 */
            byte b3 = au[c1];
            /*   515 */
            byte b4 = au[c2];
            /*   516 */
            byte b5 = au[b1];
            /*   517 */
            byte b6 = au[b2];
            /*   518 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   519 */
                return new byte[0];
                /*       */
            }
            /*   521 */
            int m = b3 << 2 | b4 >>> 4;
            /*   522 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   523 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   524 */
            arrayOfByte[b++] = (byte) m;
            /*   525 */
            if (b < i) {
                /*   526 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   528 */
            if (b < i) {
                /*   529 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   532 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] i(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   536 */
        if (paramInt2 % 4 != 0) {
            /*   537 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   540 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   541 */
            paramInt2--;
            /*       */
        }
        /*   543 */
        int i = paramInt2 * 3 / 4;
        /*   544 */
        byte[] arrayOfByte = new byte[i];
        /*   545 */
        int j = paramInt1;
        /*   546 */
        int k = paramInt1 + paramInt2;
        /*   547 */
        byte b = 0;
        /*   548 */
        while (j < k) {
            /*   549 */
            char c1 = paramArrayOfchar[j++];
            /*   550 */
            char c2 = paramArrayOfchar[j++];
            /*   551 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   552 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   554 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   555 */
                return new byte[0];
                /*       */
            }
            /*   557 */
            byte b3 = au[c1];
            /*   558 */
            byte b4 = au[c2];
            /*   559 */
            byte b5 = au[b1];
            /*   560 */
            byte b6 = au[b2];
            /*   561 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   562 */
                return new byte[0];
                /*       */
            }
            /*   564 */
            int m = b3 << 2 | b4 >>> 4;
            /*   565 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   566 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   567 */
            arrayOfByte[b++] = (byte) m;
            /*   568 */
            if (b < i) {
                /*   569 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   571 */
            if (b < i) {
                /*   572 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   575 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] j(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   579 */
        if (paramInt2 % 4 != 0) {
            /*   580 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   583 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   584 */
            paramInt2--;
            /*       */
        }
        /*   586 */
        int i = paramInt2 * 3 / 4;
        /*   587 */
        byte[] arrayOfByte = new byte[i];
        /*   588 */
        int j = paramInt1;
        /*   589 */
        int k = paramInt1 + paramInt2;
        /*   590 */
        byte b = 0;
        /*   591 */
        while (j < k) {
            /*   592 */
            char c1 = paramArrayOfchar[j++];
            /*   593 */
            char c2 = paramArrayOfchar[j++];
            /*   594 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   595 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   597 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   598 */
                return new byte[0];
                /*       */
            }
            /*   600 */
            byte b3 = au[c1];
            /*   601 */
            byte b4 = au[c2];
            /*   602 */
            byte b5 = au[b1];
            /*   603 */
            byte b6 = au[b2];
            /*   604 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   605 */
                return new byte[0];
                /*       */
            }
            /*   607 */
            int m = b3 << 2 | b4 >>> 4;
            /*   608 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   609 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   610 */
            arrayOfByte[b++] = (byte) m;
            /*   611 */
            if (b < i) {
                /*   612 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   614 */
            if (b < i) {
                /*   615 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   618 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] k(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   623 */
        if (paramInt2 % 4 != 0) {
            /*   624 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   627 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   628 */
            paramInt2--;
            /*       */
        }
        /*   630 */
        int i = paramInt2 * 3 / 4;
        /*   631 */
        byte[] arrayOfByte = new byte[i];
        /*   632 */
        int j = paramInt1;
        /*   633 */
        int k = paramInt1 + paramInt2;
        /*   634 */
        byte b = 0;
        /*   635 */
        while (j < k) {
            /*   636 */
            char c1 = paramArrayOfchar[j++];
            /*   637 */
            char c2 = paramArrayOfchar[j++];
            /*   638 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   639 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   641 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   642 */
                return new byte[0];
                /*       */
            }
            /*   644 */
            byte b3 = au[c1];
            /*   645 */
            byte b4 = au[c2];
            /*   646 */
            byte b5 = au[b1];
            /*   647 */
            byte b6 = au[b2];
            /*   648 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   649 */
                return new byte[0];
                /*       */
            }
            /*   651 */
            int m = b3 << 2 | b4 >>> 4;
            /*   652 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   653 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   654 */
            arrayOfByte[b++] = (byte) m;
            /*   655 */
            if (b < i) {
                /*   656 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   658 */
            if (b < i) {
                /*   659 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   662 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] l(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   666 */
        if (paramInt2 % 4 != 0) {
            /*   667 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   670 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   671 */
            paramInt2--;
            /*       */
        }
        /*   673 */
        int i = paramInt2 * 3 / 4;
        /*   674 */
        byte[] arrayOfByte = new byte[i];
        /*   675 */
        int j = paramInt1;
        /*   676 */
        int k = paramInt1 + paramInt2;
        /*   677 */
        byte b = 0;
        /*   678 */
        while (j < k) {
            /*   679 */
            char c1 = paramArrayOfchar[j++];
            /*   680 */
            char c2 = paramArrayOfchar[j++];
            /*   681 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   682 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   684 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   685 */
                return new byte[0];
                /*       */
            }
            /*   687 */
            byte b3 = au[c1];
            /*   688 */
            byte b4 = au[c2];
            /*   689 */
            byte b5 = au[b1];
            /*   690 */
            byte b6 = au[b2];
            /*   691 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   692 */
                return new byte[0];
                /*       */
            }
            /*   694 */
            int m = b3 << 2 | b4 >>> 4;
            /*   695 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   696 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   697 */
            arrayOfByte[b++] = (byte) m;
            /*   698 */
            if (b < i) {
                /*   699 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   701 */
            if (b < i) {
                /*   702 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   705 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] m(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   709 */
        if (paramInt2 % 4 != 0) {
            /*   710 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   713 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   714 */
            paramInt2--;
            /*       */
        }
        /*   716 */
        int i = paramInt2 * 3 / 4;
        /*   717 */
        byte[] arrayOfByte = new byte[i];
        /*   718 */
        int j = paramInt1;
        /*   719 */
        int k = paramInt1 + paramInt2;
        /*   720 */
        byte b = 0;
        /*   721 */
        while (j < k) {
            /*   722 */
            char c1 = paramArrayOfchar[j++];
            /*   723 */
            char c2 = paramArrayOfchar[j++];
            /*   724 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   725 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   727 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   728 */
                return new byte[0];
                /*       */
            }
            /*   730 */
            byte b3 = au[c1];
            /*   731 */
            byte b4 = au[c2];
            /*   732 */
            byte b5 = au[b1];
            /*   733 */
            byte b6 = au[b2];
            /*   734 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   735 */
                return new byte[0];
                /*       */
            }
            /*   737 */
            int m = b3 << 2 | b4 >>> 4;
            /*   738 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   739 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   740 */
            arrayOfByte[b++] = (byte) m;
            /*   741 */
            if (b < i) {
                /*   742 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   744 */
            if (b < i) {
                /*   745 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   748 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] n(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   752 */
        if (paramInt2 % 4 != 0) {
            /*   753 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   756 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   757 */
            paramInt2--;
            /*       */
        }
        /*   759 */
        int i = paramInt2 * 3 / 4;
        /*   760 */
        byte[] arrayOfByte = new byte[i];
        /*   761 */
        int j = paramInt1;
        /*   762 */
        int k = paramInt1 + paramInt2;
        /*   763 */
        byte b = 0;
        /*   764 */
        while (j < k) {
            /*   765 */
            char c1 = paramArrayOfchar[j++];
            /*   766 */
            char c2 = paramArrayOfchar[j++];
            /*   767 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   768 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   770 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   771 */
                return new byte[0];
                /*       */
            }
            /*   773 */
            byte b3 = au[c1];
            /*   774 */
            byte b4 = au[c2];
            /*   775 */
            byte b5 = au[b1];
            /*   776 */
            byte b6 = au[b2];
            /*   777 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   778 */
                return new byte[0];
                /*       */
            }
            /*   780 */
            int m = b3 << 2 | b4 >>> 4;
            /*   781 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   782 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   783 */
            arrayOfByte[b++] = (byte) m;
            /*   784 */
            if (b < i) {
                /*   785 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   787 */
            if (b < i) {
                /*   788 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   791 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] o(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   795 */
        if (paramInt2 % 4 != 0) {
            /*   796 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   799 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   800 */
            paramInt2--;
            /*       */
        }
        /*   802 */
        int i = paramInt2 * 3 / 4;
        /*   803 */
        byte[] arrayOfByte = new byte[i];
        /*   804 */
        int j = paramInt1;
        /*   805 */
        int k = paramInt1 + paramInt2;
        /*   806 */
        byte b = 0;
        /*   807 */
        while (j < k) {
            /*   808 */
            char c1 = paramArrayOfchar[j++];
            /*   809 */
            char c2 = paramArrayOfchar[j++];
            /*   810 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   811 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   813 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   814 */
                return new byte[0];
                /*       */
            }
            /*   816 */
            byte b3 = au[c1];
            /*   817 */
            byte b4 = au[c2];
            /*   818 */
            byte b5 = au[b1];
            /*   819 */
            byte b6 = au[b2];
            /*   820 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   821 */
                return new byte[0];
                /*       */
            }
            /*   823 */
            int m = b3 << 2 | b4 >>> 4;
            /*   824 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   825 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   826 */
            arrayOfByte[b++] = (byte) m;
            /*   827 */
            if (b < i) {
                /*   828 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   830 */
            if (b < i) {
                /*   831 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   834 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] p(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   838 */
        if (paramInt2 % 4 != 0) {
            /*   839 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   842 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   843 */
            paramInt2--;
            /*       */
        }
        /*   845 */
        int i = paramInt2 * 3 / 4;
        /*   846 */
        byte[] arrayOfByte = new byte[i];
        /*   847 */
        int j = paramInt1;
        /*   848 */
        int k = paramInt1 + paramInt2;
        /*   849 */
        byte b = 0;
        /*   850 */
        while (j < k) {
            /*   851 */
            char c1 = paramArrayOfchar[j++];
            /*   852 */
            char c2 = paramArrayOfchar[j++];
            /*   853 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   854 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   856 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   857 */
                return new byte[0];
                /*       */
            }
            /*   859 */
            byte b3 = au[c1];
            /*   860 */
            byte b4 = au[c2];
            /*   861 */
            byte b5 = au[b1];
            /*   862 */
            byte b6 = au[b2];
            /*   863 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   864 */
                return new byte[0];
                /*       */
            }
            /*   866 */
            int m = b3 << 2 | b4 >>> 4;
            /*   867 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   868 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   869 */
            arrayOfByte[b++] = (byte) m;
            /*   870 */
            if (b < i) {
                /*   871 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   873 */
            if (b < i) {
                /*   874 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   877 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] q(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*   881 */
        if (paramInt2 % 4 != 0) {
            /*   882 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*   885 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*   886 */
            paramInt2--;
            /*       */
        }
        /*   888 */
        int i = paramInt2 * 3 / 4;
        /*   889 */
        byte[] arrayOfByte = new byte[i];
        /*   890 */
        int j = paramInt1;
        /*   891 */
        int k = paramInt1 + paramInt2;
        /*   892 */
        byte b = 0;
        /*   893 */
        while (j < k) {
            /*   894 */
            char c1 = paramArrayOfchar[j++];
            /*   895 */
            char c2 = paramArrayOfchar[j++];
            /*   896 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*   897 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*   899 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*   900 */
                return new byte[0];
                /*       */
            }
            /*   902 */
            byte b3 = au[c1];
            /*   903 */
            byte b4 = au[c2];
            /*   904 */
            byte b5 = au[b1];
            /*   905 */
            byte b6 = au[b2];
            /*   906 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*   907 */
                return new byte[0];
                /*       */
            }
            /*   909 */
            int m = b3 << 2 | b4 >>> 4;
            /*   910 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*   911 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*   912 */
            arrayOfByte[b++] = (byte) m;
            /*   913 */
            if (b < i) {
                /*   914 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*   916 */
            if (b < i) {
                /*   917 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*   920 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */   class j
            /*       */ {
        /*       */ Policy.Parameters a;
        /*       */
        /*   928 */     private double c = 0.0D;
        /*   929 */     private double d = 0.0D;
        /*   930 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public j(a this$0) {
            /*   935 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*   940 */
            if (param1Int == 0 || param1Int == 1)
                /*   941 */ return 1;
            /*   942 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*   951 */
            double d = param1Double;
            /*   952 */
            if (this.f == true)
                /*   953 */ d = Math.toRadians(param1Double);
            /*   954 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*   959 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*   965 */
            byte b1 = 0;
            /*   966 */
            byte b2 = 0;
            /*   967 */
            byte b3 = 40;
            /*   968 */
            byte b4 = 41;
            /*   969 */
            String str = param1String;
            /*   970 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*   971 */
                if (param1String.charAt(b5) == b3) {
                    /*   972 */
                    b1++;
                    /*   973 */
                } else if (param1String.charAt(b5) == b4) {
                    /*   974 */
                    b2++;
                    /*       */
                }
                /*   976 */
            }
            while (b1 > 0) {
                /*   977 */
                str = str + b4;
                /*   978 */
                b1--;
                /*       */
            }
            /*   980 */
            while (b2 > 0) {
                /*   981 */
                str = b3 + str;
                /*   982 */
                b2--;
                /*       */
            }
            /*   984 */
            str = b(str);
            /*   985 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*   990 */
            String str = "";
            /*   991 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*   992 */
                str = str + param1String.charAt(b);
                /*   993 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*   995 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*   996 */ str = str + '*';
                    /*   997 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*   998 */ str = str + '1';
                    /*       */
                }
                /*  1000 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    private static byte[] r(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1005 */
        if (paramInt2 % 4 != 0) {
            /*  1006 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1009 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1010 */
            paramInt2--;
            /*       */
        }
        /*  1012 */
        int i = paramInt2 * 3 / 4;
        /*  1013 */
        byte[] arrayOfByte = new byte[i];
        /*  1014 */
        int j = paramInt1;
        /*  1015 */
        int k = paramInt1 + paramInt2;
        /*  1016 */
        byte b = 0;
        /*  1017 */
        while (j < k) {
            /*  1018 */
            char c1 = paramArrayOfchar[j++];
            /*  1019 */
            char c2 = paramArrayOfchar[j++];
            /*  1020 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1021 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1023 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1024 */
                return new byte[0];
                /*       */
            }
            /*  1026 */
            byte b3 = au[c1];
            /*  1027 */
            byte b4 = au[c2];
            /*  1028 */
            byte b5 = au[b1];
            /*  1029 */
            byte b6 = au[b2];
            /*  1030 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1031 */
                return new byte[0];
                /*       */
            }
            /*  1033 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1034 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1035 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1036 */
            arrayOfByte[b++] = (byte) m;
            /*  1037 */
            if (b < i) {
                /*  1038 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1040 */
            if (b < i) {
                /*  1041 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1044 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] s(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1048 */
        if (paramInt2 % 4 != 0) {
            /*  1049 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1052 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1053 */
            paramInt2--;
            /*       */
        }
        /*  1055 */
        int i = paramInt2 * 3 / 4;
        /*  1056 */
        byte[] arrayOfByte = new byte[i];
        /*  1057 */
        int j = paramInt1;
        /*  1058 */
        int k = paramInt1 + paramInt2;
        /*  1059 */
        byte b = 0;
        /*  1060 */
        while (j < k) {
            /*  1061 */
            char c1 = paramArrayOfchar[j++];
            /*  1062 */
            char c2 = paramArrayOfchar[j++];
            /*  1063 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1064 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1066 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1067 */
                return new byte[0];
                /*       */
            }
            /*  1069 */
            byte b3 = au[c1];
            /*  1070 */
            byte b4 = au[c2];
            /*  1071 */
            byte b5 = au[b1];
            /*  1072 */
            byte b6 = au[b2];
            /*  1073 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1074 */
                return new byte[0];
                /*       */
            }
            /*  1076 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1077 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1078 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1079 */
            arrayOfByte[b++] = (byte) m;
            /*  1080 */
            if (b < i) {
                /*  1081 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1083 */
            if (b < i) {
                /*  1084 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1087 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] t(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1092 */
        if (paramInt2 % 4 != 0) {
            /*  1093 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1096 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1097 */
            paramInt2--;
            /*       */
        }
        /*  1099 */
        int i = paramInt2 * 3 / 4;
        /*  1100 */
        byte[] arrayOfByte = new byte[i];
        /*  1101 */
        int j = paramInt1;
        /*  1102 */
        int k = paramInt1 + paramInt2;
        /*  1103 */
        byte b = 0;
        /*  1104 */
        while (j < k) {
            /*  1105 */
            char c1 = paramArrayOfchar[j++];
            /*  1106 */
            char c2 = paramArrayOfchar[j++];
            /*  1107 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1108 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1110 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1111 */
                return new byte[0];
                /*       */
            }
            /*  1113 */
            byte b3 = au[c1];
            /*  1114 */
            byte b4 = au[c2];
            /*  1115 */
            byte b5 = au[b1];
            /*  1116 */
            byte b6 = au[b2];
            /*  1117 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1118 */
                return new byte[0];
                /*       */
            }
            /*  1120 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1121 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1122 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1123 */
            arrayOfByte[b++] = (byte) m;
            /*  1124 */
            if (b < i) {
                /*  1125 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1127 */
            if (b < i) {
                /*  1128 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1131 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] u(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1135 */
        if (paramInt2 % 4 != 0) {
            /*  1136 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1139 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1140 */
            paramInt2--;
            /*       */
        }
        /*  1142 */
        int i = paramInt2 * 3 / 4;
        /*  1143 */
        byte[] arrayOfByte = new byte[i];
        /*  1144 */
        int j = paramInt1;
        /*  1145 */
        int k = paramInt1 + paramInt2;
        /*  1146 */
        byte b = 0;
        /*  1147 */
        while (j < k) {
            /*  1148 */
            char c1 = paramArrayOfchar[j++];
            /*  1149 */
            char c2 = paramArrayOfchar[j++];
            /*  1150 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1151 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1153 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1154 */
                return new byte[0];
                /*       */
            }
            /*  1156 */
            byte b3 = au[c1];
            /*  1157 */
            byte b4 = au[c2];
            /*  1158 */
            byte b5 = au[b1];
            /*  1159 */
            byte b6 = au[b2];
            /*  1160 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1161 */
                return new byte[0];
                /*       */
            }
            /*  1163 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1164 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1165 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1166 */
            arrayOfByte[b++] = (byte) m;
            /*  1167 */
            if (b < i) {
                /*  1168 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1170 */
            if (b < i) {
                /*  1171 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1174 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */   class k
            /*       */ {
        /*       */ Policy.Parameters a;
        /*       */
        /*  1182 */     private double c = 0.0D;
        /*  1183 */     private double d = 0.0D;
        /*  1184 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public k(a this$0) {
            /*  1189 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*  1194 */
            if (param1Int == 0 || param1Int == 1)
                /*  1195 */ return 1;
            /*  1196 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*  1205 */
            double d = param1Double;
            /*  1206 */
            if (this.f == true)
                /*  1207 */ d = Math.toRadians(param1Double);
            /*  1208 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*  1213 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*  1219 */
            byte b1 = 0;
            /*  1220 */
            byte b2 = 0;
            /*  1221 */
            byte b3 = 40;
            /*  1222 */
            byte b4 = 41;
            /*  1223 */
            String str = param1String;
            /*  1224 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*  1225 */
                if (param1String.charAt(b5) == b3) {
                    /*  1226 */
                    b1++;
                    /*  1227 */
                } else if (param1String.charAt(b5) == b4) {
                    /*  1228 */
                    b2++;
                    /*       */
                }
                /*  1230 */
            }
            while (b1 > 0) {
                /*  1231 */
                str = str + b4;
                /*  1232 */
                b1--;
                /*       */
            }
            /*  1234 */
            while (b2 > 0) {
                /*  1235 */
                str = b3 + str;
                /*  1236 */
                b2--;
                /*       */
            }
            /*  1238 */
            str = b(str);
            /*  1239 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*  1244 */
            String str = "";
            /*  1245 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*  1246 */
                str = str + param1String.charAt(b);
                /*  1247 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*  1249 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*  1250 */ str = str + '*';
                    /*  1251 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*  1252 */ str = str + '1';
                    /*       */
                }
                /*  1254 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    private static byte[] v(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1259 */
        if (paramInt2 % 4 != 0) {
            /*  1260 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1263 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1264 */
            paramInt2--;
            /*       */
        }
        /*  1266 */
        int i = paramInt2 * 3 / 4;
        /*  1267 */
        byte[] arrayOfByte = new byte[i];
        /*  1268 */
        int j = paramInt1;
        /*  1269 */
        int k = paramInt1 + paramInt2;
        /*  1270 */
        byte b = 0;
        /*  1271 */
        while (j < k) {
            /*  1272 */
            char c1 = paramArrayOfchar[j++];
            /*  1273 */
            char c2 = paramArrayOfchar[j++];
            /*  1274 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1275 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1277 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1278 */
                return new byte[0];
                /*       */
            }
            /*  1280 */
            byte b3 = au[c1];
            /*  1281 */
            byte b4 = au[c2];
            /*  1282 */
            byte b5 = au[b1];
            /*  1283 */
            byte b6 = au[b2];
            /*  1284 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1285 */
                return new byte[0];
                /*       */
            }
            /*  1287 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1288 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1289 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1290 */
            arrayOfByte[b++] = (byte) m;
            /*  1291 */
            if (b < i) {
                /*  1292 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1294 */
            if (b < i) {
                /*  1295 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1298 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] w(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1302 */
        if (paramInt2 % 4 != 0) {
            /*  1303 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1306 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1307 */
            paramInt2--;
            /*       */
        }
        /*  1309 */
        int i = paramInt2 * 3 / 4;
        /*  1310 */
        byte[] arrayOfByte = new byte[i];
        /*  1311 */
        int j = paramInt1;
        /*  1312 */
        int k = paramInt1 + paramInt2;
        /*  1313 */
        byte b = 0;
        /*  1314 */
        while (j < k) {
            /*  1315 */
            char c1 = paramArrayOfchar[j++];
            /*  1316 */
            char c2 = paramArrayOfchar[j++];
            /*  1317 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1318 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1320 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1321 */
                return new byte[0];
                /*       */
            }
            /*  1323 */
            byte b3 = au[c1];
            /*  1324 */
            byte b4 = au[c2];
            /*  1325 */
            byte b5 = au[b1];
            /*  1326 */
            byte b6 = au[b2];
            /*  1327 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1328 */
                return new byte[0];
                /*       */
            }
            /*  1330 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1331 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1332 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1333 */
            arrayOfByte[b++] = (byte) m;
            /*  1334 */
            if (b < i) {
                /*  1335 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1337 */
            if (b < i) {
                /*  1338 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1341 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] x(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1345 */
        if (paramInt2 % 4 != 0) {
            /*  1346 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1349 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1350 */
            paramInt2--;
            /*       */
        }
        /*  1352 */
        int i = paramInt2 * 3 / 4;
        /*  1353 */
        byte[] arrayOfByte = new byte[i];
        /*  1354 */
        int j = paramInt1;
        /*  1355 */
        int k = paramInt1 + paramInt2;
        /*  1356 */
        byte b = 0;
        /*  1357 */
        while (j < k) {
            /*  1358 */
            char c1 = paramArrayOfchar[j++];
            /*  1359 */
            char c2 = paramArrayOfchar[j++];
            /*  1360 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1361 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1363 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1364 */
                return new byte[0];
                /*       */
            }
            /*  1366 */
            byte b3 = au[c1];
            /*  1367 */
            byte b4 = au[c2];
            /*  1368 */
            byte b5 = au[b1];
            /*  1369 */
            byte b6 = au[b2];
            /*  1370 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1371 */
                return new byte[0];
                /*       */
            }
            /*  1373 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1374 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1375 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1376 */
            arrayOfByte[b++] = (byte) m;
            /*  1377 */
            if (b < i) {
                /*  1378 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1380 */
            if (b < i) {
                /*  1381 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1384 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] y(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1388 */
        if (paramInt2 % 4 != 0) {
            /*  1389 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1392 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1393 */
            paramInt2--;
            /*       */
        }
        /*  1395 */
        int i = paramInt2 * 3 / 4;
        /*  1396 */
        byte[] arrayOfByte = new byte[i];
        /*  1397 */
        int j = paramInt1;
        /*  1398 */
        int k = paramInt1 + paramInt2;
        /*  1399 */
        byte b = 0;
        /*  1400 */
        while (j < k) {
            /*  1401 */
            char c1 = paramArrayOfchar[j++];
            /*  1402 */
            char c2 = paramArrayOfchar[j++];
            /*  1403 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1404 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1406 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1407 */
                return new byte[0];
                /*       */
            }
            /*  1409 */
            byte b3 = au[c1];
            /*  1410 */
            byte b4 = au[c2];
            /*  1411 */
            byte b5 = au[b1];
            /*  1412 */
            byte b6 = au[b2];
            /*  1413 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1414 */
                return new byte[0];
                /*       */
            }
            /*  1416 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1417 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1418 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1419 */
            arrayOfByte[b++] = (byte) m;
            /*  1420 */
            if (b < i) {
                /*  1421 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1423 */
            if (b < i) {
                /*  1424 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1427 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] z(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1431 */
        if (paramInt2 % 4 != 0) {
            /*  1432 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1435 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1436 */
            paramInt2--;
            /*       */
        }
        /*  1438 */
        int i = paramInt2 * 3 / 4;
        /*  1439 */
        byte[] arrayOfByte = new byte[i];
        /*  1440 */
        int j = paramInt1;
        /*  1441 */
        int k = paramInt1 + paramInt2;
        /*  1442 */
        byte b = 0;
        /*  1443 */
        while (j < k) {
            /*  1444 */
            char c1 = paramArrayOfchar[j++];
            /*  1445 */
            char c2 = paramArrayOfchar[j++];
            /*  1446 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1447 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1449 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1450 */
                return new byte[0];
                /*       */
            }
            /*  1452 */
            byte b3 = au[c1];
            /*  1453 */
            byte b4 = au[c2];
            /*  1454 */
            byte b5 = au[b1];
            /*  1455 */
            byte b6 = au[b2];
            /*  1456 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1457 */
                return new byte[0];
                /*       */
            }
            /*  1459 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1460 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1461 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1462 */
            arrayOfByte[b++] = (byte) m;
            /*  1463 */
            if (b < i) {
                /*  1464 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1466 */
            if (b < i) {
                /*  1467 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1470 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] A(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1474 */
        if (paramInt2 % 4 != 0) {
            /*  1475 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1478 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1479 */
            paramInt2--;
            /*       */
        }
        /*  1481 */
        int i = paramInt2 * 3 / 4;
        /*  1482 */
        byte[] arrayOfByte = new byte[i];
        /*  1483 */
        int j = paramInt1;
        /*  1484 */
        int k = paramInt1 + paramInt2;
        /*  1485 */
        byte b = 0;
        /*  1486 */
        while (j < k) {
            /*  1487 */
            char c1 = paramArrayOfchar[j++];
            /*  1488 */
            char c2 = paramArrayOfchar[j++];
            /*  1489 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1490 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1492 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1493 */
                return new byte[0];
                /*       */
            }
            /*  1495 */
            byte b3 = au[c1];
            /*  1496 */
            byte b4 = au[c2];
            /*  1497 */
            byte b5 = au[b1];
            /*  1498 */
            byte b6 = au[b2];
            /*  1499 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1500 */
                return new byte[0];
                /*       */
            }
            /*  1502 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1503 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1504 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1505 */
            arrayOfByte[b++] = (byte) m;
            /*  1506 */
            if (b < i) {
                /*  1507 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1509 */
            if (b < i) {
                /*  1510 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1513 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] B(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1517 */
        if (paramInt2 % 4 != 0) {
            /*  1518 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1521 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1522 */
            paramInt2--;
            /*       */
        }
        /*  1524 */
        int i = paramInt2 * 3 / 4;
        /*  1525 */
        byte[] arrayOfByte = new byte[i];
        /*  1526 */
        int j = paramInt1;
        /*  1527 */
        int k = paramInt1 + paramInt2;
        /*  1528 */
        byte b = 0;
        /*  1529 */
        while (j < k) {
            /*  1530 */
            char c1 = paramArrayOfchar[j++];
            /*  1531 */
            char c2 = paramArrayOfchar[j++];
            /*  1532 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1533 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1535 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1536 */
                return new byte[0];
                /*       */
            }
            /*  1538 */
            byte b3 = au[c1];
            /*  1539 */
            byte b4 = au[c2];
            /*  1540 */
            byte b5 = au[b1];
            /*  1541 */
            byte b6 = au[b2];
            /*  1542 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1543 */
                return new byte[0];
                /*       */
            }
            /*  1545 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1546 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1547 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1548 */
            arrayOfByte[b++] = (byte) m;
            /*  1549 */
            if (b < i) {
                /*  1550 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1552 */
            if (b < i) {
                /*  1553 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1556 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] C(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1560 */
        if (paramInt2 % 4 != 0) {
            /*  1561 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1564 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1565 */
            paramInt2--;
            /*       */
        }
        /*  1567 */
        int i = paramInt2 * 3 / 4;
        /*  1568 */
        byte[] arrayOfByte = new byte[i];
        /*  1569 */
        int j = paramInt1;
        /*  1570 */
        int k = paramInt1 + paramInt2;
        /*  1571 */
        byte b = 0;
        /*  1572 */
        while (j < k) {
            /*  1573 */
            char c1 = paramArrayOfchar[j++];
            /*  1574 */
            char c2 = paramArrayOfchar[j++];
            /*  1575 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1576 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1578 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1579 */
                return new byte[0];
                /*       */
            }
            /*  1581 */
            byte b3 = au[c1];
            /*  1582 */
            byte b4 = au[c2];
            /*  1583 */
            byte b5 = au[b1];
            /*  1584 */
            byte b6 = au[b2];
            /*  1585 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1586 */
                return new byte[0];
                /*       */
            }
            /*  1588 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1589 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1590 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1591 */
            arrayOfByte[b++] = (byte) m;
            /*  1592 */
            if (b < i) {
                /*  1593 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1595 */
            if (b < i) {
                /*  1596 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1599 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] D(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1603 */
        if (paramInt2 % 4 != 0) {
            /*  1604 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1607 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1608 */
            paramInt2--;
            /*       */
        }
        /*  1610 */
        int i = paramInt2 * 3 / 4;
        /*  1611 */
        byte[] arrayOfByte = new byte[i];
        /*  1612 */
        int j = paramInt1;
        /*  1613 */
        int k = paramInt1 + paramInt2;
        /*  1614 */
        byte b = 0;
        /*  1615 */
        while (j < k) {
            /*  1616 */
            char c1 = paramArrayOfchar[j++];
            /*  1617 */
            char c2 = paramArrayOfchar[j++];
            /*  1618 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1619 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1621 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1622 */
                return new byte[0];
                /*       */
            }
            /*  1624 */
            byte b3 = au[c1];
            /*  1625 */
            byte b4 = au[c2];
            /*  1626 */
            byte b5 = au[b1];
            /*  1627 */
            byte b6 = au[b2];
            /*  1628 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1629 */
                return new byte[0];
                /*       */
            }
            /*  1631 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1632 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1633 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1634 */
            arrayOfByte[b++] = (byte) m;
            /*  1635 */
            if (b < i) {
                /*  1636 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1638 */
            if (b < i) {
                /*  1639 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1642 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] E(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1646 */
        if (paramInt2 % 4 != 0) {
            /*  1647 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1650 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1651 */
            paramInt2--;
            /*       */
        }
        /*  1653 */
        int i = paramInt2 * 3 / 4;
        /*  1654 */
        byte[] arrayOfByte = new byte[i];
        /*  1655 */
        int j = paramInt1;
        /*  1656 */
        int k = paramInt1 + paramInt2;
        /*  1657 */
        byte b = 0;
        /*  1658 */
        while (j < k) {
            /*  1659 */
            char c1 = paramArrayOfchar[j++];
            /*  1660 */
            char c2 = paramArrayOfchar[j++];
            /*  1661 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1662 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1664 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1665 */
                return new byte[0];
                /*       */
            }
            /*  1667 */
            byte b3 = au[c1];
            /*  1668 */
            byte b4 = au[c2];
            /*  1669 */
            byte b5 = au[b1];
            /*  1670 */
            byte b6 = au[b2];
            /*  1671 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1672 */
                return new byte[0];
                /*       */
            }
            /*  1674 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1675 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1676 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1677 */
            arrayOfByte[b++] = (byte) m;
            /*  1678 */
            if (b < i) {
                /*  1679 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1681 */
            if (b < i) {
                /*  1682 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1685 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] F(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1689 */
        if (paramInt2 % 4 != 0) {
            /*  1690 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1693 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1694 */
            paramInt2--;
            /*       */
        }
        /*  1696 */
        int i = paramInt2 * 3 / 4;
        /*  1697 */
        byte[] arrayOfByte = new byte[i];
        /*  1698 */
        int j = paramInt1;
        /*  1699 */
        int k = paramInt1 + paramInt2;
        /*  1700 */
        byte b = 0;
        /*  1701 */
        while (j < k) {
            /*  1702 */
            char c1 = paramArrayOfchar[j++];
            /*  1703 */
            char c2 = paramArrayOfchar[j++];
            /*  1704 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1705 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1707 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1708 */
                return new byte[0];
                /*       */
            }
            /*  1710 */
            byte b3 = au[c1];
            /*  1711 */
            byte b4 = au[c2];
            /*  1712 */
            byte b5 = au[b1];
            /*  1713 */
            byte b6 = au[b2];
            /*  1714 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1715 */
                return new byte[0];
                /*       */
            }
            /*  1717 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1718 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1719 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1720 */
            arrayOfByte[b++] = (byte) m;
            /*  1721 */
            if (b < i) {
                /*  1722 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1724 */
            if (b < i) {
                /*  1725 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1728 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] G(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1732 */
        if (paramInt2 % 4 != 0) {
            /*  1733 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1736 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1737 */
            paramInt2--;
            /*       */
        }
        /*  1739 */
        int i = paramInt2 * 3 / 4;
        /*  1740 */
        byte[] arrayOfByte = new byte[i];
        /*  1741 */
        int j = paramInt1;
        /*  1742 */
        int k = paramInt1 + paramInt2;
        /*  1743 */
        byte b = 0;
        /*  1744 */
        while (j < k) {
            /*  1745 */
            char c1 = paramArrayOfchar[j++];
            /*  1746 */
            char c2 = paramArrayOfchar[j++];
            /*  1747 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1748 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1750 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1751 */
                return new byte[0];
                /*       */
            }
            /*  1753 */
            byte b3 = au[c1];
            /*  1754 */
            byte b4 = au[c2];
            /*  1755 */
            byte b5 = au[b1];
            /*  1756 */
            byte b6 = au[b2];
            /*  1757 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1758 */
                return new byte[0];
                /*       */
            }
            /*  1760 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1761 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1762 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1763 */
            arrayOfByte[b++] = (byte) m;
            /*  1764 */
            if (b < i) {
                /*  1765 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1767 */
            if (b < i) {
                /*  1768 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1771 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] H(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1775 */
        if (paramInt2 % 4 != 0) {
            /*  1776 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1779 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1780 */
            paramInt2--;
            /*       */
        }
        /*  1782 */
        int i = paramInt2 * 3 / 4;
        /*  1783 */
        byte[] arrayOfByte = new byte[i];
        /*  1784 */
        int j = paramInt1;
        /*  1785 */
        int k = paramInt1 + paramInt2;
        /*  1786 */
        byte b = 0;
        /*  1787 */
        while (j < k) {
            /*  1788 */
            char c1 = paramArrayOfchar[j++];
            /*  1789 */
            char c2 = paramArrayOfchar[j++];
            /*  1790 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1791 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1793 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1794 */
                return new byte[0];
                /*       */
            }
            /*  1796 */
            byte b3 = au[c1];
            /*  1797 */
            byte b4 = au[c2];
            /*  1798 */
            byte b5 = au[b1];
            /*  1799 */
            byte b6 = au[b2];
            /*  1800 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1801 */
                return new byte[0];
                /*       */
            }
            /*  1803 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1804 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1805 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1806 */
            arrayOfByte[b++] = (byte) m;
            /*  1807 */
            if (b < i) {
                /*  1808 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1810 */
            if (b < i) {
                /*  1811 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1814 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] I(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1818 */
        if (paramInt2 % 4 != 0) {
            /*  1819 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1822 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1823 */
            paramInt2--;
            /*       */
        }
        /*  1825 */
        int i = paramInt2 * 3 / 4;
        /*  1826 */
        byte[] arrayOfByte = new byte[i];
        /*  1827 */
        int j = paramInt1;
        /*  1828 */
        int k = paramInt1 + paramInt2;
        /*  1829 */
        byte b = 0;
        /*  1830 */
        while (j < k) {
            /*  1831 */
            char c1 = paramArrayOfchar[j++];
            /*  1832 */
            char c2 = paramArrayOfchar[j++];
            /*  1833 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1834 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1836 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1837 */
                return new byte[0];
                /*       */
            }
            /*  1839 */
            byte b3 = au[c1];
            /*  1840 */
            byte b4 = au[c2];
            /*  1841 */
            byte b5 = au[b1];
            /*  1842 */
            byte b6 = au[b2];
            /*  1843 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1844 */
                return new byte[0];
                /*       */
            }
            /*  1846 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1847 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1848 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1849 */
            arrayOfByte[b++] = (byte) m;
            /*  1850 */
            if (b < i) {
                /*  1851 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1853 */
            if (b < i) {
                /*  1854 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1857 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] J(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1861 */
        if (paramInt2 % 4 != 0) {
            /*  1862 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1865 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1866 */
            paramInt2--;
            /*       */
        }
        /*  1868 */
        int i = paramInt2 * 3 / 4;
        /*  1869 */
        byte[] arrayOfByte = new byte[i];
        /*  1870 */
        int j = paramInt1;
        /*  1871 */
        int k = paramInt1 + paramInt2;
        /*  1872 */
        byte b = 0;
        /*  1873 */
        while (j < k) {
            /*  1874 */
            char c1 = paramArrayOfchar[j++];
            /*  1875 */
            char c2 = paramArrayOfchar[j++];
            /*  1876 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1877 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1879 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1880 */
                return new byte[0];
                /*       */
            }
            /*  1882 */
            byte b3 = au[c1];
            /*  1883 */
            byte b4 = au[c2];
            /*  1884 */
            byte b5 = au[b1];
            /*  1885 */
            byte b6 = au[b2];
            /*  1886 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1887 */
                return new byte[0];
                /*       */
            }
            /*  1889 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1890 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1891 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1892 */
            arrayOfByte[b++] = (byte) m;
            /*  1893 */
            if (b < i) {
                /*  1894 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1896 */
            if (b < i) {
                /*  1897 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1900 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] K(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1904 */
        if (paramInt2 % 4 != 0) {
            /*  1905 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1908 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1909 */
            paramInt2--;
            /*       */
        }
        /*  1911 */
        int i = paramInt2 * 3 / 4;
        /*  1912 */
        byte[] arrayOfByte = new byte[i];
        /*  1913 */
        int j = paramInt1;
        /*  1914 */
        int k = paramInt1 + paramInt2;
        /*  1915 */
        byte b = 0;
        /*  1916 */
        while (j < k) {
            /*  1917 */
            char c1 = paramArrayOfchar[j++];
            /*  1918 */
            char c2 = paramArrayOfchar[j++];
            /*  1919 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1920 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1922 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1923 */
                return new byte[0];
                /*       */
            }
            /*  1925 */
            byte b3 = au[c1];
            /*  1926 */
            byte b4 = au[c2];
            /*  1927 */
            byte b5 = au[b1];
            /*  1928 */
            byte b6 = au[b2];
            /*  1929 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1930 */
                return new byte[0];
                /*       */
            }
            /*  1932 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1933 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1934 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1935 */
            arrayOfByte[b++] = (byte) m;
            /*  1936 */
            if (b < i) {
                /*  1937 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1939 */
            if (b < i) {
                /*  1940 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1943 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] L(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  1947 */
        if (paramInt2 % 4 != 0) {
            /*  1948 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  1951 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  1952 */
            paramInt2--;
            /*       */
        }
        /*  1954 */
        int i = paramInt2 * 3 / 4;
        /*  1955 */
        byte[] arrayOfByte = new byte[i];
        /*  1956 */
        int j = paramInt1;
        /*  1957 */
        int k = paramInt1 + paramInt2;
        /*  1958 */
        byte b = 0;
        /*  1959 */
        while (j < k) {
            /*  1960 */
            char c1 = paramArrayOfchar[j++];
            /*  1961 */
            char c2 = paramArrayOfchar[j++];
            /*  1962 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  1963 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  1965 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  1966 */
                return new byte[0];
                /*       */
            }
            /*  1968 */
            byte b3 = au[c1];
            /*  1969 */
            byte b4 = au[c2];
            /*  1970 */
            byte b5 = au[b1];
            /*  1971 */
            byte b6 = au[b2];
            /*  1972 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  1973 */
                return new byte[0];
                /*       */
            }
            /*  1975 */
            int m = b3 << 2 | b4 >>> 4;
            /*  1976 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  1977 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  1978 */
            arrayOfByte[b++] = (byte) m;
            /*  1979 */
            if (b < i) {
                /*  1980 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  1982 */
            if (b < i) {
                /*  1983 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  1986 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */   class l
            /*       */ {
        /*       */ Policy.Parameters a;
        /*  1993 */     private double c = 0.0D;
        /*  1994 */     private double d = 0.0D;
        /*  1995 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public l(a this$0) {
            /*  2000 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*  2005 */
            if (param1Int == 0 || param1Int == 1)
                /*  2006 */ return 1;
            /*  2007 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*  2016 */
            double d = param1Double;
            /*  2017 */
            if (this.f == true)
                /*  2018 */ d = Math.toRadians(param1Double);
            /*  2019 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*  2024 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*  2030 */
            byte b1 = 0;
            /*  2031 */
            byte b2 = 0;
            /*  2032 */
            byte b3 = 40;
            /*  2033 */
            byte b4 = 41;
            /*  2034 */
            String str = param1String;
            /*  2035 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*  2036 */
                if (param1String.charAt(b5) == b3) {
                    /*  2037 */
                    b1++;
                    /*  2038 */
                } else if (param1String.charAt(b5) == b4) {
                    /*  2039 */
                    b2++;
                    /*       */
                }
                /*  2041 */
            }
            while (b1 > 0) {
                /*  2042 */
                str = str + b4;
                /*  2043 */
                b1--;
                /*       */
            }
            /*  2045 */
            while (b2 > 0) {
                /*  2046 */
                str = b3 + str;
                /*  2047 */
                b2--;
                /*       */
            }
            /*  2049 */
            str = b(str);
            /*  2050 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*  2055 */
            String str = "";
            /*  2056 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*  2057 */
                str = str + param1String.charAt(b);
                /*  2058 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*  2060 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*  2061 */ str = str + '*';
                    /*  2062 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*  2063 */ str = str + '1';
                    /*       */
                }
                /*  2065 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class m
            /*       */ {
        /*       */ Policy.Parameters a;
        /*  2073 */     private double c = 0.0D;
        /*  2074 */     private double d = 0.0D;
        /*  2075 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public m(a this$0) {
            /*  2080 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*  2085 */
            if (param1Int == 0 || param1Int == 1)
                /*  2086 */ return 1;
            /*  2087 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*  2096 */
            double d = param1Double;
            /*  2097 */
            if (this.f == true)
                /*  2098 */ d = Math.toRadians(param1Double);
            /*  2099 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*  2104 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*  2110 */
            byte b1 = 0;
            /*  2111 */
            byte b2 = 0;
            /*  2112 */
            byte b3 = 40;
            /*  2113 */
            byte b4 = 41;
            /*  2114 */
            String str = param1String;
            /*  2115 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*  2116 */
                if (param1String.charAt(b5) == b3) {
                    /*  2117 */
                    b1++;
                    /*  2118 */
                } else if (param1String.charAt(b5) == b4) {
                    /*  2119 */
                    b2++;
                    /*       */
                }
                /*  2121 */
            }
            while (b1 > 0) {
                /*  2122 */
                str = str + b4;
                /*  2123 */
                b1--;
                /*       */
            }
            /*  2125 */
            while (b2 > 0) {
                /*  2126 */
                str = b3 + str;
                /*  2127 */
                b2--;
                /*       */
            }
            /*  2129 */
            str = b(str);
            /*  2130 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*  2135 */
            String str = "";
            /*  2136 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*  2137 */
                str = str + param1String.charAt(b);
                /*  2138 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*  2140 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*  2141 */ str = str + '*';
                    /*  2142 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*  2143 */ str = str + '1';
                    /*       */
                }
                /*  2145 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class o
            /*       */ {
        /*       */ Policy.Parameters a;
        /*  2153 */     private double c = 0.0D;
        /*  2154 */     private double d = 0.0D;
        /*  2155 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public o(a this$0) {
            /*  2160 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*  2165 */
            if (param1Int == 0 || param1Int == 1)
                /*  2166 */ return 1;
            /*  2167 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*  2176 */
            double d = param1Double;
            /*  2177 */
            if (this.f == true)
                /*  2178 */ d = Math.toRadians(param1Double);
            /*  2179 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*  2184 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*  2190 */
            byte b1 = 0;
            /*  2191 */
            byte b2 = 0;
            /*  2192 */
            byte b3 = 40;
            /*  2193 */
            byte b4 = 41;
            /*  2194 */
            String str = param1String;
            /*  2195 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*  2196 */
                if (param1String.charAt(b5) == b3) {
                    /*  2197 */
                    b1++;
                    /*  2198 */
                } else if (param1String.charAt(b5) == b4) {
                    /*  2199 */
                    b2++;
                    /*       */
                }
                /*  2201 */
            }
            while (b1 > 0) {
                /*  2202 */
                str = str + b4;
                /*  2203 */
                b1--;
                /*       */
            }
            /*  2205 */
            while (b2 > 0) {
                /*  2206 */
                str = b3 + str;
                /*  2207 */
                b2--;
                /*       */
            }
            /*  2209 */
            str = b(str);
            /*  2210 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*  2215 */
            String str = "";
            /*  2216 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*  2217 */
                str = str + param1String.charAt(b);
                /*  2218 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*  2220 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*  2221 */ str = str + '*';
                    /*  2222 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*  2223 */ str = str + '1';
                    /*       */
                }
                /*  2225 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    private static byte[] M(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  2230 */
        if (paramInt2 % 4 != 0) {
            /*  2231 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  2234 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  2235 */
            paramInt2--;
            /*       */
        }
        /*  2237 */
        int i = paramInt2 * 3 / 4;
        /*  2238 */
        byte[] arrayOfByte = new byte[i];
        /*  2239 */
        int j = paramInt1;
        /*  2240 */
        int k = paramInt1 + paramInt2;
        /*  2241 */
        byte b = 0;
        /*  2242 */
        while (j < k) {
            /*  2243 */
            char c1 = paramArrayOfchar[j++];
            /*  2244 */
            char c2 = paramArrayOfchar[j++];
            /*  2245 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  2246 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  2248 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  2249 */
                return new byte[0];
                /*       */
            }
            /*  2251 */
            byte b3 = au[c1];
            /*  2252 */
            byte b4 = au[c2];
            /*  2253 */
            byte b5 = au[b1];
            /*  2254 */
            byte b6 = au[b2];
            /*  2255 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  2256 */
                return new byte[0];
                /*       */
            }
            /*  2258 */
            int m = b3 << 2 | b4 >>> 4;
            /*  2259 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  2260 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  2261 */
            arrayOfByte[b++] = (byte) m;
            /*  2262 */
            if (b < i) {
                /*  2263 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  2265 */
            if (b < i) {
                /*  2266 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  2269 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] N(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  2273 */
        if (paramInt2 % 4 != 0) {
            /*  2274 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  2277 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  2278 */
            paramInt2--;
            /*       */
        }
        /*  2280 */
        int i = paramInt2 * 3 / 4;
        /*  2281 */
        byte[] arrayOfByte = new byte[i];
        /*  2282 */
        int j = paramInt1;
        /*  2283 */
        int k = paramInt1 + paramInt2;
        /*  2284 */
        byte b = 0;
        /*  2285 */
        while (j < k) {
            /*  2286 */
            char c1 = paramArrayOfchar[j++];
            /*  2287 */
            char c2 = paramArrayOfchar[j++];
            /*  2288 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  2289 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  2291 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  2292 */
                return new byte[0];
                /*       */
            }
            /*  2294 */
            byte b3 = au[c1];
            /*  2295 */
            byte b4 = au[c2];
            /*  2296 */
            byte b5 = au[b1];
            /*  2297 */
            byte b6 = au[b2];
            /*  2298 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  2299 */
                return new byte[0];
                /*       */
            }
            /*  2301 */
            int m = b3 << 2 | b4 >>> 4;
            /*  2302 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  2303 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  2304 */
            arrayOfByte[b++] = (byte) m;
            /*  2305 */
            if (b < i) {
                /*  2306 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  2308 */
            if (b < i) {
                /*  2309 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  2312 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] O(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  2316 */
        if (paramInt2 % 4 != 0) {
            /*  2317 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  2320 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  2321 */
            paramInt2--;
            /*       */
        }
        /*  2323 */
        int i = paramInt2 * 3 / 4;
        /*  2324 */
        byte[] arrayOfByte = new byte[i];
        /*  2325 */
        int j = paramInt1;
        /*  2326 */
        int k = paramInt1 + paramInt2;
        /*  2327 */
        byte b = 0;
        /*  2328 */
        while (j < k) {
            /*  2329 */
            char c1 = paramArrayOfchar[j++];
            /*  2330 */
            char c2 = paramArrayOfchar[j++];
            /*  2331 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  2332 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  2334 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  2335 */
                return new byte[0];
                /*       */
            }
            /*  2337 */
            byte b3 = au[c1];
            /*  2338 */
            byte b4 = au[c2];
            /*  2339 */
            byte b5 = au[b1];
            /*  2340 */
            byte b6 = au[b2];
            /*  2341 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  2342 */
                return new byte[0];
                /*       */
            }
            /*  2344 */
            int m = b3 << 2 | b4 >>> 4;
            /*  2345 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  2346 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  2347 */
            arrayOfByte[b++] = (byte) m;
            /*  2348 */
            if (b < i) {
                /*  2349 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  2351 */
            if (b < i) {
                /*  2352 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  2355 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] P(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  2359 */
        if (paramInt2 % 4 != 0) {
            /*  2360 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  2363 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  2364 */
            paramInt2--;
            /*       */
        }
        /*  2366 */
        int i = paramInt2 * 3 / 4;
        /*  2367 */
        byte[] arrayOfByte = new byte[i];
        /*  2368 */
        int j = paramInt1;
        /*  2369 */
        int k = paramInt1 + paramInt2;
        /*  2370 */
        byte b = 0;
        /*  2371 */
        while (j < k) {
            /*  2372 */
            char c1 = paramArrayOfchar[j++];
            /*  2373 */
            char c2 = paramArrayOfchar[j++];
            /*  2374 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  2375 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  2377 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  2378 */
                return new byte[0];
                /*       */
            }
            /*  2380 */
            byte b3 = au[c1];
            /*  2381 */
            byte b4 = au[c2];
            /*  2382 */
            byte b5 = au[b1];
            /*  2383 */
            byte b6 = au[b2];
            /*  2384 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  2385 */
                return new byte[0];
                /*       */
            }
            /*  2387 */
            int m = b3 << 2 | b4 >>> 4;
            /*  2388 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  2389 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  2390 */
            arrayOfByte[b++] = (byte) m;
            /*  2391 */
            if (b < i) {
                /*  2392 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  2394 */
            if (b < i) {
                /*  2395 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  2398 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] Q(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  2402 */
        if (paramInt2 % 4 != 0) {
            /*  2403 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  2406 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  2407 */
            paramInt2--;
            /*       */
        }
        /*  2409 */
        int i = paramInt2 * 3 / 4;
        /*  2410 */
        byte[] arrayOfByte = new byte[i];
        /*  2411 */
        int j = paramInt1;
        /*  2412 */
        int k = paramInt1 + paramInt2;
        /*  2413 */
        byte b = 0;
        /*  2414 */
        while (j < k) {
            /*  2415 */
            char c1 = paramArrayOfchar[j++];
            /*  2416 */
            char c2 = paramArrayOfchar[j++];
            /*  2417 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  2418 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  2420 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  2421 */
                return new byte[0];
                /*       */
            }
            /*  2423 */
            byte b3 = au[c1];
            /*  2424 */
            byte b4 = au[c2];
            /*  2425 */
            byte b5 = au[b1];
            /*  2426 */
            byte b6 = au[b2];
            /*  2427 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  2428 */
                return new byte[0];
                /*       */
            }
            /*  2430 */
            int m = b3 << 2 | b4 >>> 4;
            /*  2431 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  2432 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  2433 */
            arrayOfByte[b++] = (byte) m;
            /*  2434 */
            if (b < i) {
                /*  2435 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  2437 */
            if (b < i) {
                /*  2438 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  2441 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] R(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  2445 */
        if (paramInt2 % 4 != 0) {
            /*  2446 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  2449 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  2450 */
            paramInt2--;
            /*       */
        }
        /*  2452 */
        int i = paramInt2 * 3 / 4;
        /*  2453 */
        byte[] arrayOfByte = new byte[i];
        /*  2454 */
        int j = paramInt1;
        /*  2455 */
        int k = paramInt1 + paramInt2;
        /*  2456 */
        byte b = 0;
        /*  2457 */
        while (j < k) {
            /*  2458 */
            char c1 = paramArrayOfchar[j++];
            /*  2459 */
            char c2 = paramArrayOfchar[j++];
            /*  2460 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  2461 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  2463 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  2464 */
                return new byte[0];
                /*       */
            }
            /*  2466 */
            byte b3 = au[c1];
            /*  2467 */
            byte b4 = au[c2];
            /*  2468 */
            byte b5 = au[b1];
            /*  2469 */
            byte b6 = au[b2];
            /*  2470 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  2471 */
                return new byte[0];
                /*       */
            }
            /*  2473 */
            int m = b3 << 2 | b4 >>> 4;
            /*  2474 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  2475 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  2476 */
            arrayOfByte[b++] = (byte) m;
            /*  2477 */
            if (b < i) {
                /*  2478 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  2480 */
            if (b < i) {
                /*  2481 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  2484 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] S(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  2488 */
        if (paramInt2 % 4 != 0) {
            /*  2489 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  2492 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  2493 */
            paramInt2--;
            /*       */
        }
        /*  2495 */
        int i = paramInt2 * 3 / 4;
        /*  2496 */
        byte[] arrayOfByte = new byte[i];
        /*  2497 */
        int j = paramInt1;
        /*  2498 */
        int k = paramInt1 + paramInt2;
        /*  2499 */
        byte b = 0;
        /*  2500 */
        while (j < k) {
            /*  2501 */
            char c1 = paramArrayOfchar[j++];
            /*  2502 */
            char c2 = paramArrayOfchar[j++];
            /*  2503 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  2504 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  2506 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  2507 */
                return new byte[0];
                /*       */
            }
            /*  2509 */
            byte b3 = au[c1];
            /*  2510 */
            byte b4 = au[c2];
            /*  2511 */
            byte b5 = au[b1];
            /*  2512 */
            byte b6 = au[b2];
            /*  2513 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  2514 */
                return new byte[0];
                /*       */
            }
            /*  2516 */
            int m = b3 << 2 | b4 >>> 4;
            /*  2517 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  2518 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  2519 */
            arrayOfByte[b++] = (byte) m;
            /*  2520 */
            if (b < i) {
                /*  2521 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  2523 */
            if (b < i) {
                /*  2524 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  2527 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] T(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  2531 */
        if (paramInt2 % 4 != 0) {
            /*  2532 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  2535 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  2536 */
            paramInt2--;
            /*       */
        }
        /*  2538 */
        int i = paramInt2 * 3 / 4;
        /*  2539 */
        byte[] arrayOfByte = new byte[i];
        /*  2540 */
        int j = paramInt1;
        /*  2541 */
        int k = paramInt1 + paramInt2;
        /*  2542 */
        byte b = 0;
        /*  2543 */
        while (j < k) {
            /*  2544 */
            char c1 = paramArrayOfchar[j++];
            /*  2545 */
            char c2 = paramArrayOfchar[j++];
            /*  2546 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  2547 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  2549 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  2550 */
                return new byte[0];
                /*       */
            }
            /*  2552 */
            byte b3 = au[c1];
            /*  2553 */
            byte b4 = au[c2];
            /*  2554 */
            byte b5 = au[b1];
            /*  2555 */
            byte b6 = au[b2];
            /*  2556 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  2557 */
                return new byte[0];
                /*       */
            }
            /*  2559 */
            int m = b3 << 2 | b4 >>> 4;
            /*  2560 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  2561 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  2562 */
            arrayOfByte[b++] = (byte) m;
            /*  2563 */
            if (b < i) {
                /*  2564 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  2566 */
            if (b < i) {
                /*  2567 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  2570 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] U(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  2574 */
        if (paramInt2 % 4 != 0) {
            /*  2575 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  2578 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  2579 */
            paramInt2--;
            /*       */
        }
        /*  2581 */
        int i = paramInt2 * 3 / 4;
        /*  2582 */
        byte[] arrayOfByte = new byte[i];
        /*  2583 */
        int j = paramInt1;
        /*  2584 */
        int k = paramInt1 + paramInt2;
        /*  2585 */
        byte b = 0;
        /*  2586 */
        while (j < k) {
            /*  2587 */
            char c1 = paramArrayOfchar[j++];
            /*  2588 */
            char c2 = paramArrayOfchar[j++];
            /*  2589 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  2590 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  2592 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  2593 */
                return new byte[0];
                /*       */
            }
            /*  2595 */
            byte b3 = au[c1];
            /*  2596 */
            byte b4 = au[c2];
            /*  2597 */
            byte b5 = au[b1];
            /*  2598 */
            byte b6 = au[b2];
            /*  2599 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  2600 */
                return new byte[0];
                /*       */
            }
            /*  2602 */
            int m = b3 << 2 | b4 >>> 4;
            /*  2603 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  2604 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  2605 */
            arrayOfByte[b++] = (byte) m;
            /*  2606 */
            if (b < i) {
                /*  2607 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  2609 */
            if (b < i) {
                /*  2610 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  2613 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] V(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  2617 */
        if (paramInt2 % 4 != 0) {
            /*  2618 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  2621 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  2622 */
            paramInt2--;
            /*       */
        }
        /*  2624 */
        int i = paramInt2 * 3 / 4;
        /*  2625 */
        byte[] arrayOfByte = new byte[i];
        /*  2626 */
        int j = paramInt1;
        /*  2627 */
        int k = paramInt1 + paramInt2;
        /*  2628 */
        byte b = 0;
        /*  2629 */
        while (j < k) {
            /*  2630 */
            char c1 = paramArrayOfchar[j++];
            /*  2631 */
            char c2 = paramArrayOfchar[j++];
            /*  2632 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  2633 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  2635 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  2636 */
                return new byte[0];
                /*       */
            }
            /*  2638 */
            byte b3 = au[c1];
            /*  2639 */
            byte b4 = au[c2];
            /*  2640 */
            byte b5 = au[b1];
            /*  2641 */
            byte b6 = au[b2];
            /*  2642 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  2643 */
                return new byte[0];
                /*       */
            }
            /*  2645 */
            int m = b3 << 2 | b4 >>> 4;
            /*  2646 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  2647 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  2648 */
            arrayOfByte[b++] = (byte) m;
            /*  2649 */
            if (b < i) {
                /*  2650 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  2652 */
            if (b < i) {
                /*  2653 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  2656 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] W(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  2660 */
        if (paramInt2 % 4 != 0) {
            /*  2661 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  2664 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  2665 */
            paramInt2--;
            /*       */
        }
        /*  2667 */
        int i = paramInt2 * 3 / 4;
        /*  2668 */
        byte[] arrayOfByte = new byte[i];
        /*  2669 */
        int j = paramInt1;
        /*  2670 */
        int k = paramInt1 + paramInt2;
        /*  2671 */
        byte b = 0;
        /*  2672 */
        while (j < k) {
            /*  2673 */
            char c1 = paramArrayOfchar[j++];
            /*  2674 */
            char c2 = paramArrayOfchar[j++];
            /*  2675 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  2676 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  2678 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  2679 */
                return new byte[0];
                /*       */
            }
            /*  2681 */
            byte b3 = au[c1];
            /*  2682 */
            byte b4 = au[c2];
            /*  2683 */
            byte b5 = au[b1];
            /*  2684 */
            byte b6 = au[b2];
            /*  2685 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  2686 */
                return new byte[0];
                /*       */
            }
            /*  2688 */
            int m = b3 << 2 | b4 >>> 4;
            /*  2689 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  2690 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  2691 */
            arrayOfByte[b++] = (byte) m;
            /*  2692 */
            if (b < i) {
                /*  2693 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  2695 */
            if (b < i) {
                /*  2696 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  2699 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] X(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  2704 */
        if (paramInt2 % 4 != 0) {
            /*  2705 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  2708 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  2709 */
            paramInt2--;
            /*       */
        }
        /*  2711 */
        int i = paramInt2 * 3 / 4;
        /*  2712 */
        byte[] arrayOfByte = new byte[i];
        /*  2713 */
        int j = paramInt1;
        /*  2714 */
        int k = paramInt1 + paramInt2;
        /*  2715 */
        byte b = 0;
        /*  2716 */
        while (j < k) {
            /*  2717 */
            char c1 = paramArrayOfchar[j++];
            /*  2718 */
            char c2 = paramArrayOfchar[j++];
            /*  2719 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  2720 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  2722 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  2723 */
                return new byte[0];
                /*       */
            }
            /*  2725 */
            byte b3 = au[c1];
            /*  2726 */
            byte b4 = au[c2];
            /*  2727 */
            byte b5 = au[b1];
            /*  2728 */
            byte b6 = au[b2];
            /*  2729 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  2730 */
                return new byte[0];
                /*       */
            }
            /*  2732 */
            int m = b3 << 2 | b4 >>> 4;
            /*  2733 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  2734 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  2735 */
            arrayOfByte[b++] = (byte) m;
            /*  2736 */
            if (b < i) {
                /*  2737 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  2739 */
            if (b < i) {
                /*  2740 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  2743 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */   class p
            /*       */ {
        /*       */ Policy.Parameters a;
        /*  2750 */     private double c = 0.0D;
        /*  2751 */     private double d = 0.0D;
        /*  2752 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public p(a this$0) {
            /*  2757 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*  2762 */
            if (param1Int == 0 || param1Int == 1)
                /*  2763 */ return 1;
            /*  2764 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*  2773 */
            double d = param1Double;
            /*  2774 */
            if (this.f == true)
                /*  2775 */ d = Math.toRadians(param1Double);
            /*  2776 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*  2781 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*  2787 */
            byte b1 = 0;
            /*  2788 */
            byte b2 = 0;
            /*  2789 */
            byte b3 = 40;
            /*  2790 */
            byte b4 = 41;
            /*  2791 */
            String str = param1String;
            /*  2792 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*  2793 */
                if (param1String.charAt(b5) == b3) {
                    /*  2794 */
                    b1++;
                    /*  2795 */
                } else if (param1String.charAt(b5) == b4) {
                    /*  2796 */
                    b2++;
                    /*       */
                }
                /*  2798 */
            }
            while (b1 > 0) {
                /*  2799 */
                str = str + b4;
                /*  2800 */
                b1--;
                /*       */
            }
            /*  2802 */
            while (b2 > 0) {
                /*  2803 */
                str = b3 + str;
                /*  2804 */
                b2--;
                /*       */
            }
            /*  2806 */
            str = b(str);
            /*  2807 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*  2812 */
            String str = "";
            /*  2813 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*  2814 */
                str = str + param1String.charAt(b);
                /*  2815 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*  2817 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*  2818 */ str = str + '*';
                    /*  2819 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*  2820 */ str = str + '1';
                    /*       */
                }
                /*  2822 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class q
            /*       */ {
        /*       */ Policy.Parameters a;
        /*  2830 */     private double c = 0.0D;
        /*  2831 */     private double d = 0.0D;
        /*  2832 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public q(a this$0) {
            /*  2837 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*  2842 */
            if (param1Int == 0 || param1Int == 1)
                /*  2843 */ return 1;
            /*  2844 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*  2853 */
            double d = param1Double;
            /*  2854 */
            if (this.f == true)
                /*  2855 */ d = Math.toRadians(param1Double);
            /*  2856 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*  2861 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*  2867 */
            byte b1 = 0;
            /*  2868 */
            byte b2 = 0;
            /*  2869 */
            byte b3 = 40;
            /*  2870 */
            byte b4 = 41;
            /*  2871 */
            String str = param1String;
            /*  2872 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*  2873 */
                if (param1String.charAt(b5) == b3) {
                    /*  2874 */
                    b1++;
                    /*  2875 */
                } else if (param1String.charAt(b5) == b4) {
                    /*  2876 */
                    b2++;
                    /*       */
                }
                /*  2878 */
            }
            while (b1 > 0) {
                /*  2879 */
                str = str + b4;
                /*  2880 */
                b1--;
                /*       */
            }
            /*  2882 */
            while (b2 > 0) {
                /*  2883 */
                str = b3 + str;
                /*  2884 */
                b2--;
                /*       */
            }
            /*  2886 */
            str = b(str);
            /*  2887 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*  2892 */
            String str = "";
            /*  2893 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*  2894 */
                str = str + param1String.charAt(b);
                /*  2895 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*  2897 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*  2898 */ str = str + '*';
                    /*  2899 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*  2900 */ str = str + '1';
                    /*       */
                }
                /*  2902 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    private static byte[] Y(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  2907 */
        if (paramInt2 % 4 != 0) {
            /*  2908 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  2911 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  2912 */
            paramInt2--;
            /*       */
        }
        /*  2914 */
        int i = paramInt2 * 3 / 4;
        /*  2915 */
        byte[] arrayOfByte = new byte[i];
        /*  2916 */
        int j = paramInt1;
        /*  2917 */
        int k = paramInt1 + paramInt2;
        /*  2918 */
        byte b = 0;
        /*  2919 */
        while (j < k) {
            /*  2920 */
            char c1 = paramArrayOfchar[j++];
            /*  2921 */
            char c2 = paramArrayOfchar[j++];
            /*  2922 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  2923 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  2925 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  2926 */
                return new byte[0];
                /*       */
            }
            /*  2928 */
            byte b3 = au[c1];
            /*  2929 */
            byte b4 = au[c2];
            /*  2930 */
            byte b5 = au[b1];
            /*  2931 */
            byte b6 = au[b2];
            /*  2932 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  2933 */
                return new byte[0];
                /*       */
            }
            /*  2935 */
            int m = b3 << 2 | b4 >>> 4;
            /*  2936 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  2937 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  2938 */
            arrayOfByte[b++] = (byte) m;
            /*  2939 */
            if (b < i) {
                /*  2940 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  2942 */
            if (b < i) {
                /*  2943 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  2946 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] Z(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  2950 */
        if (paramInt2 % 4 != 0) {
            /*  2951 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  2954 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  2955 */
            paramInt2--;
            /*       */
        }
        /*  2957 */
        int i = paramInt2 * 3 / 4;
        /*  2958 */
        byte[] arrayOfByte = new byte[i];
        /*  2959 */
        int j = paramInt1;
        /*  2960 */
        int k = paramInt1 + paramInt2;
        /*  2961 */
        byte b = 0;
        /*  2962 */
        while (j < k) {
            /*  2963 */
            char c1 = paramArrayOfchar[j++];
            /*  2964 */
            char c2 = paramArrayOfchar[j++];
            /*  2965 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  2966 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  2968 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  2969 */
                return new byte[0];
                /*       */
            }
            /*  2971 */
            byte b3 = au[c1];
            /*  2972 */
            byte b4 = au[c2];
            /*  2973 */
            byte b5 = au[b1];
            /*  2974 */
            byte b6 = au[b2];
            /*  2975 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  2976 */
                return new byte[0];
                /*       */
            }
            /*  2978 */
            int m = b3 << 2 | b4 >>> 4;
            /*  2979 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  2980 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  2981 */
            arrayOfByte[b++] = (byte) m;
            /*  2982 */
            if (b < i) {
                /*  2983 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  2985 */
            if (b < i) {
                /*  2986 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  2989 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aa(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  2993 */
        if (paramInt2 % 4 != 0) {
            /*  2994 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  2997 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  2998 */
            paramInt2--;
            /*       */
        }
        /*  3000 */
        int i = paramInt2 * 3 / 4;
        /*  3001 */
        byte[] arrayOfByte = new byte[i];
        /*  3002 */
        int j = paramInt1;
        /*  3003 */
        int k = paramInt1 + paramInt2;
        /*  3004 */
        byte b = 0;
        /*  3005 */
        while (j < k) {
            /*  3006 */
            char c1 = paramArrayOfchar[j++];
            /*  3007 */
            char c2 = paramArrayOfchar[j++];
            /*  3008 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3009 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3011 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3012 */
                return new byte[0];
                /*       */
            }
            /*  3014 */
            byte b3 = au[c1];
            /*  3015 */
            byte b4 = au[c2];
            /*  3016 */
            byte b5 = au[b1];
            /*  3017 */
            byte b6 = au[b2];
            /*  3018 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3019 */
                return new byte[0];
                /*       */
            }
            /*  3021 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3022 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3023 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3024 */
            arrayOfByte[b++] = (byte) m;
            /*  3025 */
            if (b < i) {
                /*  3026 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3028 */
            if (b < i) {
                /*  3029 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3032 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ab(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  3036 */
        if (paramInt2 % 4 != 0) {
            /*  3037 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  3040 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  3041 */
            paramInt2--;
            /*       */
        }
        /*  3043 */
        int i = paramInt2 * 3 / 4;
        /*  3044 */
        byte[] arrayOfByte = new byte[i];
        /*  3045 */
        int j = paramInt1;
        /*  3046 */
        int k = paramInt1 + paramInt2;
        /*  3047 */
        byte b = 0;
        /*  3048 */
        while (j < k) {
            /*  3049 */
            char c1 = paramArrayOfchar[j++];
            /*  3050 */
            char c2 = paramArrayOfchar[j++];
            /*  3051 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3052 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3054 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3055 */
                return new byte[0];
                /*       */
            }
            /*  3057 */
            byte b3 = au[c1];
            /*  3058 */
            byte b4 = au[c2];
            /*  3059 */
            byte b5 = au[b1];
            /*  3060 */
            byte b6 = au[b2];
            /*  3061 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3062 */
                return new byte[0];
                /*       */
            }
            /*  3064 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3065 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3066 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3067 */
            arrayOfByte[b++] = (byte) m;
            /*  3068 */
            if (b < i) {
                /*  3069 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3071 */
            if (b < i) {
                /*  3072 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3075 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ac(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  3079 */
        if (paramInt2 % 4 != 0) {
            /*  3080 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  3083 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  3084 */
            paramInt2--;
            /*       */
        }
        /*  3086 */
        int i = paramInt2 * 3 / 4;
        /*  3087 */
        byte[] arrayOfByte = new byte[i];
        /*  3088 */
        int j = paramInt1;
        /*  3089 */
        int k = paramInt1 + paramInt2;
        /*  3090 */
        byte b = 0;
        /*  3091 */
        while (j < k) {
            /*  3092 */
            char c1 = paramArrayOfchar[j++];
            /*  3093 */
            char c2 = paramArrayOfchar[j++];
            /*  3094 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3095 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3097 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3098 */
                return new byte[0];
                /*       */
            }
            /*  3100 */
            byte b3 = au[c1];
            /*  3101 */
            byte b4 = au[c2];
            /*  3102 */
            byte b5 = au[b1];
            /*  3103 */
            byte b6 = au[b2];
            /*  3104 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3105 */
                return new byte[0];
                /*       */
            }
            /*  3107 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3108 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3109 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3110 */
            arrayOfByte[b++] = (byte) m;
            /*  3111 */
            if (b < i) {
                /*  3112 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3114 */
            if (b < i) {
                /*  3115 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3118 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ad(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  3122 */
        if (paramInt2 % 4 != 0) {
            /*  3123 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  3126 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  3127 */
            paramInt2--;
            /*       */
        }
        /*  3129 */
        int i = paramInt2 * 3 / 4;
        /*  3130 */
        byte[] arrayOfByte = new byte[i];
        /*  3131 */
        int j = paramInt1;
        /*  3132 */
        int k = paramInt1 + paramInt2;
        /*  3133 */
        byte b = 0;
        /*  3134 */
        while (j < k) {
            /*  3135 */
            char c1 = paramArrayOfchar[j++];
            /*  3136 */
            char c2 = paramArrayOfchar[j++];
            /*  3137 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3138 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3140 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3141 */
                return new byte[0];
                /*       */
            }
            /*  3143 */
            byte b3 = au[c1];
            /*  3144 */
            byte b4 = au[c2];
            /*  3145 */
            byte b5 = au[b1];
            /*  3146 */
            byte b6 = au[b2];
            /*  3147 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3148 */
                return new byte[0];
                /*       */
            }
            /*  3150 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3151 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3152 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3153 */
            arrayOfByte[b++] = (byte) m;
            /*  3154 */
            if (b < i) {
                /*  3155 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3157 */
            if (b < i) {
                /*  3158 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3161 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ae(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  3165 */
        if (paramInt2 % 4 != 0) {
            /*  3166 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  3169 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  3170 */
            paramInt2--;
            /*       */
        }
        /*  3172 */
        int i = paramInt2 * 3 / 4;
        /*  3173 */
        byte[] arrayOfByte = new byte[i];
        /*  3174 */
        int j = paramInt1;
        /*  3175 */
        int k = paramInt1 + paramInt2;
        /*  3176 */
        byte b = 0;
        /*  3177 */
        while (j < k) {
            /*  3178 */
            char c1 = paramArrayOfchar[j++];
            /*  3179 */
            char c2 = paramArrayOfchar[j++];
            /*  3180 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3181 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3183 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3184 */
                return new byte[0];
                /*       */
            }
            /*  3186 */
            byte b3 = au[c1];
            /*  3187 */
            byte b4 = au[c2];
            /*  3188 */
            byte b5 = au[b1];
            /*  3189 */
            byte b6 = au[b2];
            /*  3190 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3191 */
                return new byte[0];
                /*       */
            }
            /*  3193 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3194 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3195 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3196 */
            arrayOfByte[b++] = (byte) m;
            /*  3197 */
            if (b < i) {
                /*  3198 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3200 */
            if (b < i) {
                /*  3201 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3204 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] af(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  3208 */
        if (paramInt2 % 4 != 0) {
            /*  3209 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  3212 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  3213 */
            paramInt2--;
            /*       */
        }
        /*  3215 */
        int i = paramInt2 * 3 / 4;
        /*  3216 */
        byte[] arrayOfByte = new byte[i];
        /*  3217 */
        int j = paramInt1;
        /*  3218 */
        int k = paramInt1 + paramInt2;
        /*  3219 */
        byte b = 0;
        /*  3220 */
        while (j < k) {
            /*  3221 */
            char c1 = paramArrayOfchar[j++];
            /*  3222 */
            char c2 = paramArrayOfchar[j++];
            /*  3223 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3224 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3226 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3227 */
                return new byte[0];
                /*       */
            }
            /*  3229 */
            byte b3 = au[c1];
            /*  3230 */
            byte b4 = au[c2];
            /*  3231 */
            byte b5 = au[b1];
            /*  3232 */
            byte b6 = au[b2];
            /*  3233 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3234 */
                return new byte[0];
                /*       */
            }
            /*  3236 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3237 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3238 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3239 */
            arrayOfByte[b++] = (byte) m;
            /*  3240 */
            if (b < i) {
                /*  3241 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3243 */
            if (b < i) {
                /*  3244 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3247 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ag(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  3251 */
        if (paramInt2 % 4 != 0) {
            /*  3252 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  3255 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  3256 */
            paramInt2--;
            /*       */
        }
        /*  3258 */
        int i = paramInt2 * 3 / 4;
        /*  3259 */
        byte[] arrayOfByte = new byte[i];
        /*  3260 */
        int j = paramInt1;
        /*  3261 */
        int k = paramInt1 + paramInt2;
        /*  3262 */
        byte b = 0;
        /*  3263 */
        while (j < k) {
            /*  3264 */
            char c1 = paramArrayOfchar[j++];
            /*  3265 */
            char c2 = paramArrayOfchar[j++];
            /*  3266 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3267 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3269 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3270 */
                return new byte[0];
                /*       */
            }
            /*  3272 */
            byte b3 = au[c1];
            /*  3273 */
            byte b4 = au[c2];
            /*  3274 */
            byte b5 = au[b1];
            /*  3275 */
            byte b6 = au[b2];
            /*  3276 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3277 */
                return new byte[0];
                /*       */
            }
            /*  3279 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3280 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3281 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3282 */
            arrayOfByte[b++] = (byte) m;
            /*  3283 */
            if (b < i) {
                /*  3284 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3286 */
            if (b < i) {
                /*  3287 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3290 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ah(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  3294 */
        if (paramInt2 % 4 != 0) {
            /*  3295 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  3298 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  3299 */
            paramInt2--;
            /*       */
        }
        /*  3301 */
        int i = paramInt2 * 3 / 4;
        /*  3302 */
        byte[] arrayOfByte = new byte[i];
        /*  3303 */
        int j = paramInt1;
        /*  3304 */
        int k = paramInt1 + paramInt2;
        /*  3305 */
        byte b = 0;
        /*  3306 */
        while (j < k) {
            /*  3307 */
            char c1 = paramArrayOfchar[j++];
            /*  3308 */
            char c2 = paramArrayOfchar[j++];
            /*  3309 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3310 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3312 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3313 */
                return new byte[0];
                /*       */
            }
            /*  3315 */
            byte b3 = au[c1];
            /*  3316 */
            byte b4 = au[c2];
            /*  3317 */
            byte b5 = au[b1];
            /*  3318 */
            byte b6 = au[b2];
            /*  3319 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3320 */
                return new byte[0];
                /*       */
            }
            /*  3322 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3323 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3324 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3325 */
            arrayOfByte[b++] = (byte) m;
            /*  3326 */
            if (b < i) {
                /*  3327 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3329 */
            if (b < i) {
                /*  3330 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3333 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ai(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  3337 */
        if (paramInt2 % 4 != 0) {
            /*  3338 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  3341 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  3342 */
            paramInt2--;
            /*       */
        }
        /*  3344 */
        int i = paramInt2 * 3 / 4;
        /*  3345 */
        byte[] arrayOfByte = new byte[i];
        /*  3346 */
        int j = paramInt1;
        /*  3347 */
        int k = paramInt1 + paramInt2;
        /*  3348 */
        byte b = 0;
        /*  3349 */
        while (j < k) {
            /*  3350 */
            char c1 = paramArrayOfchar[j++];
            /*  3351 */
            char c2 = paramArrayOfchar[j++];
            /*  3352 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3353 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3355 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3356 */
                return new byte[0];
                /*       */
            }
            /*  3358 */
            byte b3 = au[c1];
            /*  3359 */
            byte b4 = au[c2];
            /*  3360 */
            byte b5 = au[b1];
            /*  3361 */
            byte b6 = au[b2];
            /*  3362 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3363 */
                return new byte[0];
                /*       */
            }
            /*  3365 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3366 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3367 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3368 */
            arrayOfByte[b++] = (byte) m;
            /*  3369 */
            if (b < i) {
                /*  3370 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3372 */
            if (b < i) {
                /*  3373 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3376 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aj(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  3380 */
        if (paramInt2 % 4 != 0) {
            /*  3381 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  3384 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  3385 */
            paramInt2--;
            /*       */
        }
        /*  3387 */
        int i = paramInt2 * 3 / 4;
        /*  3388 */
        byte[] arrayOfByte = new byte[i];
        /*  3389 */
        int j = paramInt1;
        /*  3390 */
        int k = paramInt1 + paramInt2;
        /*  3391 */
        byte b = 0;
        /*  3392 */
        while (j < k) {
            /*  3393 */
            char c1 = paramArrayOfchar[j++];
            /*  3394 */
            char c2 = paramArrayOfchar[j++];
            /*  3395 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3396 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3398 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3399 */
                return new byte[0];
                /*       */
            }
            /*  3401 */
            byte b3 = au[c1];
            /*  3402 */
            byte b4 = au[c2];
            /*  3403 */
            byte b5 = au[b1];
            /*  3404 */
            byte b6 = au[b2];
            /*  3405 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3406 */
                return new byte[0];
                /*       */
            }
            /*  3408 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3409 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3410 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3411 */
            arrayOfByte[b++] = (byte) m;
            /*  3412 */
            if (b < i) {
                /*  3413 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3415 */
            if (b < i) {
                /*  3416 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3419 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ak(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  3423 */
        if (paramInt2 % 4 != 0) {
            /*  3424 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  3427 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  3428 */
            paramInt2--;
            /*       */
        }
        /*  3430 */
        int i = paramInt2 * 3 / 4;
        /*  3431 */
        byte[] arrayOfByte = new byte[i];
        /*  3432 */
        int j = paramInt1;
        /*  3433 */
        int k = paramInt1 + paramInt2;
        /*  3434 */
        byte b = 0;
        /*  3435 */
        while (j < k) {
            /*  3436 */
            char c1 = paramArrayOfchar[j++];
            /*  3437 */
            char c2 = paramArrayOfchar[j++];
            /*  3438 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3439 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3441 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3442 */
                return new byte[0];
                /*       */
            }
            /*  3444 */
            byte b3 = au[c1];
            /*  3445 */
            byte b4 = au[c2];
            /*  3446 */
            byte b5 = au[b1];
            /*  3447 */
            byte b6 = au[b2];
            /*  3448 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3449 */
                return new byte[0];
                /*       */
            }
            /*  3451 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3452 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3453 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3454 */
            arrayOfByte[b++] = (byte) m;
            /*  3455 */
            if (b < i) {
                /*  3456 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3458 */
            if (b < i) {
                /*  3459 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3462 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] al(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  3466 */
        if (paramInt2 % 4 != 0) {
            /*  3467 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  3470 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  3471 */
            paramInt2--;
            /*       */
        }
        /*  3473 */
        int i = paramInt2 * 3 / 4;
        /*  3474 */
        byte[] arrayOfByte = new byte[i];
        /*  3475 */
        int j = paramInt1;
        /*  3476 */
        int k = paramInt1 + paramInt2;
        /*  3477 */
        byte b = 0;
        /*  3478 */
        while (j < k) {
            /*  3479 */
            char c1 = paramArrayOfchar[j++];
            /*  3480 */
            char c2 = paramArrayOfchar[j++];
            /*  3481 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3482 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3484 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3485 */
                return new byte[0];
                /*       */
            }
            /*  3487 */
            byte b3 = au[c1];
            /*  3488 */
            byte b4 = au[c2];
            /*  3489 */
            byte b5 = au[b1];
            /*  3490 */
            byte b6 = au[b2];
            /*  3491 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3492 */
                return new byte[0];
                /*       */
            }
            /*  3494 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3495 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3496 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3497 */
            arrayOfByte[b++] = (byte) m;
            /*  3498 */
            if (b < i) {
                /*  3499 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3501 */
            if (b < i) {
                /*  3502 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3505 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] am(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  3509 */
        if (paramInt2 % 4 != 0) {
            /*  3510 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  3513 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  3514 */
            paramInt2--;
            /*       */
        }
        /*  3516 */
        int i = paramInt2 * 3 / 4;
        /*  3517 */
        byte[] arrayOfByte = new byte[i];
        /*  3518 */
        int j = paramInt1;
        /*  3519 */
        int k = paramInt1 + paramInt2;
        /*  3520 */
        byte b = 0;
        /*  3521 */
        while (j < k) {
            /*  3522 */
            char c1 = paramArrayOfchar[j++];
            /*  3523 */
            char c2 = paramArrayOfchar[j++];
            /*  3524 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3525 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3527 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3528 */
                return new byte[0];
                /*       */
            }
            /*  3530 */
            byte b3 = au[c1];
            /*  3531 */
            byte b4 = au[c2];
            /*  3532 */
            byte b5 = au[b1];
            /*  3533 */
            byte b6 = au[b2];
            /*  3534 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3535 */
                return new byte[0];
                /*       */
            }
            /*  3537 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3538 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3539 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3540 */
            arrayOfByte[b++] = (byte) m;
            /*  3541 */
            if (b < i) {
                /*  3542 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3544 */
            if (b < i) {
                /*  3545 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3548 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] an(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  3552 */
        if (paramInt2 % 4 != 0) {
            /*  3553 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  3556 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  3557 */
            paramInt2--;
            /*       */
        }
        /*  3559 */
        int i = paramInt2 * 3 / 4;
        /*  3560 */
        byte[] arrayOfByte = new byte[i];
        /*  3561 */
        int j = paramInt1;
        /*  3562 */
        int k = paramInt1 + paramInt2;
        /*  3563 */
        byte b = 0;
        /*  3564 */
        while (j < k) {
            /*  3565 */
            char c1 = paramArrayOfchar[j++];
            /*  3566 */
            char c2 = paramArrayOfchar[j++];
            /*  3567 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3568 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3570 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3571 */
                return new byte[0];
                /*       */
            }
            /*  3573 */
            byte b3 = au[c1];
            /*  3574 */
            byte b4 = au[c2];
            /*  3575 */
            byte b5 = au[b1];
            /*  3576 */
            byte b6 = au[b2];
            /*  3577 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3578 */
                return new byte[0];
                /*       */
            }
            /*  3580 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3581 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3582 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3583 */
            arrayOfByte[b++] = (byte) m;
            /*  3584 */
            if (b < i) {
                /*  3585 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3587 */
            if (b < i) {
                /*  3588 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3591 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ao(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  3595 */
        if (paramInt2 % 4 != 0) {
            /*  3596 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  3599 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  3600 */
            paramInt2--;
            /*       */
        }
        /*  3602 */
        int i = paramInt2 * 3 / 4;
        /*  3603 */
        byte[] arrayOfByte = new byte[i];
        /*  3604 */
        int j = paramInt1;
        /*  3605 */
        int k = paramInt1 + paramInt2;
        /*  3606 */
        byte b = 0;
        /*  3607 */
        while (j < k) {
            /*  3608 */
            char c1 = paramArrayOfchar[j++];
            /*  3609 */
            char c2 = paramArrayOfchar[j++];
            /*  3610 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3611 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3613 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3614 */
                return new byte[0];
                /*       */
            }
            /*  3616 */
            byte b3 = au[c1];
            /*  3617 */
            byte b4 = au[c2];
            /*  3618 */
            byte b5 = au[b1];
            /*  3619 */
            byte b6 = au[b2];
            /*  3620 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3621 */
                return new byte[0];
                /*       */
            }
            /*  3623 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3624 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3625 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3626 */
            arrayOfByte[b++] = (byte) m;
            /*  3627 */
            if (b < i) {
                /*  3628 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3630 */
            if (b < i) {
                /*  3631 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3634 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ap(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  3638 */
        if (paramInt2 % 4 != 0) {
            /*  3639 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  3642 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  3643 */
            paramInt2--;
            /*       */
        }
        /*  3645 */
        int i = paramInt2 * 3 / 4;
        /*  3646 */
        byte[] arrayOfByte = new byte[i];
        /*  3647 */
        int j = paramInt1;
        /*  3648 */
        int k = paramInt1 + paramInt2;
        /*  3649 */
        byte b = 0;
        /*  3650 */
        while (j < k) {
            /*  3651 */
            char c1 = paramArrayOfchar[j++];
            /*  3652 */
            char c2 = paramArrayOfchar[j++];
            /*  3653 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  3654 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  3656 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  3657 */
                return new byte[0];
                /*       */
            }
            /*  3659 */
            byte b3 = au[c1];
            /*  3660 */
            byte b4 = au[c2];
            /*  3661 */
            byte b5 = au[b1];
            /*  3662 */
            byte b6 = au[b2];
            /*  3663 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  3664 */
                return new byte[0];
                /*       */
            }
            /*  3666 */
            int m = b3 << 2 | b4 >>> 4;
            /*  3667 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  3668 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  3669 */
            arrayOfByte[b++] = (byte) m;
            /*  3670 */
            if (b < i) {
                /*  3671 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  3673 */
            if (b < i) {
                /*  3674 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  3677 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */   class r
            /*       */ {
        /*       */ Policy.Parameters a;
        /*       */
        /*  3685 */     private double c = 0.0D;
        /*  3686 */     private double d = 0.0D;
        /*  3687 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public r(a this$0) {
            /*  3692 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*  3697 */
            if (param1Int == 0 || param1Int == 1)
                /*  3698 */ return 1;
            /*  3699 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*  3708 */
            double d = param1Double;
            /*  3709 */
            if (this.f == true)
                /*  3710 */ d = Math.toRadians(param1Double);
            /*  3711 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*  3716 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*  3722 */
            byte b1 = 0;
            /*  3723 */
            byte b2 = 0;
            /*  3724 */
            byte b3 = 40;
            /*  3725 */
            byte b4 = 41;
            /*  3726 */
            String str = param1String;
            /*  3727 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*  3728 */
                if (param1String.charAt(b5) == b3) {
                    /*  3729 */
                    b1++;
                    /*  3730 */
                } else if (param1String.charAt(b5) == b4) {
                    /*  3731 */
                    b2++;
                    /*       */
                }
                /*  3733 */
            }
            while (b1 > 0) {
                /*  3734 */
                str = str + b4;
                /*  3735 */
                b1--;
                /*       */
            }
            /*  3737 */
            while (b2 > 0) {
                /*  3738 */
                str = b3 + str;
                /*  3739 */
                b2--;
                /*       */
            }
            /*  3741 */
            str = b(str);
            /*  3742 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*  3747 */
            String str = "";
            /*  3748 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*  3749 */
                str = str + param1String.charAt(b);
                /*  3750 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*  3752 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*  3753 */ str = str + '*';
                    /*  3754 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*  3755 */ str = str + '1';
                    /*       */
                }
                /*  3757 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class s
            /*       */ {
        /*       */ Policy.Parameters a;
        /*  3765 */     private double c = 0.0D;
        /*  3766 */     private double d = 0.0D;
        /*  3767 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public s(a this$0) {
            /*  3772 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*  3777 */
            if (param1Int == 0 || param1Int == 1)
                /*  3778 */ return 1;
            /*  3779 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*  3788 */
            double d = param1Double;
            /*  3789 */
            if (this.f == true)
                /*  3790 */ d = Math.toRadians(param1Double);
            /*  3791 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*  3796 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*  3802 */
            byte b1 = 0;
            /*  3803 */
            byte b2 = 0;
            /*  3804 */
            byte b3 = 40;
            /*  3805 */
            byte b4 = 41;
            /*  3806 */
            String str = param1String;
            /*  3807 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*  3808 */
                if (param1String.charAt(b5) == b3) {
                    /*  3809 */
                    b1++;
                    /*  3810 */
                } else if (param1String.charAt(b5) == b4) {
                    /*  3811 */
                    b2++;
                    /*       */
                }
                /*  3813 */
            }
            while (b1 > 0) {
                /*  3814 */
                str = str + b4;
                /*  3815 */
                b1--;
                /*       */
            }
            /*  3817 */
            while (b2 > 0) {
                /*  3818 */
                str = b3 + str;
                /*  3819 */
                b2--;
                /*       */
            }
            /*  3821 */
            str = b(str);
            /*  3822 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*  3827 */
            String str = "";
            /*  3828 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*  3829 */
                str = str + param1String.charAt(b);
                /*  3830 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*  3832 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*  3833 */ str = str + '*';
                    /*  3834 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*  3835 */ str = str + '1';
                    /*       */
                }
                /*  3837 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */
    /*       */
    /*  3844 */   private static int b = 2;
    /*       */
    /*  3846 */   private static char c = '\n';
    /*       */
    /*       */   private static final char d = '=';
    /*       */   private static final char e = '+';
    /*       */   private static final char f = '/';

    /*       */
    /*       */   class t
            /*       */ {
        /*       */ Policy.Parameters a;
        /*  3855 */     private double c = 0.0D;
        /*  3856 */     private double d = 0.0D;
        /*  3857 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public t(a this$0) {
            /*  3862 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*  3867 */
            if (param1Int == 0 || param1Int == 1)
                /*  3868 */ return 1;
            /*  3869 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*  3878 */
            double d = param1Double;
            /*  3879 */
            if (this.f == true)
                /*  3880 */ d = Math.toRadians(param1Double);
            /*  3881 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*  3886 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*  3892 */
            byte b1 = 0;
            /*  3893 */
            byte b2 = 0;
            /*  3894 */
            byte b3 = 40;
            /*  3895 */
            byte b4 = 41;
            /*  3896 */
            String str = param1String;
            /*  3897 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*  3898 */
                if (param1String.charAt(b5) == b3) {
                    /*  3899 */
                    b1++;
                    /*  3900 */
                } else if (param1String.charAt(b5) == b4) {
                    /*  3901 */
                    b2++;
                    /*       */
                }
                /*  3903 */
            }
            while (b1 > 0) {
                /*  3904 */
                str = str + b4;
                /*  3905 */
                b1--;
                /*       */
            }
            /*  3907 */
            while (b2 > 0) {
                /*  3908 */
                str = b3 + str;
                /*  3909 */
                b2--;
                /*       */
            }
            /*  3911 */
            str = b(str);
            /*  3912 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*  3917 */
            String str = "";
            /*  3918 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*  3919 */
                str = str + param1String.charAt(b);
                /*  3920 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*  3922 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*  3923 */ str = str + '*';
                    /*  3924 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*  3925 */ str = str + '1';
                    /*       */
                }
                /*  3927 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class u
            /*       */ {
        /*       */ Policy.Parameters a;
        /*  3935 */     private double c = 0.0D;
        /*  3936 */     private double d = 0.0D;
        /*  3937 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public u(a this$0) {
            /*  3942 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*  3947 */
            if (param1Int == 0 || param1Int == 1)
                /*  3948 */ return 1;
            /*  3949 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*  3958 */
            double d = param1Double;
            /*  3959 */
            if (this.f == true)
                /*  3960 */ d = Math.toRadians(param1Double);
            /*  3961 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*  3966 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*  3972 */
            byte b1 = 0;
            /*  3973 */
            byte b2 = 0;
            /*  3974 */
            byte b3 = 40;
            /*  3975 */
            byte b4 = 41;
            /*  3976 */
            String str = param1String;
            /*  3977 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*  3978 */
                if (param1String.charAt(b5) == b3) {
                    /*  3979 */
                    b1++;
                    /*  3980 */
                } else if (param1String.charAt(b5) == b4) {
                    /*  3981 */
                    b2++;
                    /*       */
                }
                /*  3983 */
            }
            while (b1 > 0) {
                /*  3984 */
                str = str + b4;
                /*  3985 */
                b1--;
                /*       */
            }
            /*  3987 */
            while (b2 > 0) {
                /*  3988 */
                str = b3 + str;
                /*  3989 */
                b2--;
                /*       */
            }
            /*  3991 */
            str = b(str);
            /*  3992 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*  3997 */
            String str = "";
            /*  3998 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*  3999 */
                str = str + param1String.charAt(b);
                /*  4000 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*  4002 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*  4003 */ str = str + '*';
                    /*  4004 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*  4005 */ str = str + '1';
                    /*       */
                }
                /*  4007 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class v
            /*       */ {
        /*       */ Policy.Parameters a;
        /*  4015 */     private double c = 0.0D;
        /*  4016 */     private double d = 0.0D;
        /*  4017 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public v(a this$0) {
            /*  4022 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*  4027 */
            if (param1Int == 0 || param1Int == 1)
                /*  4028 */ return 1;
            /*  4029 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*  4038 */
            double d = param1Double;
            /*  4039 */
            if (this.f == true)
                /*  4040 */ d = Math.toRadians(param1Double);
            /*  4041 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*  4046 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*  4052 */
            byte b1 = 0;
            /*  4053 */
            byte b2 = 0;
            /*  4054 */
            byte b3 = 40;
            /*  4055 */
            byte b4 = 41;
            /*  4056 */
            String str = param1String;
            /*  4057 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*  4058 */
                if (param1String.charAt(b5) == b3) {
                    /*  4059 */
                    b1++;
                    /*  4060 */
                } else if (param1String.charAt(b5) == b4) {
                    /*  4061 */
                    b2++;
                    /*       */
                }
                /*  4063 */
            }
            while (b1 > 0) {
                /*  4064 */
                str = str + b4;
                /*  4065 */
                b1--;
                /*       */
            }
            /*  4067 */
            while (b2 > 0) {
                /*  4068 */
                str = b3 + str;
                /*  4069 */
                b2--;
                /*       */
            }
            /*  4071 */
            str = b(str);
            /*  4072 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*  4077 */
            String str = "";
            /*  4078 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*  4079 */
                str = str + param1String.charAt(b);
                /*  4080 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*  4082 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*  4083 */ str = str + '*';
                    /*  4084 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*  4085 */ str = str + '1';
                    /*       */
                }
                /*  4087 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class w
            /*       */ {
        /*       */ Policy.Parameters a;
        /*  4095 */     private double c = 0.0D;
        /*  4096 */     private double d = 0.0D;
        /*  4097 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public w(a this$0) {
            /*  4102 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*  4107 */
            if (param1Int == 0 || param1Int == 1)
                /*  4108 */ return 1;
            /*  4109 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*  4118 */
            double d = param1Double;
            /*  4119 */
            if (this.f == true)
                /*  4120 */ d = Math.toRadians(param1Double);
            /*  4121 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*  4126 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*  4132 */
            byte b1 = 0;
            /*  4133 */
            byte b2 = 0;
            /*  4134 */
            byte b3 = 40;
            /*  4135 */
            byte b4 = 41;
            /*  4136 */
            String str = param1String;
            /*  4137 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*  4138 */
                if (param1String.charAt(b5) == b3) {
                    /*  4139 */
                    b1++;
                    /*  4140 */
                } else if (param1String.charAt(b5) == b4) {
                    /*  4141 */
                    b2++;
                    /*       */
                }
                /*  4143 */
            }
            while (b1 > 0) {
                /*  4144 */
                str = str + b4;
                /*  4145 */
                b1--;
                /*       */
            }
            /*  4147 */
            while (b2 > 0) {
                /*  4148 */
                str = b3 + str;
                /*  4149 */
                b2--;
                /*       */
            }
            /*  4151 */
            str = b(str);
            /*  4152 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*  4157 */
            String str = "";
            /*  4158 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*  4159 */
                str = str + param1String.charAt(b);
                /*  4160 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*  4162 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*  4163 */ str = str + '*';
                    /*  4164 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*  4165 */ str = str + '1';
                    /*       */
                }
                /*  4167 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class x
            /*       */ {
        /*       */ Policy.Parameters a;
        /*  4175 */     private double c = 0.0D;
        /*  4176 */     private double d = 0.0D;
        /*  4177 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public x(a this$0) {
            /*  4182 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /*  4187 */
            if (param1Int == 0 || param1Int == 1)
                /*  4188 */ return 1;
            /*  4189 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /*  4198 */
            double d = param1Double;
            /*  4199 */
            if (this.f == true)
                /*  4200 */ d = Math.toRadians(param1Double);
            /*  4201 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /*  4206 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /*  4212 */
            byte b1 = 0;
            /*  4213 */
            byte b2 = 0;
            /*  4214 */
            byte b3 = 40;
            /*  4215 */
            byte b4 = 41;
            /*  4216 */
            String str = param1String;
            /*  4217 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /*  4218 */
                if (param1String.charAt(b5) == b3) {
                    /*  4219 */
                    b1++;
                    /*  4220 */
                } else if (param1String.charAt(b5) == b4) {
                    /*  4221 */
                    b2++;
                    /*       */
                }
                /*  4223 */
            }
            while (b1 > 0) {
                /*  4224 */
                str = str + b4;
                /*  4225 */
                b1--;
                /*       */
            }
            /*  4227 */
            while (b2 > 0) {
                /*  4228 */
                str = b3 + str;
                /*  4229 */
                b2--;
                /*       */
            }
            /*  4231 */
            str = b(str);
            /*  4232 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /*  4237 */
            String str = "";
            /*  4238 */
            for (byte b = 0; b < param1String.length(); b++) {
                /*  4239 */
                str = str + param1String.charAt(b);
                /*  4240 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /*  4242 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /*  4243 */ str = str + '*';
                    /*  4244 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /*  4245 */ str = str + '1';
                    /*       */
                }
                /*  4247 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] aq(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4253 */
        if (paramInt2 % 4 != 0) {
            /*  4254 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4257 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4258 */
            paramInt2--;
            /*       */
        }
        /*  4260 */
        int i = paramInt2 * 3 / 4;
        /*  4261 */
        byte[] arrayOfByte = new byte[i];
        /*  4262 */
        int j = paramInt1;
        /*  4263 */
        int k = paramInt1 + paramInt2;
        /*  4264 */
        byte b = 0;
        /*  4265 */
        while (j < k) {
            /*  4266 */
            char c1 = paramArrayOfchar[j++];
            /*  4267 */
            char c2 = paramArrayOfchar[j++];
            /*  4268 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4269 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4271 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4272 */
                return new byte[0];
                /*       */
            }
            /*  4274 */
            byte b3 = au[c1];
            /*  4275 */
            byte b4 = au[c2];
            /*  4276 */
            byte b5 = au[b1];
            /*  4277 */
            byte b6 = au[b2];
            /*  4278 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4279 */
                return new byte[0];
                /*       */
            }
            /*  4281 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4282 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4283 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4284 */
            arrayOfByte[b++] = (byte) m;
            /*  4285 */
            if (b < i) {
                /*  4286 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4288 */
            if (b < i) {
                /*  4289 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4292 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ar(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4296 */
        if (paramInt2 % 4 != 0) {
            /*  4297 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4300 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4301 */
            paramInt2--;
            /*       */
        }
        /*  4303 */
        int i = paramInt2 * 3 / 4;
        /*  4304 */
        byte[] arrayOfByte = new byte[i];
        /*  4305 */
        int j = paramInt1;
        /*  4306 */
        int k = paramInt1 + paramInt2;
        /*  4307 */
        byte b = 0;
        /*  4308 */
        while (j < k) {
            /*  4309 */
            char c1 = paramArrayOfchar[j++];
            /*  4310 */
            char c2 = paramArrayOfchar[j++];
            /*  4311 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4312 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4314 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4315 */
                return new byte[0];
                /*       */
            }
            /*  4317 */
            byte b3 = au[c1];
            /*  4318 */
            byte b4 = au[c2];
            /*  4319 */
            byte b5 = au[b1];
            /*  4320 */
            byte b6 = au[b2];
            /*  4321 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4322 */
                return new byte[0];
                /*       */
            }
            /*  4324 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4325 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4326 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4327 */
            arrayOfByte[b++] = (byte) m;
            /*  4328 */
            if (b < i) {
                /*  4329 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4331 */
            if (b < i) {
                /*  4332 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4335 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*  4338 */   private static String g = "MbPeShVm";
    /*       */
    /*  4340 */   private static char[] h = new char[64];
    /*  4341 */   private static char[] i = new char[64];
    /*  4342 */   private static char[] j = new char[64];
    /*  4343 */   private static char[] k = new char[64];

    /*       */
    /*       */
    private static byte[] as(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4346 */
        if (paramInt2 % 4 != 0) {
            /*  4347 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4350 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4351 */
            paramInt2--;
            /*       */
        }
        /*  4353 */
        int i = paramInt2 * 3 / 4;
        /*  4354 */
        byte[] arrayOfByte = new byte[i];
        /*  4355 */
        int j = paramInt1;
        /*  4356 */
        int k = paramInt1 + paramInt2;
        /*  4357 */
        byte b = 0;
        /*  4358 */
        while (j < k) {
            /*  4359 */
            char c1 = paramArrayOfchar[j++];
            /*  4360 */
            char c2 = paramArrayOfchar[j++];
            /*  4361 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4362 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4364 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4365 */
                return new byte[0];
                /*       */
            }
            /*  4367 */
            byte b3 = au[c1];
            /*  4368 */
            byte b4 = au[c2];
            /*  4369 */
            byte b5 = au[b1];
            /*  4370 */
            byte b6 = au[b2];
            /*  4371 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4372 */
                return new byte[0];
                /*       */
            }
            /*  4374 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4375 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4376 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4377 */
            arrayOfByte[b++] = (byte) m;
            /*  4378 */
            if (b < i) {
                /*  4379 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4381 */
            if (b < i) {
                /*  4382 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4385 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] at(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4389 */
        if (paramInt2 % 4 != 0) {
            /*  4390 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4393 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4394 */
            paramInt2--;
            /*       */
        }
        /*  4396 */
        int i = paramInt2 * 3 / 4;
        /*  4397 */
        byte[] arrayOfByte = new byte[i];
        /*  4398 */
        int j = paramInt1;
        /*  4399 */
        int k = paramInt1 + paramInt2;
        /*  4400 */
        byte b = 0;
        /*  4401 */
        while (j < k) {
            /*  4402 */
            char c1 = paramArrayOfchar[j++];
            /*  4403 */
            char c2 = paramArrayOfchar[j++];
            /*  4404 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4405 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4407 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4408 */
                return new byte[0];
                /*       */
            }
            /*  4410 */
            byte b3 = au[c1];
            /*  4411 */
            byte b4 = au[c2];
            /*  4412 */
            byte b5 = au[b1];
            /*  4413 */
            byte b6 = au[b2];
            /*  4414 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4415 */
                return new byte[0];
                /*       */
            }
            /*  4417 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4418 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4419 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4420 */
            arrayOfByte[b++] = (byte) m;
            /*  4421 */
            if (b < i) {
                /*  4422 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4424 */
            if (b < i) {
                /*  4425 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4428 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] au(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4432 */
        if (paramInt2 % 4 != 0) {
            /*  4433 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4436 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4437 */
            paramInt2--;
            /*       */
        }
        /*  4439 */
        int i = paramInt2 * 3 / 4;
        /*  4440 */
        byte[] arrayOfByte = new byte[i];
        /*  4441 */
        int j = paramInt1;
        /*  4442 */
        int k = paramInt1 + paramInt2;
        /*  4443 */
        byte b = 0;
        /*  4444 */
        while (j < k) {
            /*  4445 */
            char c1 = paramArrayOfchar[j++];
            /*  4446 */
            char c2 = paramArrayOfchar[j++];
            /*  4447 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4448 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4450 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4451 */
                return new byte[0];
                /*       */
            }
            /*  4453 */
            byte b3 = au[c1];
            /*  4454 */
            byte b4 = au[c2];
            /*  4455 */
            byte b5 = au[b1];
            /*  4456 */
            byte b6 = au[b2];
            /*  4457 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4458 */
                return new byte[0];
                /*       */
            }
            /*  4460 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4461 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4462 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4463 */
            arrayOfByte[b++] = (byte) m;
            /*  4464 */
            if (b < i) {
                /*  4465 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4467 */
            if (b < i) {
                /*  4468 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4471 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] av(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4476 */
        if (paramInt2 % 4 != 0) {
            /*  4477 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4480 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4481 */
            paramInt2--;
            /*       */
        }
        /*  4483 */
        int i = paramInt2 * 3 / 4;
        /*  4484 */
        byte[] arrayOfByte = new byte[i];
        /*  4485 */
        int j = paramInt1;
        /*  4486 */
        int k = paramInt1 + paramInt2;
        /*  4487 */
        byte b = 0;
        /*  4488 */
        while (j < k) {
            /*  4489 */
            char c1 = paramArrayOfchar[j++];
            /*  4490 */
            char c2 = paramArrayOfchar[j++];
            /*  4491 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4492 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4494 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4495 */
                return new byte[0];
                /*       */
            }
            /*  4497 */
            byte b3 = au[c1];
            /*  4498 */
            byte b4 = au[c2];
            /*  4499 */
            byte b5 = au[b1];
            /*  4500 */
            byte b6 = au[b2];
            /*  4501 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4502 */
                return new byte[0];
                /*       */
            }
            /*  4504 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4505 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4506 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4507 */
            arrayOfByte[b++] = (byte) m;
            /*  4508 */
            if (b < i) {
                /*  4509 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4511 */
            if (b < i) {
                /*  4512 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4515 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aw(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4519 */
        if (paramInt2 % 4 != 0) {
            /*  4520 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4523 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4524 */
            paramInt2--;
            /*       */
        }
        /*  4526 */
        int i = paramInt2 * 3 / 4;
        /*  4527 */
        byte[] arrayOfByte = new byte[i];
        /*  4528 */
        int j = paramInt1;
        /*  4529 */
        int k = paramInt1 + paramInt2;
        /*  4530 */
        byte b = 0;
        /*  4531 */
        while (j < k) {
            /*  4532 */
            char c1 = paramArrayOfchar[j++];
            /*  4533 */
            char c2 = paramArrayOfchar[j++];
            /*  4534 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4535 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4537 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4538 */
                return new byte[0];
                /*       */
            }
            /*  4540 */
            byte b3 = au[c1];
            /*  4541 */
            byte b4 = au[c2];
            /*  4542 */
            byte b5 = au[b1];
            /*  4543 */
            byte b6 = au[b2];
            /*  4544 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4545 */
                return new byte[0];
                /*       */
            }
            /*  4547 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4548 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4549 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4550 */
            arrayOfByte[b++] = (byte) m;
            /*  4551 */
            if (b < i) {
                /*  4552 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4554 */
            if (b < i) {
                /*  4555 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4558 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ax(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4562 */
        if (paramInt2 % 4 != 0) {
            /*  4563 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4566 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4567 */
            paramInt2--;
            /*       */
        }
        /*  4569 */
        int i = paramInt2 * 3 / 4;
        /*  4570 */
        byte[] arrayOfByte = new byte[i];
        /*  4571 */
        int j = paramInt1;
        /*  4572 */
        int k = paramInt1 + paramInt2;
        /*  4573 */
        byte b = 0;
        /*  4574 */
        while (j < k) {
            /*  4575 */
            char c1 = paramArrayOfchar[j++];
            /*  4576 */
            char c2 = paramArrayOfchar[j++];
            /*  4577 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4578 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4580 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4581 */
                return new byte[0];
                /*       */
            }
            /*  4583 */
            byte b3 = au[c1];
            /*  4584 */
            byte b4 = au[c2];
            /*  4585 */
            byte b5 = au[b1];
            /*  4586 */
            byte b6 = au[b2];
            /*  4587 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4588 */
                return new byte[0];
                /*       */
            }
            /*  4590 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4591 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4592 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4593 */
            arrayOfByte[b++] = (byte) m;
            /*  4594 */
            if (b < i) {
                /*  4595 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4597 */
            if (b < i) {
                /*  4598 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4601 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*  4604 */   private static char[] l = new char[64];
    /*  4605 */   private static char[] m = new char[64];
    /*  4606 */   private static char[] n = new char[64];
    /*  4607 */   private static char[] o = new char[64];
    /*  4608 */   private static char[] p = new char[64];
    /*  4609 */   private static char[] q = new char[64];
    /*  4610 */   private static char[] r = new char[64];
    /*  4611 */   private static char[] s = new char[64];

    /*       */
    /*       */
    private static byte[] ay(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4614 */
        if (paramInt2 % 4 != 0) {
            /*  4615 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4618 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4619 */
            paramInt2--;
            /*       */
        }
        /*  4621 */
        int i = paramInt2 * 3 / 4;
        /*  4622 */
        byte[] arrayOfByte = new byte[i];
        /*  4623 */
        int j = paramInt1;
        /*  4624 */
        int k = paramInt1 + paramInt2;
        /*  4625 */
        byte b = 0;
        /*  4626 */
        while (j < k) {
            /*  4627 */
            char c1 = paramArrayOfchar[j++];
            /*  4628 */
            char c2 = paramArrayOfchar[j++];
            /*  4629 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4630 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4632 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4633 */
                return new byte[0];
                /*       */
            }
            /*  4635 */
            byte b3 = au[c1];
            /*  4636 */
            byte b4 = au[c2];
            /*  4637 */
            byte b5 = au[b1];
            /*  4638 */
            byte b6 = au[b2];
            /*  4639 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4640 */
                return new byte[0];
                /*       */
            }
            /*  4642 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4643 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4644 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4645 */
            arrayOfByte[b++] = (byte) m;
            /*  4646 */
            if (b < i) {
                /*  4647 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4649 */
            if (b < i) {
                /*  4650 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4653 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] az(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4657 */
        if (paramInt2 % 4 != 0) {
            /*  4658 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4661 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4662 */
            paramInt2--;
            /*       */
        }
        /*  4664 */
        int i = paramInt2 * 3 / 4;
        /*  4665 */
        byte[] arrayOfByte = new byte[i];
        /*  4666 */
        int j = paramInt1;
        /*  4667 */
        int k = paramInt1 + paramInt2;
        /*  4668 */
        byte b = 0;
        /*  4669 */
        while (j < k) {
            /*  4670 */
            char c1 = paramArrayOfchar[j++];
            /*  4671 */
            char c2 = paramArrayOfchar[j++];
            /*  4672 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4673 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4675 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4676 */
                return new byte[0];
                /*       */
            }
            /*  4678 */
            byte b3 = au[c1];
            /*  4679 */
            byte b4 = au[c2];
            /*  4680 */
            byte b5 = au[b1];
            /*  4681 */
            byte b6 = au[b2];
            /*  4682 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4683 */
                return new byte[0];
                /*       */
            }
            /*  4685 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4686 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4687 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4688 */
            arrayOfByte[b++] = (byte) m;
            /*  4689 */
            if (b < i) {
                /*  4690 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4692 */
            if (b < i) {
                /*  4693 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4696 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aA(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4700 */
        if (paramInt2 % 4 != 0) {
            /*  4701 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4704 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4705 */
            paramInt2--;
            /*       */
        }
        /*  4707 */
        int i = paramInt2 * 3 / 4;
        /*  4708 */
        byte[] arrayOfByte = new byte[i];
        /*  4709 */
        int j = paramInt1;
        /*  4710 */
        int k = paramInt1 + paramInt2;
        /*  4711 */
        byte b = 0;
        /*  4712 */
        while (j < k) {
            /*  4713 */
            char c1 = paramArrayOfchar[j++];
            /*  4714 */
            char c2 = paramArrayOfchar[j++];
            /*  4715 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4716 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4718 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4719 */
                return new byte[0];
                /*       */
            }
            /*  4721 */
            byte b3 = au[c1];
            /*  4722 */
            byte b4 = au[c2];
            /*  4723 */
            byte b5 = au[b1];
            /*  4724 */
            byte b6 = au[b2];
            /*  4725 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4726 */
                return new byte[0];
                /*       */
            }
            /*  4728 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4729 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4730 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4731 */
            arrayOfByte[b++] = (byte) m;
            /*  4732 */
            if (b < i) {
                /*  4733 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4735 */
            if (b < i) {
                /*  4736 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4739 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aB(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4743 */
        if (paramInt2 % 4 != 0) {
            /*  4744 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4747 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4748 */
            paramInt2--;
            /*       */
        }
        /*  4750 */
        int i = paramInt2 * 3 / 4;
        /*  4751 */
        byte[] arrayOfByte = new byte[i];
        /*  4752 */
        int j = paramInt1;
        /*  4753 */
        int k = paramInt1 + paramInt2;
        /*  4754 */
        byte b = 0;
        /*  4755 */
        while (j < k) {
            /*  4756 */
            char c1 = paramArrayOfchar[j++];
            /*  4757 */
            char c2 = paramArrayOfchar[j++];
            /*  4758 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4759 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4761 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4762 */
                return new byte[0];
                /*       */
            }
            /*  4764 */
            byte b3 = au[c1];
            /*  4765 */
            byte b4 = au[c2];
            /*  4766 */
            byte b5 = au[b1];
            /*  4767 */
            byte b6 = au[b2];
            /*  4768 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4769 */
                return new byte[0];
                /*       */
            }
            /*  4771 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4772 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4773 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4774 */
            arrayOfByte[b++] = (byte) m;
            /*  4775 */
            if (b < i) {
                /*  4776 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4778 */
            if (b < i) {
                /*  4779 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4782 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aC(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4786 */
        if (paramInt2 % 4 != 0) {
            /*  4787 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4790 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4791 */
            paramInt2--;
            /*       */
        }
        /*  4793 */
        int i = paramInt2 * 3 / 4;
        /*  4794 */
        byte[] arrayOfByte = new byte[i];
        /*  4795 */
        int j = paramInt1;
        /*  4796 */
        int k = paramInt1 + paramInt2;
        /*  4797 */
        byte b = 0;
        /*  4798 */
        while (j < k) {
            /*  4799 */
            char c1 = paramArrayOfchar[j++];
            /*  4800 */
            char c2 = paramArrayOfchar[j++];
            /*  4801 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4802 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4804 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4805 */
                return new byte[0];
                /*       */
            }
            /*  4807 */
            byte b3 = au[c1];
            /*  4808 */
            byte b4 = au[c2];
            /*  4809 */
            byte b5 = au[b1];
            /*  4810 */
            byte b6 = au[b2];
            /*  4811 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4812 */
                return new byte[0];
                /*       */
            }
            /*  4814 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4815 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4816 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4817 */
            arrayOfByte[b++] = (byte) m;
            /*  4818 */
            if (b < i) {
                /*  4819 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4821 */
            if (b < i) {
                /*  4822 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4825 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aD(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4829 */
        if (paramInt2 % 4 != 0) {
            /*  4830 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4833 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4834 */
            paramInt2--;
            /*       */
        }
        /*  4836 */
        int i = paramInt2 * 3 / 4;
        /*  4837 */
        byte[] arrayOfByte = new byte[i];
        /*  4838 */
        int j = paramInt1;
        /*  4839 */
        int k = paramInt1 + paramInt2;
        /*  4840 */
        byte b = 0;
        /*  4841 */
        while (j < k) {
            /*  4842 */
            char c1 = paramArrayOfchar[j++];
            /*  4843 */
            char c2 = paramArrayOfchar[j++];
            /*  4844 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4845 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4847 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4848 */
                return new byte[0];
                /*       */
            }
            /*  4850 */
            byte b3 = au[c1];
            /*  4851 */
            byte b4 = au[c2];
            /*  4852 */
            byte b5 = au[b1];
            /*  4853 */
            byte b6 = au[b2];
            /*  4854 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4855 */
                return new byte[0];
                /*       */
            }
            /*  4857 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4858 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4859 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4860 */
            arrayOfByte[b++] = (byte) m;
            /*  4861 */
            if (b < i) {
                /*  4862 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4864 */
            if (b < i) {
                /*  4865 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4868 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aE(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4872 */
        if (paramInt2 % 4 != 0) {
            /*  4873 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4876 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4877 */
            paramInt2--;
            /*       */
        }
        /*  4879 */
        int i = paramInt2 * 3 / 4;
        /*  4880 */
        byte[] arrayOfByte = new byte[i];
        /*  4881 */
        int j = paramInt1;
        /*  4882 */
        int k = paramInt1 + paramInt2;
        /*  4883 */
        byte b = 0;
        /*  4884 */
        while (j < k) {
            /*  4885 */
            char c1 = paramArrayOfchar[j++];
            /*  4886 */
            char c2 = paramArrayOfchar[j++];
            /*  4887 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4888 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4890 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4891 */
                return new byte[0];
                /*       */
            }
            /*  4893 */
            byte b3 = au[c1];
            /*  4894 */
            byte b4 = au[c2];
            /*  4895 */
            byte b5 = au[b1];
            /*  4896 */
            byte b6 = au[b2];
            /*  4897 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4898 */
                return new byte[0];
                /*       */
            }
            /*  4900 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4901 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4902 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4903 */
            arrayOfByte[b++] = (byte) m;
            /*  4904 */
            if (b < i) {
                /*  4905 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4907 */
            if (b < i) {
                /*  4908 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4911 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aF(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4915 */
        if (paramInt2 % 4 != 0) {
            /*  4916 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4919 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4920 */
            paramInt2--;
            /*       */
        }
        /*  4922 */
        int i = paramInt2 * 3 / 4;
        /*  4923 */
        byte[] arrayOfByte = new byte[i];
        /*  4924 */
        int j = paramInt1;
        /*  4925 */
        int k = paramInt1 + paramInt2;
        /*  4926 */
        byte b = 0;
        /*  4927 */
        while (j < k) {
            /*  4928 */
            char c1 = paramArrayOfchar[j++];
            /*  4929 */
            char c2 = paramArrayOfchar[j++];
            /*  4930 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4931 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4933 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4934 */
                return new byte[0];
                /*       */
            }
            /*  4936 */
            byte b3 = au[c1];
            /*  4937 */
            byte b4 = au[c2];
            /*  4938 */
            byte b5 = au[b1];
            /*  4939 */
            byte b6 = au[b2];
            /*  4940 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4941 */
                return new byte[0];
                /*       */
            }
            /*  4943 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4944 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4945 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4946 */
            arrayOfByte[b++] = (byte) m;
            /*  4947 */
            if (b < i) {
                /*  4948 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4950 */
            if (b < i) {
                /*  4951 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4954 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] aG(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  4959 */
        if (paramInt2 % 4 != 0) {
            /*  4960 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  4963 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  4964 */
            paramInt2--;
            /*       */
        }
        /*  4966 */
        int i = paramInt2 * 3 / 4;
        /*  4967 */
        byte[] arrayOfByte = new byte[i];
        /*  4968 */
        int j = paramInt1;
        /*  4969 */
        int k = paramInt1 + paramInt2;
        /*  4970 */
        byte b = 0;
        /*  4971 */
        while (j < k) {
            /*  4972 */
            char c1 = paramArrayOfchar[j++];
            /*  4973 */
            char c2 = paramArrayOfchar[j++];
            /*  4974 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  4975 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  4977 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  4978 */
                return new byte[0];
                /*       */
            }
            /*  4980 */
            byte b3 = au[c1];
            /*  4981 */
            byte b4 = au[c2];
            /*  4982 */
            byte b5 = au[b1];
            /*  4983 */
            byte b6 = au[b2];
            /*  4984 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  4985 */
                return new byte[0];
                /*       */
            }
            /*  4987 */
            int m = b3 << 2 | b4 >>> 4;
            /*  4988 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  4989 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  4990 */
            arrayOfByte[b++] = (byte) m;
            /*  4991 */
            if (b < i) {
                /*  4992 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  4994 */
            if (b < i) {
                /*  4995 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  4998 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aH(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5002 */
        if (paramInt2 % 4 != 0) {
            /*  5003 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5006 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5007 */
            paramInt2--;
            /*       */
        }
        /*  5009 */
        int i = paramInt2 * 3 / 4;
        /*  5010 */
        byte[] arrayOfByte = new byte[i];
        /*  5011 */
        int j = paramInt1;
        /*  5012 */
        int k = paramInt1 + paramInt2;
        /*  5013 */
        byte b = 0;
        /*  5014 */
        while (j < k) {
            /*  5015 */
            char c1 = paramArrayOfchar[j++];
            /*  5016 */
            char c2 = paramArrayOfchar[j++];
            /*  5017 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5018 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5020 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5021 */
                return new byte[0];
                /*       */
            }
            /*  5023 */
            byte b3 = au[c1];
            /*  5024 */
            byte b4 = au[c2];
            /*  5025 */
            byte b5 = au[b1];
            /*  5026 */
            byte b6 = au[b2];
            /*  5027 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5028 */
                return new byte[0];
                /*       */
            }
            /*  5030 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5031 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5032 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5033 */
            arrayOfByte[b++] = (byte) m;
            /*  5034 */
            if (b < i) {
                /*  5035 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5037 */
            if (b < i) {
                /*  5038 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5041 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aI(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5045 */
        if (paramInt2 % 4 != 0) {
            /*  5046 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5049 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5050 */
            paramInt2--;
            /*       */
        }
        /*  5052 */
        int i = paramInt2 * 3 / 4;
        /*  5053 */
        byte[] arrayOfByte = new byte[i];
        /*  5054 */
        int j = paramInt1;
        /*  5055 */
        int k = paramInt1 + paramInt2;
        /*  5056 */
        byte b = 0;
        /*  5057 */
        while (j < k) {
            /*  5058 */
            char c1 = paramArrayOfchar[j++];
            /*  5059 */
            char c2 = paramArrayOfchar[j++];
            /*  5060 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5061 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5063 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5064 */
                return new byte[0];
                /*       */
            }
            /*  5066 */
            byte b3 = au[c1];
            /*  5067 */
            byte b4 = au[c2];
            /*  5068 */
            byte b5 = au[b1];
            /*  5069 */
            byte b6 = au[b2];
            /*  5070 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5071 */
                return new byte[0];
                /*       */
            }
            /*  5073 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5074 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5075 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5076 */
            arrayOfByte[b++] = (byte) m;
            /*  5077 */
            if (b < i) {
                /*  5078 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5080 */
            if (b < i) {
                /*  5081 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5084 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aJ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5088 */
        if (paramInt2 % 4 != 0) {
            /*  5089 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5092 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5093 */
            paramInt2--;
            /*       */
        }
        /*  5095 */
        int i = paramInt2 * 3 / 4;
        /*  5096 */
        byte[] arrayOfByte = new byte[i];
        /*  5097 */
        int j = paramInt1;
        /*  5098 */
        int k = paramInt1 + paramInt2;
        /*  5099 */
        byte b = 0;
        /*  5100 */
        while (j < k) {
            /*  5101 */
            char c1 = paramArrayOfchar[j++];
            /*  5102 */
            char c2 = paramArrayOfchar[j++];
            /*  5103 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5104 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5106 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5107 */
                return new byte[0];
                /*       */
            }
            /*  5109 */
            byte b3 = au[c1];
            /*  5110 */
            byte b4 = au[c2];
            /*  5111 */
            byte b5 = au[b1];
            /*  5112 */
            byte b6 = au[b2];
            /*  5113 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5114 */
                return new byte[0];
                /*       */
            }
            /*  5116 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5117 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5118 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5119 */
            arrayOfByte[b++] = (byte) m;
            /*  5120 */
            if (b < i) {
                /*  5121 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5123 */
            if (b < i) {
                /*  5124 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5127 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aK(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5131 */
        if (paramInt2 % 4 != 0) {
            /*  5132 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5135 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5136 */
            paramInt2--;
            /*       */
        }
        /*  5138 */
        int i = paramInt2 * 3 / 4;
        /*  5139 */
        byte[] arrayOfByte = new byte[i];
        /*  5140 */
        int j = paramInt1;
        /*  5141 */
        int k = paramInt1 + paramInt2;
        /*  5142 */
        byte b = 0;
        /*  5143 */
        while (j < k) {
            /*  5144 */
            char c1 = paramArrayOfchar[j++];
            /*  5145 */
            char c2 = paramArrayOfchar[j++];
            /*  5146 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5147 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5149 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5150 */
                return new byte[0];
                /*       */
            }
            /*  5152 */
            byte b3 = au[c1];
            /*  5153 */
            byte b4 = au[c2];
            /*  5154 */
            byte b5 = au[b1];
            /*  5155 */
            byte b6 = au[b2];
            /*  5156 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5157 */
                return new byte[0];
                /*       */
            }
            /*  5159 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5160 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5161 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5162 */
            arrayOfByte[b++] = (byte) m;
            /*  5163 */
            if (b < i) {
                /*  5164 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5166 */
            if (b < i) {
                /*  5167 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5170 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*  5173 */   private static char[] t = new char[64];
    /*  5174 */   private static char[] u = new char[64];
    /*  5175 */   private static char[] v = new char[64];
    /*  5176 */   private static char[] w = new char[64];
    /*  5177 */   private static char[] x = new char[64];
    /*  5178 */   private static char[] y = new char[64];
    /*  5179 */   private static char[] z = new char[64];

    /*       */
    /*       */
    private static byte[] aL(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5182 */
        if (paramInt2 % 4 != 0) {
            /*  5183 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5186 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5187 */
            paramInt2--;
            /*       */
        }
        /*  5189 */
        int i = paramInt2 * 3 / 4;
        /*  5190 */
        byte[] arrayOfByte = new byte[i];
        /*  5191 */
        int j = paramInt1;
        /*  5192 */
        int k = paramInt1 + paramInt2;
        /*  5193 */
        byte b = 0;
        /*  5194 */
        while (j < k) {
            /*  5195 */
            char c1 = paramArrayOfchar[j++];
            /*  5196 */
            char c2 = paramArrayOfchar[j++];
            /*  5197 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5198 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5200 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5201 */
                return new byte[0];
                /*       */
            }
            /*  5203 */
            byte b3 = au[c1];
            /*  5204 */
            byte b4 = au[c2];
            /*  5205 */
            byte b5 = au[b1];
            /*  5206 */
            byte b6 = au[b2];
            /*  5207 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5208 */
                return new byte[0];
                /*       */
            }
            /*  5210 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5211 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5212 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5213 */
            arrayOfByte[b++] = (byte) m;
            /*  5214 */
            if (b < i) {
                /*  5215 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5217 */
            if (b < i) {
                /*  5218 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5221 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aM(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5225 */
        if (paramInt2 % 4 != 0) {
            /*  5226 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5229 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5230 */
            paramInt2--;
            /*       */
        }
        /*  5232 */
        int i = paramInt2 * 3 / 4;
        /*  5233 */
        byte[] arrayOfByte = new byte[i];
        /*  5234 */
        int j = paramInt1;
        /*  5235 */
        int k = paramInt1 + paramInt2;
        /*  5236 */
        byte b = 0;
        /*  5237 */
        while (j < k) {
            /*  5238 */
            char c1 = paramArrayOfchar[j++];
            /*  5239 */
            char c2 = paramArrayOfchar[j++];
            /*  5240 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5241 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5243 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5244 */
                return new byte[0];
                /*       */
            }
            /*  5246 */
            byte b3 = au[c1];
            /*  5247 */
            byte b4 = au[c2];
            /*  5248 */
            byte b5 = au[b1];
            /*  5249 */
            byte b6 = au[b2];
            /*  5250 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5251 */
                return new byte[0];
                /*       */
            }
            /*  5253 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5254 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5255 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5256 */
            arrayOfByte[b++] = (byte) m;
            /*  5257 */
            if (b < i) {
                /*  5258 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5260 */
            if (b < i) {
                /*  5261 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5264 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aN(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5268 */
        if (paramInt2 % 4 != 0) {
            /*  5269 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5272 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5273 */
            paramInt2--;
            /*       */
        }
        /*  5275 */
        int i = paramInt2 * 3 / 4;
        /*  5276 */
        byte[] arrayOfByte = new byte[i];
        /*  5277 */
        int j = paramInt1;
        /*  5278 */
        int k = paramInt1 + paramInt2;
        /*  5279 */
        byte b = 0;
        /*  5280 */
        while (j < k) {
            /*  5281 */
            char c1 = paramArrayOfchar[j++];
            /*  5282 */
            char c2 = paramArrayOfchar[j++];
            /*  5283 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5284 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5286 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5287 */
                return new byte[0];
                /*       */
            }
            /*  5289 */
            byte b3 = au[c1];
            /*  5290 */
            byte b4 = au[c2];
            /*  5291 */
            byte b5 = au[b1];
            /*  5292 */
            byte b6 = au[b2];
            /*  5293 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5294 */
                return new byte[0];
                /*       */
            }
            /*  5296 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5297 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5298 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5299 */
            arrayOfByte[b++] = (byte) m;
            /*  5300 */
            if (b < i) {
                /*  5301 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5303 */
            if (b < i) {
                /*  5304 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5307 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aO(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5311 */
        if (paramInt2 % 4 != 0) {
            /*  5312 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5315 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5316 */
            paramInt2--;
            /*       */
        }
        /*  5318 */
        int i = paramInt2 * 3 / 4;
        /*  5319 */
        byte[] arrayOfByte = new byte[i];
        /*  5320 */
        int j = paramInt1;
        /*  5321 */
        int k = paramInt1 + paramInt2;
        /*  5322 */
        byte b = 0;
        /*  5323 */
        while (j < k) {
            /*  5324 */
            char c1 = paramArrayOfchar[j++];
            /*  5325 */
            char c2 = paramArrayOfchar[j++];
            /*  5326 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5327 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5329 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5330 */
                return new byte[0];
                /*       */
            }
            /*  5332 */
            byte b3 = au[c1];
            /*  5333 */
            byte b4 = au[c2];
            /*  5334 */
            byte b5 = au[b1];
            /*  5335 */
            byte b6 = au[b2];
            /*  5336 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5337 */
                return new byte[0];
                /*       */
            }
            /*  5339 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5340 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5341 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5342 */
            arrayOfByte[b++] = (byte) m;
            /*  5343 */
            if (b < i) {
                /*  5344 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5346 */
            if (b < i) {
                /*  5347 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5350 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aP(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5354 */
        if (paramInt2 % 4 != 0) {
            /*  5355 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5358 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5359 */
            paramInt2--;
            /*       */
        }
        /*  5361 */
        int i = paramInt2 * 3 / 4;
        /*  5362 */
        byte[] arrayOfByte = new byte[i];
        /*  5363 */
        int j = paramInt1;
        /*  5364 */
        int k = paramInt1 + paramInt2;
        /*  5365 */
        byte b = 0;
        /*  5366 */
        while (j < k) {
            /*  5367 */
            char c1 = paramArrayOfchar[j++];
            /*  5368 */
            char c2 = paramArrayOfchar[j++];
            /*  5369 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5370 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5372 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5373 */
                return new byte[0];
                /*       */
            }
            /*  5375 */
            byte b3 = au[c1];
            /*  5376 */
            byte b4 = au[c2];
            /*  5377 */
            byte b5 = au[b1];
            /*  5378 */
            byte b6 = au[b2];
            /*  5379 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5380 */
                return new byte[0];
                /*       */
            }
            /*  5382 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5383 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5384 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5385 */
            arrayOfByte[b++] = (byte) m;
            /*  5386 */
            if (b < i) {
                /*  5387 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5389 */
            if (b < i) {
                /*  5390 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5393 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aQ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5397 */
        if (paramInt2 % 4 != 0) {
            /*  5398 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5401 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5402 */
            paramInt2--;
            /*       */
        }
        /*  5404 */
        int i = paramInt2 * 3 / 4;
        /*  5405 */
        byte[] arrayOfByte = new byte[i];
        /*  5406 */
        int j = paramInt1;
        /*  5407 */
        int k = paramInt1 + paramInt2;
        /*  5408 */
        byte b = 0;
        /*  5409 */
        while (j < k) {
            /*  5410 */
            char c1 = paramArrayOfchar[j++];
            /*  5411 */
            char c2 = paramArrayOfchar[j++];
            /*  5412 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5413 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5415 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5416 */
                return new byte[0];
                /*       */
            }
            /*  5418 */
            byte b3 = au[c1];
            /*  5419 */
            byte b4 = au[c2];
            /*  5420 */
            byte b5 = au[b1];
            /*  5421 */
            byte b6 = au[b2];
            /*  5422 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5423 */
                return new byte[0];
                /*       */
            }
            /*  5425 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5426 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5427 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5428 */
            arrayOfByte[b++] = (byte) m;
            /*  5429 */
            if (b < i) {
                /*  5430 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5432 */
            if (b < i) {
                /*  5433 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5436 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aR(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5440 */
        if (paramInt2 % 4 != 0) {
            /*  5441 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5444 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5445 */
            paramInt2--;
            /*       */
        }
        /*  5447 */
        int i = paramInt2 * 3 / 4;
        /*  5448 */
        byte[] arrayOfByte = new byte[i];
        /*  5449 */
        int j = paramInt1;
        /*  5450 */
        int k = paramInt1 + paramInt2;
        /*  5451 */
        byte b = 0;
        /*  5452 */
        while (j < k) {
            /*  5453 */
            char c1 = paramArrayOfchar[j++];
            /*  5454 */
            char c2 = paramArrayOfchar[j++];
            /*  5455 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5456 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5458 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5459 */
                return new byte[0];
                /*       */
            }
            /*  5461 */
            byte b3 = au[c1];
            /*  5462 */
            byte b4 = au[c2];
            /*  5463 */
            byte b5 = au[b1];
            /*  5464 */
            byte b6 = au[b2];
            /*  5465 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5466 */
                return new byte[0];
                /*       */
            }
            /*  5468 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5469 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5470 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5471 */
            arrayOfByte[b++] = (byte) m;
            /*  5472 */
            if (b < i) {
                /*  5473 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5475 */
            if (b < i) {
                /*  5476 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5479 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aS(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5483 */
        if (paramInt2 % 4 != 0) {
            /*  5484 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5487 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5488 */
            paramInt2--;
            /*       */
        }
        /*  5490 */
        int i = paramInt2 * 3 / 4;
        /*  5491 */
        byte[] arrayOfByte = new byte[i];
        /*  5492 */
        int j = paramInt1;
        /*  5493 */
        int k = paramInt1 + paramInt2;
        /*  5494 */
        byte b = 0;
        /*  5495 */
        while (j < k) {
            /*  5496 */
            char c1 = paramArrayOfchar[j++];
            /*  5497 */
            char c2 = paramArrayOfchar[j++];
            /*  5498 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5499 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5501 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5502 */
                return new byte[0];
                /*       */
            }
            /*  5504 */
            byte b3 = au[c1];
            /*  5505 */
            byte b4 = au[c2];
            /*  5506 */
            byte b5 = au[b1];
            /*  5507 */
            byte b6 = au[b2];
            /*  5508 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5509 */
                return new byte[0];
                /*       */
            }
            /*  5511 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5512 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5513 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5514 */
            arrayOfByte[b++] = (byte) m;
            /*  5515 */
            if (b < i) {
                /*  5516 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5518 */
            if (b < i) {
                /*  5519 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5522 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aT(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5526 */
        if (paramInt2 % 4 != 0) {
            /*  5527 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5530 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5531 */
            paramInt2--;
            /*       */
        }
        /*  5533 */
        int i = paramInt2 * 3 / 4;
        /*  5534 */
        byte[] arrayOfByte = new byte[i];
        /*  5535 */
        int j = paramInt1;
        /*  5536 */
        int k = paramInt1 + paramInt2;
        /*  5537 */
        byte b = 0;
        /*  5538 */
        while (j < k) {
            /*  5539 */
            char c1 = paramArrayOfchar[j++];
            /*  5540 */
            char c2 = paramArrayOfchar[j++];
            /*  5541 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5542 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5544 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5545 */
                return new byte[0];
                /*       */
            }
            /*  5547 */
            byte b3 = au[c1];
            /*  5548 */
            byte b4 = au[c2];
            /*  5549 */
            byte b5 = au[b1];
            /*  5550 */
            byte b6 = au[b2];
            /*  5551 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5552 */
                return new byte[0];
                /*       */
            }
            /*  5554 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5555 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5556 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5557 */
            arrayOfByte[b++] = (byte) m;
            /*  5558 */
            if (b < i) {
                /*  5559 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5561 */
            if (b < i) {
                /*  5562 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5565 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aU(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5569 */
        if (paramInt2 % 4 != 0) {
            /*  5570 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5573 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5574 */
            paramInt2--;
            /*       */
        }
        /*  5576 */
        int i = paramInt2 * 3 / 4;
        /*  5577 */
        byte[] arrayOfByte = new byte[i];
        /*  5578 */
        int j = paramInt1;
        /*  5579 */
        int k = paramInt1 + paramInt2;
        /*  5580 */
        byte b = 0;
        /*  5581 */
        while (j < k) {
            /*  5582 */
            char c1 = paramArrayOfchar[j++];
            /*  5583 */
            char c2 = paramArrayOfchar[j++];
            /*  5584 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5585 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5587 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5588 */
                return new byte[0];
                /*       */
            }
            /*  5590 */
            byte b3 = au[c1];
            /*  5591 */
            byte b4 = au[c2];
            /*  5592 */
            byte b5 = au[b1];
            /*  5593 */
            byte b6 = au[b2];
            /*  5594 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5595 */
                return new byte[0];
                /*       */
            }
            /*  5597 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5598 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5599 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5600 */
            arrayOfByte[b++] = (byte) m;
            /*  5601 */
            if (b < i) {
                /*  5602 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5604 */
            if (b < i) {
                /*  5605 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5608 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aV(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5612 */
        if (paramInt2 % 4 != 0) {
            /*  5613 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5616 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5617 */
            paramInt2--;
            /*       */
        }
        /*  5619 */
        int i = paramInt2 * 3 / 4;
        /*  5620 */
        byte[] arrayOfByte = new byte[i];
        /*  5621 */
        int j = paramInt1;
        /*  5622 */
        int k = paramInt1 + paramInt2;
        /*  5623 */
        byte b = 0;
        /*  5624 */
        while (j < k) {
            /*  5625 */
            char c1 = paramArrayOfchar[j++];
            /*  5626 */
            char c2 = paramArrayOfchar[j++];
            /*  5627 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5628 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5630 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5631 */
                return new byte[0];
                /*       */
            }
            /*  5633 */
            byte b3 = au[c1];
            /*  5634 */
            byte b4 = au[c2];
            /*  5635 */
            byte b5 = au[b1];
            /*  5636 */
            byte b6 = au[b2];
            /*  5637 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5638 */
                return new byte[0];
                /*       */
            }
            /*  5640 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5641 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5642 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5643 */
            arrayOfByte[b++] = (byte) m;
            /*  5644 */
            if (b < i) {
                /*  5645 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5647 */
            if (b < i) {
                /*  5648 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5651 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aW(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5655 */
        if (paramInt2 % 4 != 0) {
            /*  5656 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5659 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5660 */
            paramInt2--;
            /*       */
        }
        /*  5662 */
        int i = paramInt2 * 3 / 4;
        /*  5663 */
        byte[] arrayOfByte = new byte[i];
        /*  5664 */
        int j = paramInt1;
        /*  5665 */
        int k = paramInt1 + paramInt2;
        /*  5666 */
        byte b = 0;
        /*  5667 */
        while (j < k) {
            /*  5668 */
            char c1 = paramArrayOfchar[j++];
            /*  5669 */
            char c2 = paramArrayOfchar[j++];
            /*  5670 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5671 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5673 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5674 */
                return new byte[0];
                /*       */
            }
            /*  5676 */
            byte b3 = au[c1];
            /*  5677 */
            byte b4 = au[c2];
            /*  5678 */
            byte b5 = au[b1];
            /*  5679 */
            byte b6 = au[b2];
            /*  5680 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5681 */
                return new byte[0];
                /*       */
            }
            /*  5683 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5684 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5685 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5686 */
            arrayOfByte[b++] = (byte) m;
            /*  5687 */
            if (b < i) {
                /*  5688 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5690 */
            if (b < i) {
                /*  5691 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5694 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aX(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5698 */
        if (paramInt2 % 4 != 0) {
            /*  5699 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5702 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5703 */
            paramInt2--;
            /*       */
        }
        /*  5705 */
        int i = paramInt2 * 3 / 4;
        /*  5706 */
        byte[] arrayOfByte = new byte[i];
        /*  5707 */
        int j = paramInt1;
        /*  5708 */
        int k = paramInt1 + paramInt2;
        /*  5709 */
        byte b = 0;
        /*  5710 */
        while (j < k) {
            /*  5711 */
            char c1 = paramArrayOfchar[j++];
            /*  5712 */
            char c2 = paramArrayOfchar[j++];
            /*  5713 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5714 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5716 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5717 */
                return new byte[0];
                /*       */
            }
            /*  5719 */
            byte b3 = au[c1];
            /*  5720 */
            byte b4 = au[c2];
            /*  5721 */
            byte b5 = au[b1];
            /*  5722 */
            byte b6 = au[b2];
            /*  5723 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5724 */
                return new byte[0];
                /*       */
            }
            /*  5726 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5727 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5728 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5729 */
            arrayOfByte[b++] = (byte) m;
            /*  5730 */
            if (b < i) {
                /*  5731 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5733 */
            if (b < i) {
                /*  5734 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5737 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aY(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5741 */
        if (paramInt2 % 4 != 0) {
            /*  5742 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5745 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5746 */
            paramInt2--;
            /*       */
        }
        /*  5748 */
        int i = paramInt2 * 3 / 4;
        /*  5749 */
        byte[] arrayOfByte = new byte[i];
        /*  5750 */
        int j = paramInt1;
        /*  5751 */
        int k = paramInt1 + paramInt2;
        /*  5752 */
        byte b = 0;
        /*  5753 */
        while (j < k) {
            /*  5754 */
            char c1 = paramArrayOfchar[j++];
            /*  5755 */
            char c2 = paramArrayOfchar[j++];
            /*  5756 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5757 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5759 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5760 */
                return new byte[0];
                /*       */
            }
            /*  5762 */
            byte b3 = au[c1];
            /*  5763 */
            byte b4 = au[c2];
            /*  5764 */
            byte b5 = au[b1];
            /*  5765 */
            byte b6 = au[b2];
            /*  5766 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5767 */
                return new byte[0];
                /*       */
            }
            /*  5769 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5770 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5771 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5772 */
            arrayOfByte[b++] = (byte) m;
            /*  5773 */
            if (b < i) {
                /*  5774 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5776 */
            if (b < i) {
                /*  5777 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5780 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] aZ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5784 */
        if (paramInt2 % 4 != 0) {
            /*  5785 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5788 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5789 */
            paramInt2--;
            /*       */
        }
        /*  5791 */
        int i = paramInt2 * 3 / 4;
        /*  5792 */
        byte[] arrayOfByte = new byte[i];
        /*  5793 */
        int j = paramInt1;
        /*  5794 */
        int k = paramInt1 + paramInt2;
        /*  5795 */
        byte b = 0;
        /*  5796 */
        while (j < k) {
            /*  5797 */
            char c1 = paramArrayOfchar[j++];
            /*  5798 */
            char c2 = paramArrayOfchar[j++];
            /*  5799 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5800 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5802 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5803 */
                return new byte[0];
                /*       */
            }
            /*  5805 */
            byte b3 = au[c1];
            /*  5806 */
            byte b4 = au[c2];
            /*  5807 */
            byte b5 = au[b1];
            /*  5808 */
            byte b6 = au[b2];
            /*  5809 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5810 */
                return new byte[0];
                /*       */
            }
            /*  5812 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5813 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5814 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5815 */
            arrayOfByte[b++] = (byte) m;
            /*  5816 */
            if (b < i) {
                /*  5817 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5819 */
            if (b < i) {
                /*  5820 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5823 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ba(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5827 */
        if (paramInt2 % 4 != 0) {
            /*  5828 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5831 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5832 */
            paramInt2--;
            /*       */
        }
        /*  5834 */
        int i = paramInt2 * 3 / 4;
        /*  5835 */
        byte[] arrayOfByte = new byte[i];
        /*  5836 */
        int j = paramInt1;
        /*  5837 */
        int k = paramInt1 + paramInt2;
        /*  5838 */
        byte b = 0;
        /*  5839 */
        while (j < k) {
            /*  5840 */
            char c1 = paramArrayOfchar[j++];
            /*  5841 */
            char c2 = paramArrayOfchar[j++];
            /*  5842 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5843 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5845 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5846 */
                return new byte[0];
                /*       */
            }
            /*  5848 */
            byte b3 = au[c1];
            /*  5849 */
            byte b4 = au[c2];
            /*  5850 */
            byte b5 = au[b1];
            /*  5851 */
            byte b6 = au[b2];
            /*  5852 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5853 */
                return new byte[0];
                /*       */
            }
            /*  5855 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5856 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5857 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5858 */
            arrayOfByte[b++] = (byte) m;
            /*  5859 */
            if (b < i) {
                /*  5860 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5862 */
            if (b < i) {
                /*  5863 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5866 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bb(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5870 */
        if (paramInt2 % 4 != 0) {
            /*  5871 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5874 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5875 */
            paramInt2--;
            /*       */
        }
        /*  5877 */
        int i = paramInt2 * 3 / 4;
        /*  5878 */
        byte[] arrayOfByte = new byte[i];
        /*  5879 */
        int j = paramInt1;
        /*  5880 */
        int k = paramInt1 + paramInt2;
        /*  5881 */
        byte b = 0;
        /*  5882 */
        while (j < k) {
            /*  5883 */
            char c1 = paramArrayOfchar[j++];
            /*  5884 */
            char c2 = paramArrayOfchar[j++];
            /*  5885 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5886 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5888 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5889 */
                return new byte[0];
                /*       */
            }
            /*  5891 */
            byte b3 = au[c1];
            /*  5892 */
            byte b4 = au[c2];
            /*  5893 */
            byte b5 = au[b1];
            /*  5894 */
            byte b6 = au[b2];
            /*  5895 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5896 */
                return new byte[0];
                /*       */
            }
            /*  5898 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5899 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5900 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5901 */
            arrayOfByte[b++] = (byte) m;
            /*  5902 */
            if (b < i) {
                /*  5903 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5905 */
            if (b < i) {
                /*  5906 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5909 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bc(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5913 */
        if (paramInt2 % 4 != 0) {
            /*  5914 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5917 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5918 */
            paramInt2--;
            /*       */
        }
        /*  5920 */
        int i = paramInt2 * 3 / 4;
        /*  5921 */
        byte[] arrayOfByte = new byte[i];
        /*  5922 */
        int j = paramInt1;
        /*  5923 */
        int k = paramInt1 + paramInt2;
        /*  5924 */
        byte b = 0;
        /*  5925 */
        while (j < k) {
            /*  5926 */
            char c1 = paramArrayOfchar[j++];
            /*  5927 */
            char c2 = paramArrayOfchar[j++];
            /*  5928 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5929 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5931 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5932 */
                return new byte[0];
                /*       */
            }
            /*  5934 */
            byte b3 = au[c1];
            /*  5935 */
            byte b4 = au[c2];
            /*  5936 */
            byte b5 = au[b1];
            /*  5937 */
            byte b6 = au[b2];
            /*  5938 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5939 */
                return new byte[0];
                /*       */
            }
            /*  5941 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5942 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5943 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5944 */
            arrayOfByte[b++] = (byte) m;
            /*  5945 */
            if (b < i) {
                /*  5946 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5948 */
            if (b < i) {
                /*  5949 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5952 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bd(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5956 */
        if (paramInt2 % 4 != 0) {
            /*  5957 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  5960 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  5961 */
            paramInt2--;
            /*       */
        }
        /*  5963 */
        int i = paramInt2 * 3 / 4;
        /*  5964 */
        byte[] arrayOfByte = new byte[i];
        /*  5965 */
        int j = paramInt1;
        /*  5966 */
        int k = paramInt1 + paramInt2;
        /*  5967 */
        byte b = 0;
        /*  5968 */
        while (j < k) {
            /*  5969 */
            char c1 = paramArrayOfchar[j++];
            /*  5970 */
            char c2 = paramArrayOfchar[j++];
            /*  5971 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  5972 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  5974 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  5975 */
                return new byte[0];
                /*       */
            }
            /*  5977 */
            byte b3 = au[c1];
            /*  5978 */
            byte b4 = au[c2];
            /*  5979 */
            byte b5 = au[b1];
            /*  5980 */
            byte b6 = au[b2];
            /*  5981 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  5982 */
                return new byte[0];
                /*       */
            }
            /*  5984 */
            int m = b3 << 2 | b4 >>> 4;
            /*  5985 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  5986 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  5987 */
            arrayOfByte[b++] = (byte) m;
            /*  5988 */
            if (b < i) {
                /*  5989 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  5991 */
            if (b < i) {
                /*  5992 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  5995 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] be(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  5999 */
        if (paramInt2 % 4 != 0) {
            /*  6000 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6003 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6004 */
            paramInt2--;
            /*       */
        }
        /*  6006 */
        int i = paramInt2 * 3 / 4;
        /*  6007 */
        byte[] arrayOfByte = new byte[i];
        /*  6008 */
        int j = paramInt1;
        /*  6009 */
        int k = paramInt1 + paramInt2;
        /*  6010 */
        byte b = 0;
        /*  6011 */
        while (j < k) {
            /*  6012 */
            char c1 = paramArrayOfchar[j++];
            /*  6013 */
            char c2 = paramArrayOfchar[j++];
            /*  6014 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6015 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6017 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6018 */
                return new byte[0];
                /*       */
            }
            /*  6020 */
            byte b3 = au[c1];
            /*  6021 */
            byte b4 = au[c2];
            /*  6022 */
            byte b5 = au[b1];
            /*  6023 */
            byte b6 = au[b2];
            /*  6024 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6025 */
                return new byte[0];
                /*       */
            }
            /*  6027 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6028 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6029 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6030 */
            arrayOfByte[b++] = (byte) m;
            /*  6031 */
            if (b < i) {
                /*  6032 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6034 */
            if (b < i) {
                /*  6035 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6038 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*  6041 */   private static char[] A = new char[64];
    /*  6042 */   private static char[] B = new char[64];

    /*       */
    /*       */
    private static byte[] bf(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6045 */
        if (paramInt2 % 4 != 0) {
            /*  6046 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6049 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6050 */
            paramInt2--;
            /*       */
        }
        /*  6052 */
        int i = paramInt2 * 3 / 4;
        /*  6053 */
        byte[] arrayOfByte = new byte[i];
        /*  6054 */
        int j = paramInt1;
        /*  6055 */
        int k = paramInt1 + paramInt2;
        /*  6056 */
        byte b = 0;
        /*  6057 */
        while (j < k) {
            /*  6058 */
            char c1 = paramArrayOfchar[j++];
            /*  6059 */
            char c2 = paramArrayOfchar[j++];
            /*  6060 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6061 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6063 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6064 */
                return new byte[0];
                /*       */
            }
            /*  6066 */
            byte b3 = au[c1];
            /*  6067 */
            byte b4 = au[c2];
            /*  6068 */
            byte b5 = au[b1];
            /*  6069 */
            byte b6 = au[b2];
            /*  6070 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6071 */
                return new byte[0];
                /*       */
            }
            /*  6073 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6074 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6075 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6076 */
            arrayOfByte[b++] = (byte) m;
            /*  6077 */
            if (b < i) {
                /*  6078 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6080 */
            if (b < i) {
                /*  6081 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6084 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bg(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6088 */
        if (paramInt2 % 4 != 0) {
            /*  6089 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6092 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6093 */
            paramInt2--;
            /*       */
        }
        /*  6095 */
        int i = paramInt2 * 3 / 4;
        /*  6096 */
        byte[] arrayOfByte = new byte[i];
        /*  6097 */
        int j = paramInt1;
        /*  6098 */
        int k = paramInt1 + paramInt2;
        /*  6099 */
        byte b = 0;
        /*  6100 */
        while (j < k) {
            /*  6101 */
            char c1 = paramArrayOfchar[j++];
            /*  6102 */
            char c2 = paramArrayOfchar[j++];
            /*  6103 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6104 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6106 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6107 */
                return new byte[0];
                /*       */
            }
            /*  6109 */
            byte b3 = au[c1];
            /*  6110 */
            byte b4 = au[c2];
            /*  6111 */
            byte b5 = au[b1];
            /*  6112 */
            byte b6 = au[b2];
            /*  6113 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6114 */
                return new byte[0];
                /*       */
            }
            /*  6116 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6117 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6118 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6119 */
            arrayOfByte[b++] = (byte) m;
            /*  6120 */
            if (b < i) {
                /*  6121 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6123 */
            if (b < i) {
                /*  6124 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6127 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bh(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6131 */
        if (paramInt2 % 4 != 0) {
            /*  6132 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6135 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6136 */
            paramInt2--;
            /*       */
        }
        /*  6138 */
        int i = paramInt2 * 3 / 4;
        /*  6139 */
        byte[] arrayOfByte = new byte[i];
        /*  6140 */
        int j = paramInt1;
        /*  6141 */
        int k = paramInt1 + paramInt2;
        /*  6142 */
        byte b = 0;
        /*  6143 */
        while (j < k) {
            /*  6144 */
            char c1 = paramArrayOfchar[j++];
            /*  6145 */
            char c2 = paramArrayOfchar[j++];
            /*  6146 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6147 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6149 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6150 */
                return new byte[0];
                /*       */
            }
            /*  6152 */
            byte b3 = au[c1];
            /*  6153 */
            byte b4 = au[c2];
            /*  6154 */
            byte b5 = au[b1];
            /*  6155 */
            byte b6 = au[b2];
            /*  6156 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6157 */
                return new byte[0];
                /*       */
            }
            /*  6159 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6160 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6161 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6162 */
            arrayOfByte[b++] = (byte) m;
            /*  6163 */
            if (b < i) {
                /*  6164 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6166 */
            if (b < i) {
                /*  6167 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6170 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bi(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6174 */
        if (paramInt2 % 4 != 0) {
            /*  6175 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6178 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6179 */
            paramInt2--;
            /*       */
        }
        /*  6181 */
        int i = paramInt2 * 3 / 4;
        /*  6182 */
        byte[] arrayOfByte = new byte[i];
        /*  6183 */
        int j = paramInt1;
        /*  6184 */
        int k = paramInt1 + paramInt2;
        /*  6185 */
        byte b = 0;
        /*  6186 */
        while (j < k) {
            /*  6187 */
            char c1 = paramArrayOfchar[j++];
            /*  6188 */
            char c2 = paramArrayOfchar[j++];
            /*  6189 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6190 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6192 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6193 */
                return new byte[0];
                /*       */
            }
            /*  6195 */
            byte b3 = au[c1];
            /*  6196 */
            byte b4 = au[c2];
            /*  6197 */
            byte b5 = au[b1];
            /*  6198 */
            byte b6 = au[b2];
            /*  6199 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6200 */
                return new byte[0];
                /*       */
            }
            /*  6202 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6203 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6204 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6205 */
            arrayOfByte[b++] = (byte) m;
            /*  6206 */
            if (b < i) {
                /*  6207 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6209 */
            if (b < i) {
                /*  6210 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6213 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bj(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6217 */
        if (paramInt2 % 4 != 0) {
            /*  6218 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6221 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6222 */
            paramInt2--;
            /*       */
        }
        /*  6224 */
        int i = paramInt2 * 3 / 4;
        /*  6225 */
        byte[] arrayOfByte = new byte[i];
        /*  6226 */
        int j = paramInt1;
        /*  6227 */
        int k = paramInt1 + paramInt2;
        /*  6228 */
        byte b = 0;
        /*  6229 */
        while (j < k) {
            /*  6230 */
            char c1 = paramArrayOfchar[j++];
            /*  6231 */
            char c2 = paramArrayOfchar[j++];
            /*  6232 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6233 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6235 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6236 */
                return new byte[0];
                /*       */
            }
            /*  6238 */
            byte b3 = au[c1];
            /*  6239 */
            byte b4 = au[c2];
            /*  6240 */
            byte b5 = au[b1];
            /*  6241 */
            byte b6 = au[b2];
            /*  6242 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6243 */
                return new byte[0];
                /*       */
            }
            /*  6245 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6246 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6247 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6248 */
            arrayOfByte[b++] = (byte) m;
            /*  6249 */
            if (b < i) {
                /*  6250 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6252 */
            if (b < i) {
                /*  6253 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6256 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bk(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6260 */
        if (paramInt2 % 4 != 0) {
            /*  6261 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6264 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6265 */
            paramInt2--;
            /*       */
        }
        /*  6267 */
        int i = paramInt2 * 3 / 4;
        /*  6268 */
        byte[] arrayOfByte = new byte[i];
        /*  6269 */
        int j = paramInt1;
        /*  6270 */
        int k = paramInt1 + paramInt2;
        /*  6271 */
        byte b = 0;
        /*  6272 */
        while (j < k) {
            /*  6273 */
            char c1 = paramArrayOfchar[j++];
            /*  6274 */
            char c2 = paramArrayOfchar[j++];
            /*  6275 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6276 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6278 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6279 */
                return new byte[0];
                /*       */
            }
            /*  6281 */
            byte b3 = au[c1];
            /*  6282 */
            byte b4 = au[c2];
            /*  6283 */
            byte b5 = au[b1];
            /*  6284 */
            byte b6 = au[b2];
            /*  6285 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6286 */
                return new byte[0];
                /*       */
            }
            /*  6288 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6289 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6290 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6291 */
            arrayOfByte[b++] = (byte) m;
            /*  6292 */
            if (b < i) {
                /*  6293 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6295 */
            if (b < i) {
                /*  6296 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6299 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bl(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6303 */
        if (paramInt2 % 4 != 0) {
            /*  6304 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6307 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6308 */
            paramInt2--;
            /*       */
        }
        /*  6310 */
        int i = paramInt2 * 3 / 4;
        /*  6311 */
        byte[] arrayOfByte = new byte[i];
        /*  6312 */
        int j = paramInt1;
        /*  6313 */
        int k = paramInt1 + paramInt2;
        /*  6314 */
        byte b = 0;
        /*  6315 */
        while (j < k) {
            /*  6316 */
            char c1 = paramArrayOfchar[j++];
            /*  6317 */
            char c2 = paramArrayOfchar[j++];
            /*  6318 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6319 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6321 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6322 */
                return new byte[0];
                /*       */
            }
            /*  6324 */
            byte b3 = au[c1];
            /*  6325 */
            byte b4 = au[c2];
            /*  6326 */
            byte b5 = au[b1];
            /*  6327 */
            byte b6 = au[b2];
            /*  6328 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6329 */
                return new byte[0];
                /*       */
            }
            /*  6331 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6332 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6333 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6334 */
            arrayOfByte[b++] = (byte) m;
            /*  6335 */
            if (b < i) {
                /*  6336 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6338 */
            if (b < i) {
                /*  6339 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6342 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bm(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6346 */
        if (paramInt2 % 4 != 0) {
            /*  6347 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6350 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6351 */
            paramInt2--;
            /*       */
        }
        /*  6353 */
        int i = paramInt2 * 3 / 4;
        /*  6354 */
        byte[] arrayOfByte = new byte[i];
        /*  6355 */
        int j = paramInt1;
        /*  6356 */
        int k = paramInt1 + paramInt2;
        /*  6357 */
        byte b = 0;
        /*  6358 */
        while (j < k) {
            /*  6359 */
            char c1 = paramArrayOfchar[j++];
            /*  6360 */
            char c2 = paramArrayOfchar[j++];
            /*  6361 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6362 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6364 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6365 */
                return new byte[0];
                /*       */
            }
            /*  6367 */
            byte b3 = au[c1];
            /*  6368 */
            byte b4 = au[c2];
            /*  6369 */
            byte b5 = au[b1];
            /*  6370 */
            byte b6 = au[b2];
            /*  6371 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6372 */
                return new byte[0];
                /*       */
            }
            /*  6374 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6375 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6376 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6377 */
            arrayOfByte[b++] = (byte) m;
            /*  6378 */
            if (b < i) {
                /*  6379 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6381 */
            if (b < i) {
                /*  6382 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6385 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bn(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6389 */
        if (paramInt2 % 4 != 0) {
            /*  6390 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6393 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6394 */
            paramInt2--;
            /*       */
        }
        /*  6396 */
        int i = paramInt2 * 3 / 4;
        /*  6397 */
        byte[] arrayOfByte = new byte[i];
        /*  6398 */
        int j = paramInt1;
        /*  6399 */
        int k = paramInt1 + paramInt2;
        /*  6400 */
        byte b = 0;
        /*  6401 */
        while (j < k) {
            /*  6402 */
            char c1 = paramArrayOfchar[j++];
            /*  6403 */
            char c2 = paramArrayOfchar[j++];
            /*  6404 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6405 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6407 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6408 */
                return new byte[0];
                /*       */
            }
            /*  6410 */
            byte b3 = au[c1];
            /*  6411 */
            byte b4 = au[c2];
            /*  6412 */
            byte b5 = au[b1];
            /*  6413 */
            byte b6 = au[b2];
            /*  6414 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6415 */
                return new byte[0];
                /*       */
            }
            /*  6417 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6418 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6419 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6420 */
            arrayOfByte[b++] = (byte) m;
            /*  6421 */
            if (b < i) {
                /*  6422 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6424 */
            if (b < i) {
                /*  6425 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6428 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bo(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6432 */
        if (paramInt2 % 4 != 0) {
            /*  6433 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6436 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6437 */
            paramInt2--;
            /*       */
        }
        /*  6439 */
        int i = paramInt2 * 3 / 4;
        /*  6440 */
        byte[] arrayOfByte = new byte[i];
        /*  6441 */
        int j = paramInt1;
        /*  6442 */
        int k = paramInt1 + paramInt2;
        /*  6443 */
        byte b = 0;
        /*  6444 */
        while (j < k) {
            /*  6445 */
            char c1 = paramArrayOfchar[j++];
            /*  6446 */
            char c2 = paramArrayOfchar[j++];
            /*  6447 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6448 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6450 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6451 */
                return new byte[0];
                /*       */
            }
            /*  6453 */
            byte b3 = au[c1];
            /*  6454 */
            byte b4 = au[c2];
            /*  6455 */
            byte b5 = au[b1];
            /*  6456 */
            byte b6 = au[b2];
            /*  6457 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6458 */
                return new byte[0];
                /*       */
            }
            /*  6460 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6461 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6462 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6463 */
            arrayOfByte[b++] = (byte) m;
            /*  6464 */
            if (b < i) {
                /*  6465 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6467 */
            if (b < i) {
                /*  6468 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6471 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bp(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6475 */
        if (paramInt2 % 4 != 0) {
            /*  6476 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6479 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6480 */
            paramInt2--;
            /*       */
        }
        /*  6482 */
        int i = paramInt2 * 3 / 4;
        /*  6483 */
        byte[] arrayOfByte = new byte[i];
        /*  6484 */
        int j = paramInt1;
        /*  6485 */
        int k = paramInt1 + paramInt2;
        /*  6486 */
        byte b = 0;
        /*  6487 */
        while (j < k) {
            /*  6488 */
            char c1 = paramArrayOfchar[j++];
            /*  6489 */
            char c2 = paramArrayOfchar[j++];
            /*  6490 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6491 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6493 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6494 */
                return new byte[0];
                /*       */
            }
            /*  6496 */
            byte b3 = au[c1];
            /*  6497 */
            byte b4 = au[c2];
            /*  6498 */
            byte b5 = au[b1];
            /*  6499 */
            byte b6 = au[b2];
            /*  6500 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6501 */
                return new byte[0];
                /*       */
            }
            /*  6503 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6504 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6505 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6506 */
            arrayOfByte[b++] = (byte) m;
            /*  6507 */
            if (b < i) {
                /*  6508 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6510 */
            if (b < i) {
                /*  6511 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6514 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bq(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6518 */
        if (paramInt2 % 4 != 0) {
            /*  6519 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6522 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6523 */
            paramInt2--;
            /*       */
        }
        /*  6525 */
        int i = paramInt2 * 3 / 4;
        /*  6526 */
        byte[] arrayOfByte = new byte[i];
        /*  6527 */
        int j = paramInt1;
        /*  6528 */
        int k = paramInt1 + paramInt2;
        /*  6529 */
        byte b = 0;
        /*  6530 */
        while (j < k) {
            /*  6531 */
            char c1 = paramArrayOfchar[j++];
            /*  6532 */
            char c2 = paramArrayOfchar[j++];
            /*  6533 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6534 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6536 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6537 */
                return new byte[0];
                /*       */
            }
            /*  6539 */
            byte b3 = au[c1];
            /*  6540 */
            byte b4 = au[c2];
            /*  6541 */
            byte b5 = au[b1];
            /*  6542 */
            byte b6 = au[b2];
            /*  6543 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6544 */
                return new byte[0];
                /*       */
            }
            /*  6546 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6547 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6548 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6549 */
            arrayOfByte[b++] = (byte) m;
            /*  6550 */
            if (b < i) {
                /*  6551 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6553 */
            if (b < i) {
                /*  6554 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6557 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] br(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6561 */
        if (paramInt2 % 4 != 0) {
            /*  6562 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6565 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6566 */
            paramInt2--;
            /*       */
        }
        /*  6568 */
        int i = paramInt2 * 3 / 4;
        /*  6569 */
        byte[] arrayOfByte = new byte[i];
        /*  6570 */
        int j = paramInt1;
        /*  6571 */
        int k = paramInt1 + paramInt2;
        /*  6572 */
        byte b = 0;
        /*  6573 */
        while (j < k) {
            /*  6574 */
            char c1 = paramArrayOfchar[j++];
            /*  6575 */
            char c2 = paramArrayOfchar[j++];
            /*  6576 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6577 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6579 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6580 */
                return new byte[0];
                /*       */
            }
            /*  6582 */
            byte b3 = au[c1];
            /*  6583 */
            byte b4 = au[c2];
            /*  6584 */
            byte b5 = au[b1];
            /*  6585 */
            byte b6 = au[b2];
            /*  6586 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6587 */
                return new byte[0];
                /*       */
            }
            /*  6589 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6590 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6591 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6592 */
            arrayOfByte[b++] = (byte) m;
            /*  6593 */
            if (b < i) {
                /*  6594 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6596 */
            if (b < i) {
                /*  6597 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6600 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bs(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6604 */
        if (paramInt2 % 4 != 0) {
            /*  6605 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6608 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6609 */
            paramInt2--;
            /*       */
        }
        /*  6611 */
        int i = paramInt2 * 3 / 4;
        /*  6612 */
        byte[] arrayOfByte = new byte[i];
        /*  6613 */
        int j = paramInt1;
        /*  6614 */
        int k = paramInt1 + paramInt2;
        /*  6615 */
        byte b = 0;
        /*  6616 */
        while (j < k) {
            /*  6617 */
            char c1 = paramArrayOfchar[j++];
            /*  6618 */
            char c2 = paramArrayOfchar[j++];
            /*  6619 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6620 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6622 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6623 */
                return new byte[0];
                /*       */
            }
            /*  6625 */
            byte b3 = au[c1];
            /*  6626 */
            byte b4 = au[c2];
            /*  6627 */
            byte b5 = au[b1];
            /*  6628 */
            byte b6 = au[b2];
            /*  6629 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6630 */
                return new byte[0];
                /*       */
            }
            /*  6632 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6633 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6634 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6635 */
            arrayOfByte[b++] = (byte) m;
            /*  6636 */
            if (b < i) {
                /*  6637 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6639 */
            if (b < i) {
                /*  6640 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6643 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bt(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6647 */
        if (paramInt2 % 4 != 0) {
            /*  6648 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6651 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6652 */
            paramInt2--;
            /*       */
        }
        /*  6654 */
        int i = paramInt2 * 3 / 4;
        /*  6655 */
        byte[] arrayOfByte = new byte[i];
        /*  6656 */
        int j = paramInt1;
        /*  6657 */
        int k = paramInt1 + paramInt2;
        /*  6658 */
        byte b = 0;
        /*  6659 */
        while (j < k) {
            /*  6660 */
            char c1 = paramArrayOfchar[j++];
            /*  6661 */
            char c2 = paramArrayOfchar[j++];
            /*  6662 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6663 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6665 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6666 */
                return new byte[0];
                /*       */
            }
            /*  6668 */
            byte b3 = au[c1];
            /*  6669 */
            byte b4 = au[c2];
            /*  6670 */
            byte b5 = au[b1];
            /*  6671 */
            byte b6 = au[b2];
            /*  6672 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6673 */
                return new byte[0];
                /*       */
            }
            /*  6675 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6676 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6677 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6678 */
            arrayOfByte[b++] = (byte) m;
            /*  6679 */
            if (b < i) {
                /*  6680 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6682 */
            if (b < i) {
                /*  6683 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6686 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bu(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6690 */
        if (paramInt2 % 4 != 0) {
            /*  6691 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6694 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6695 */
            paramInt2--;
            /*       */
        }
        /*  6697 */
        int i = paramInt2 * 3 / 4;
        /*  6698 */
        byte[] arrayOfByte = new byte[i];
        /*  6699 */
        int j = paramInt1;
        /*  6700 */
        int k = paramInt1 + paramInt2;
        /*  6701 */
        byte b = 0;
        /*  6702 */
        while (j < k) {
            /*  6703 */
            char c1 = paramArrayOfchar[j++];
            /*  6704 */
            char c2 = paramArrayOfchar[j++];
            /*  6705 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6706 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6708 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6709 */
                return new byte[0];
                /*       */
            }
            /*  6711 */
            byte b3 = au[c1];
            /*  6712 */
            byte b4 = au[c2];
            /*  6713 */
            byte b5 = au[b1];
            /*  6714 */
            byte b6 = au[b2];
            /*  6715 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6716 */
                return new byte[0];
                /*       */
            }
            /*  6718 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6719 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6720 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6721 */
            arrayOfByte[b++] = (byte) m;
            /*  6722 */
            if (b < i) {
                /*  6723 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6725 */
            if (b < i) {
                /*  6726 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6729 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bv(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6733 */
        if (paramInt2 % 4 != 0) {
            /*  6734 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6737 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6738 */
            paramInt2--;
            /*       */
        }
        /*  6740 */
        int i = paramInt2 * 3 / 4;
        /*  6741 */
        byte[] arrayOfByte = new byte[i];
        /*  6742 */
        int j = paramInt1;
        /*  6743 */
        int k = paramInt1 + paramInt2;
        /*  6744 */
        byte b = 0;
        /*  6745 */
        while (j < k) {
            /*  6746 */
            char c1 = paramArrayOfchar[j++];
            /*  6747 */
            char c2 = paramArrayOfchar[j++];
            /*  6748 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6749 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6751 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6752 */
                return new byte[0];
                /*       */
            }
            /*  6754 */
            byte b3 = au[c1];
            /*  6755 */
            byte b4 = au[c2];
            /*  6756 */
            byte b5 = au[b1];
            /*  6757 */
            byte b6 = au[b2];
            /*  6758 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6759 */
                return new byte[0];
                /*       */
            }
            /*  6761 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6762 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6763 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6764 */
            arrayOfByte[b++] = (byte) m;
            /*  6765 */
            if (b < i) {
                /*  6766 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6768 */
            if (b < i) {
                /*  6769 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6772 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bw(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6776 */
        if (paramInt2 % 4 != 0) {
            /*  6777 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6780 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6781 */
            paramInt2--;
            /*       */
        }
        /*  6783 */
        int i = paramInt2 * 3 / 4;
        /*  6784 */
        byte[] arrayOfByte = new byte[i];
        /*  6785 */
        int j = paramInt1;
        /*  6786 */
        int k = paramInt1 + paramInt2;
        /*  6787 */
        byte b = 0;
        /*  6788 */
        while (j < k) {
            /*  6789 */
            char c1 = paramArrayOfchar[j++];
            /*  6790 */
            char c2 = paramArrayOfchar[j++];
            /*  6791 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6792 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6794 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6795 */
                return new byte[0];
                /*       */
            }
            /*  6797 */
            byte b3 = au[c1];
            /*  6798 */
            byte b4 = au[c2];
            /*  6799 */
            byte b5 = au[b1];
            /*  6800 */
            byte b6 = au[b2];
            /*  6801 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6802 */
                return new byte[0];
                /*       */
            }
            /*  6804 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6805 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6806 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6807 */
            arrayOfByte[b++] = (byte) m;
            /*  6808 */
            if (b < i) {
                /*  6809 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6811 */
            if (b < i) {
                /*  6812 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6815 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bx(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6819 */
        if (paramInt2 % 4 != 0) {
            /*  6820 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6823 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6824 */
            paramInt2--;
            /*       */
        }
        /*  6826 */
        int i = paramInt2 * 3 / 4;
        /*  6827 */
        byte[] arrayOfByte = new byte[i];
        /*  6828 */
        int j = paramInt1;
        /*  6829 */
        int k = paramInt1 + paramInt2;
        /*  6830 */
        byte b = 0;
        /*  6831 */
        while (j < k) {
            /*  6832 */
            char c1 = paramArrayOfchar[j++];
            /*  6833 */
            char c2 = paramArrayOfchar[j++];
            /*  6834 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6835 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6837 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6838 */
                return new byte[0];
                /*       */
            }
            /*  6840 */
            byte b3 = au[c1];
            /*  6841 */
            byte b4 = au[c2];
            /*  6842 */
            byte b5 = au[b1];
            /*  6843 */
            byte b6 = au[b2];
            /*  6844 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6845 */
                return new byte[0];
                /*       */
            }
            /*  6847 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6848 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6849 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6850 */
            arrayOfByte[b++] = (byte) m;
            /*  6851 */
            if (b < i) {
                /*  6852 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6854 */
            if (b < i) {
                /*  6855 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6858 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] by(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6862 */
        if (paramInt2 % 4 != 0) {
            /*  6863 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6866 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6867 */
            paramInt2--;
            /*       */
        }
        /*  6869 */
        int i = paramInt2 * 3 / 4;
        /*  6870 */
        byte[] arrayOfByte = new byte[i];
        /*  6871 */
        int j = paramInt1;
        /*  6872 */
        int k = paramInt1 + paramInt2;
        /*  6873 */
        byte b = 0;
        /*  6874 */
        while (j < k) {
            /*  6875 */
            char c1 = paramArrayOfchar[j++];
            /*  6876 */
            char c2 = paramArrayOfchar[j++];
            /*  6877 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6878 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6880 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6881 */
                return new byte[0];
                /*       */
            }
            /*  6883 */
            byte b3 = au[c1];
            /*  6884 */
            byte b4 = au[c2];
            /*  6885 */
            byte b5 = au[b1];
            /*  6886 */
            byte b6 = au[b2];
            /*  6887 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6888 */
                return new byte[0];
                /*       */
            }
            /*  6890 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6891 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6892 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6893 */
            arrayOfByte[b++] = (byte) m;
            /*  6894 */
            if (b < i) {
                /*  6895 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6897 */
            if (b < i) {
                /*  6898 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6901 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*  6904 */   private static char[] C = new char[64];
    /*  6905 */   private static char[] D = new char[64];

    /*       */
    /*       */
    private static byte[] bz(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6908 */
        if (paramInt2 % 4 != 0) {
            /*  6909 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6912 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6913 */
            paramInt2--;
            /*       */
        }
        /*  6915 */
        int i = paramInt2 * 3 / 4;
        /*  6916 */
        byte[] arrayOfByte = new byte[i];
        /*  6917 */
        int j = paramInt1;
        /*  6918 */
        int k = paramInt1 + paramInt2;
        /*  6919 */
        byte b = 0;
        /*  6920 */
        while (j < k) {
            /*  6921 */
            char c1 = paramArrayOfchar[j++];
            /*  6922 */
            char c2 = paramArrayOfchar[j++];
            /*  6923 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6924 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6926 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6927 */
                return new byte[0];
                /*       */
            }
            /*  6929 */
            byte b3 = au[c1];
            /*  6930 */
            byte b4 = au[c2];
            /*  6931 */
            byte b5 = au[b1];
            /*  6932 */
            byte b6 = au[b2];
            /*  6933 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6934 */
                return new byte[0];
                /*       */
            }
            /*  6936 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6937 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6938 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6939 */
            arrayOfByte[b++] = (byte) m;
            /*  6940 */
            if (b < i) {
                /*  6941 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6943 */
            if (b < i) {
                /*  6944 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6947 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bA(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6951 */
        if (paramInt2 % 4 != 0) {
            /*  6952 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6955 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6956 */
            paramInt2--;
            /*       */
        }
        /*  6958 */
        int i = paramInt2 * 3 / 4;
        /*  6959 */
        byte[] arrayOfByte = new byte[i];
        /*  6960 */
        int j = paramInt1;
        /*  6961 */
        int k = paramInt1 + paramInt2;
        /*  6962 */
        byte b = 0;
        /*  6963 */
        while (j < k) {
            /*  6964 */
            char c1 = paramArrayOfchar[j++];
            /*  6965 */
            char c2 = paramArrayOfchar[j++];
            /*  6966 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  6967 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  6969 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  6970 */
                return new byte[0];
                /*       */
            }
            /*  6972 */
            byte b3 = au[c1];
            /*  6973 */
            byte b4 = au[c2];
            /*  6974 */
            byte b5 = au[b1];
            /*  6975 */
            byte b6 = au[b2];
            /*  6976 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  6977 */
                return new byte[0];
                /*       */
            }
            /*  6979 */
            int m = b3 << 2 | b4 >>> 4;
            /*  6980 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  6981 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  6982 */
            arrayOfByte[b++] = (byte) m;
            /*  6983 */
            if (b < i) {
                /*  6984 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  6986 */
            if (b < i) {
                /*  6987 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  6990 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bB(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  6994 */
        if (paramInt2 % 4 != 0) {
            /*  6995 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  6998 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  6999 */
            paramInt2--;
            /*       */
        }
        /*  7001 */
        int i = paramInt2 * 3 / 4;
        /*  7002 */
        byte[] arrayOfByte = new byte[i];
        /*  7003 */
        int j = paramInt1;
        /*  7004 */
        int k = paramInt1 + paramInt2;
        /*  7005 */
        byte b = 0;
        /*  7006 */
        while (j < k) {
            /*  7007 */
            char c1 = paramArrayOfchar[j++];
            /*  7008 */
            char c2 = paramArrayOfchar[j++];
            /*  7009 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7010 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7012 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7013 */
                return new byte[0];
                /*       */
            }
            /*  7015 */
            byte b3 = au[c1];
            /*  7016 */
            byte b4 = au[c2];
            /*  7017 */
            byte b5 = au[b1];
            /*  7018 */
            byte b6 = au[b2];
            /*  7019 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7020 */
                return new byte[0];
                /*       */
            }
            /*  7022 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7023 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7024 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7025 */
            arrayOfByte[b++] = (byte) m;
            /*  7026 */
            if (b < i) {
                /*  7027 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7029 */
            if (b < i) {
                /*  7030 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7033 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bC(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7037 */
        if (paramInt2 % 4 != 0) {
            /*  7038 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7041 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7042 */
            paramInt2--;
            /*       */
        }
        /*  7044 */
        int i = paramInt2 * 3 / 4;
        /*  7045 */
        byte[] arrayOfByte = new byte[i];
        /*  7046 */
        int j = paramInt1;
        /*  7047 */
        int k = paramInt1 + paramInt2;
        /*  7048 */
        byte b = 0;
        /*  7049 */
        while (j < k) {
            /*  7050 */
            char c1 = paramArrayOfchar[j++];
            /*  7051 */
            char c2 = paramArrayOfchar[j++];
            /*  7052 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7053 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7055 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7056 */
                return new byte[0];
                /*       */
            }
            /*  7058 */
            byte b3 = au[c1];
            /*  7059 */
            byte b4 = au[c2];
            /*  7060 */
            byte b5 = au[b1];
            /*  7061 */
            byte b6 = au[b2];
            /*  7062 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7063 */
                return new byte[0];
                /*       */
            }
            /*  7065 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7066 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7067 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7068 */
            arrayOfByte[b++] = (byte) m;
            /*  7069 */
            if (b < i) {
                /*  7070 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7072 */
            if (b < i) {
                /*  7073 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7076 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bD(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7080 */
        if (paramInt2 % 4 != 0) {
            /*  7081 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7084 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7085 */
            paramInt2--;
            /*       */
        }
        /*  7087 */
        int i = paramInt2 * 3 / 4;
        /*  7088 */
        byte[] arrayOfByte = new byte[i];
        /*  7089 */
        int j = paramInt1;
        /*  7090 */
        int k = paramInt1 + paramInt2;
        /*  7091 */
        byte b = 0;
        /*  7092 */
        while (j < k) {
            /*  7093 */
            char c1 = paramArrayOfchar[j++];
            /*  7094 */
            char c2 = paramArrayOfchar[j++];
            /*  7095 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7096 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7098 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7099 */
                return new byte[0];
                /*       */
            }
            /*  7101 */
            byte b3 = au[c1];
            /*  7102 */
            byte b4 = au[c2];
            /*  7103 */
            byte b5 = au[b1];
            /*  7104 */
            byte b6 = au[b2];
            /*  7105 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7106 */
                return new byte[0];
                /*       */
            }
            /*  7108 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7109 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7110 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7111 */
            arrayOfByte[b++] = (byte) m;
            /*  7112 */
            if (b < i) {
                /*  7113 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7115 */
            if (b < i) {
                /*  7116 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7119 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bE(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7123 */
        if (paramInt2 % 4 != 0) {
            /*  7124 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7127 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7128 */
            paramInt2--;
            /*       */
        }
        /*  7130 */
        int i = paramInt2 * 3 / 4;
        /*  7131 */
        byte[] arrayOfByte = new byte[i];
        /*  7132 */
        int j = paramInt1;
        /*  7133 */
        int k = paramInt1 + paramInt2;
        /*  7134 */
        byte b = 0;
        /*  7135 */
        while (j < k) {
            /*  7136 */
            char c1 = paramArrayOfchar[j++];
            /*  7137 */
            char c2 = paramArrayOfchar[j++];
            /*  7138 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7139 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7141 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7142 */
                return new byte[0];
                /*       */
            }
            /*  7144 */
            byte b3 = au[c1];
            /*  7145 */
            byte b4 = au[c2];
            /*  7146 */
            byte b5 = au[b1];
            /*  7147 */
            byte b6 = au[b2];
            /*  7148 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7149 */
                return new byte[0];
                /*       */
            }
            /*  7151 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7152 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7153 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7154 */
            arrayOfByte[b++] = (byte) m;
            /*  7155 */
            if (b < i) {
                /*  7156 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7158 */
            if (b < i) {
                /*  7159 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7162 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bF(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7166 */
        if (paramInt2 % 4 != 0) {
            /*  7167 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7170 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7171 */
            paramInt2--;
            /*       */
        }
        /*  7173 */
        int i = paramInt2 * 3 / 4;
        /*  7174 */
        byte[] arrayOfByte = new byte[i];
        /*  7175 */
        int j = paramInt1;
        /*  7176 */
        int k = paramInt1 + paramInt2;
        /*  7177 */
        byte b = 0;
        /*  7178 */
        while (j < k) {
            /*  7179 */
            char c1 = paramArrayOfchar[j++];
            /*  7180 */
            char c2 = paramArrayOfchar[j++];
            /*  7181 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7182 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7184 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7185 */
                return new byte[0];
                /*       */
            }
            /*  7187 */
            byte b3 = au[c1];
            /*  7188 */
            byte b4 = au[c2];
            /*  7189 */
            byte b5 = au[b1];
            /*  7190 */
            byte b6 = au[b2];
            /*  7191 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7192 */
                return new byte[0];
                /*       */
            }
            /*  7194 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7195 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7196 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7197 */
            arrayOfByte[b++] = (byte) m;
            /*  7198 */
            if (b < i) {
                /*  7199 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7201 */
            if (b < i) {
                /*  7202 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7205 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bG(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7209 */
        if (paramInt2 % 4 != 0) {
            /*  7210 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7213 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7214 */
            paramInt2--;
            /*       */
        }
        /*  7216 */
        int i = paramInt2 * 3 / 4;
        /*  7217 */
        byte[] arrayOfByte = new byte[i];
        /*  7218 */
        int j = paramInt1;
        /*  7219 */
        int k = paramInt1 + paramInt2;
        /*  7220 */
        byte b = 0;
        /*  7221 */
        while (j < k) {
            /*  7222 */
            char c1 = paramArrayOfchar[j++];
            /*  7223 */
            char c2 = paramArrayOfchar[j++];
            /*  7224 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7225 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7227 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7228 */
                return new byte[0];
                /*       */
            }
            /*  7230 */
            byte b3 = au[c1];
            /*  7231 */
            byte b4 = au[c2];
            /*  7232 */
            byte b5 = au[b1];
            /*  7233 */
            byte b6 = au[b2];
            /*  7234 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7235 */
                return new byte[0];
                /*       */
            }
            /*  7237 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7238 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7239 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7240 */
            arrayOfByte[b++] = (byte) m;
            /*  7241 */
            if (b < i) {
                /*  7242 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7244 */
            if (b < i) {
                /*  7245 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7248 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bH(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7252 */
        if (paramInt2 % 4 != 0) {
            /*  7253 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7256 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7257 */
            paramInt2--;
            /*       */
        }
        /*  7259 */
        int i = paramInt2 * 3 / 4;
        /*  7260 */
        byte[] arrayOfByte = new byte[i];
        /*  7261 */
        int j = paramInt1;
        /*  7262 */
        int k = paramInt1 + paramInt2;
        /*  7263 */
        byte b = 0;
        /*  7264 */
        while (j < k) {
            /*  7265 */
            char c1 = paramArrayOfchar[j++];
            /*  7266 */
            char c2 = paramArrayOfchar[j++];
            /*  7267 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7268 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7270 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7271 */
                return new byte[0];
                /*       */
            }
            /*  7273 */
            byte b3 = au[c1];
            /*  7274 */
            byte b4 = au[c2];
            /*  7275 */
            byte b5 = au[b1];
            /*  7276 */
            byte b6 = au[b2];
            /*  7277 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7278 */
                return new byte[0];
                /*       */
            }
            /*  7280 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7281 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7282 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7283 */
            arrayOfByte[b++] = (byte) m;
            /*  7284 */
            if (b < i) {
                /*  7285 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7287 */
            if (b < i) {
                /*  7288 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7291 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bI(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7295 */
        if (paramInt2 % 4 != 0) {
            /*  7296 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7299 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7300 */
            paramInt2--;
            /*       */
        }
        /*  7302 */
        int i = paramInt2 * 3 / 4;
        /*  7303 */
        byte[] arrayOfByte = new byte[i];
        /*  7304 */
        int j = paramInt1;
        /*  7305 */
        int k = paramInt1 + paramInt2;
        /*  7306 */
        byte b = 0;
        /*  7307 */
        while (j < k) {
            /*  7308 */
            char c1 = paramArrayOfchar[j++];
            /*  7309 */
            char c2 = paramArrayOfchar[j++];
            /*  7310 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7311 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7313 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7314 */
                return new byte[0];
                /*       */
            }
            /*  7316 */
            byte b3 = au[c1];
            /*  7317 */
            byte b4 = au[c2];
            /*  7318 */
            byte b5 = au[b1];
            /*  7319 */
            byte b6 = au[b2];
            /*  7320 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7321 */
                return new byte[0];
                /*       */
            }
            /*  7323 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7324 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7325 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7326 */
            arrayOfByte[b++] = (byte) m;
            /*  7327 */
            if (b < i) {
                /*  7328 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7330 */
            if (b < i) {
                /*  7331 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7334 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bJ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7338 */
        if (paramInt2 % 4 != 0) {
            /*  7339 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7342 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7343 */
            paramInt2--;
            /*       */
        }
        /*  7345 */
        int i = paramInt2 * 3 / 4;
        /*  7346 */
        byte[] arrayOfByte = new byte[i];
        /*  7347 */
        int j = paramInt1;
        /*  7348 */
        int k = paramInt1 + paramInt2;
        /*  7349 */
        byte b = 0;
        /*  7350 */
        while (j < k) {
            /*  7351 */
            char c1 = paramArrayOfchar[j++];
            /*  7352 */
            char c2 = paramArrayOfchar[j++];
            /*  7353 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7354 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7356 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7357 */
                return new byte[0];
                /*       */
            }
            /*  7359 */
            byte b3 = au[c1];
            /*  7360 */
            byte b4 = au[c2];
            /*  7361 */
            byte b5 = au[b1];
            /*  7362 */
            byte b6 = au[b2];
            /*  7363 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7364 */
                return new byte[0];
                /*       */
            }
            /*  7366 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7367 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7368 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7369 */
            arrayOfByte[b++] = (byte) m;
            /*  7370 */
            if (b < i) {
                /*  7371 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7373 */
            if (b < i) {
                /*  7374 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7377 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bK(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7381 */
        if (paramInt2 % 4 != 0) {
            /*  7382 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7385 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7386 */
            paramInt2--;
            /*       */
        }
        /*  7388 */
        int i = paramInt2 * 3 / 4;
        /*  7389 */
        byte[] arrayOfByte = new byte[i];
        /*  7390 */
        int j = paramInt1;
        /*  7391 */
        int k = paramInt1 + paramInt2;
        /*  7392 */
        byte b = 0;
        /*  7393 */
        while (j < k) {
            /*  7394 */
            char c1 = paramArrayOfchar[j++];
            /*  7395 */
            char c2 = paramArrayOfchar[j++];
            /*  7396 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7397 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7399 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7400 */
                return new byte[0];
                /*       */
            }
            /*  7402 */
            byte b3 = au[c1];
            /*  7403 */
            byte b4 = au[c2];
            /*  7404 */
            byte b5 = au[b1];
            /*  7405 */
            byte b6 = au[b2];
            /*  7406 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7407 */
                return new byte[0];
                /*       */
            }
            /*  7409 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7410 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7411 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7412 */
            arrayOfByte[b++] = (byte) m;
            /*  7413 */
            if (b < i) {
                /*  7414 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7416 */
            if (b < i) {
                /*  7417 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7420 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bL(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7424 */
        if (paramInt2 % 4 != 0) {
            /*  7425 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7428 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7429 */
            paramInt2--;
            /*       */
        }
        /*  7431 */
        int i = paramInt2 * 3 / 4;
        /*  7432 */
        byte[] arrayOfByte = new byte[i];
        /*  7433 */
        int j = paramInt1;
        /*  7434 */
        int k = paramInt1 + paramInt2;
        /*  7435 */
        byte b = 0;
        /*  7436 */
        while (j < k) {
            /*  7437 */
            char c1 = paramArrayOfchar[j++];
            /*  7438 */
            char c2 = paramArrayOfchar[j++];
            /*  7439 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7440 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7442 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7443 */
                return new byte[0];
                /*       */
            }
            /*  7445 */
            byte b3 = au[c1];
            /*  7446 */
            byte b4 = au[c2];
            /*  7447 */
            byte b5 = au[b1];
            /*  7448 */
            byte b6 = au[b2];
            /*  7449 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7450 */
                return new byte[0];
                /*       */
            }
            /*  7452 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7453 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7454 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7455 */
            arrayOfByte[b++] = (byte) m;
            /*  7456 */
            if (b < i) {
                /*  7457 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7459 */
            if (b < i) {
                /*  7460 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7463 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bM(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7467 */
        if (paramInt2 % 4 != 0) {
            /*  7468 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7471 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7472 */
            paramInt2--;
            /*       */
        }
        /*  7474 */
        int i = paramInt2 * 3 / 4;
        /*  7475 */
        byte[] arrayOfByte = new byte[i];
        /*  7476 */
        int j = paramInt1;
        /*  7477 */
        int k = paramInt1 + paramInt2;
        /*  7478 */
        byte b = 0;
        /*  7479 */
        while (j < k) {
            /*  7480 */
            char c1 = paramArrayOfchar[j++];
            /*  7481 */
            char c2 = paramArrayOfchar[j++];
            /*  7482 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7483 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7485 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7486 */
                return new byte[0];
                /*       */
            }
            /*  7488 */
            byte b3 = au[c1];
            /*  7489 */
            byte b4 = au[c2];
            /*  7490 */
            byte b5 = au[b1];
            /*  7491 */
            byte b6 = au[b2];
            /*  7492 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7493 */
                return new byte[0];
                /*       */
            }
            /*  7495 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7496 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7497 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7498 */
            arrayOfByte[b++] = (byte) m;
            /*  7499 */
            if (b < i) {
                /*  7500 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7502 */
            if (b < i) {
                /*  7503 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7506 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bN(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7510 */
        if (paramInt2 % 4 != 0) {
            /*  7511 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7514 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7515 */
            paramInt2--;
            /*       */
        }
        /*  7517 */
        int i = paramInt2 * 3 / 4;
        /*  7518 */
        byte[] arrayOfByte = new byte[i];
        /*  7519 */
        int j = paramInt1;
        /*  7520 */
        int k = paramInt1 + paramInt2;
        /*  7521 */
        byte b = 0;
        /*  7522 */
        while (j < k) {
            /*  7523 */
            char c1 = paramArrayOfchar[j++];
            /*  7524 */
            char c2 = paramArrayOfchar[j++];
            /*  7525 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7526 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7528 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7529 */
                return new byte[0];
                /*       */
            }
            /*  7531 */
            byte b3 = au[c1];
            /*  7532 */
            byte b4 = au[c2];
            /*  7533 */
            byte b5 = au[b1];
            /*  7534 */
            byte b6 = au[b2];
            /*  7535 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7536 */
                return new byte[0];
                /*       */
            }
            /*  7538 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7539 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7540 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7541 */
            arrayOfByte[b++] = (byte) m;
            /*  7542 */
            if (b < i) {
                /*  7543 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7545 */
            if (b < i) {
                /*  7546 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7549 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bO(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7553 */
        if (paramInt2 % 4 != 0) {
            /*  7554 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7557 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7558 */
            paramInt2--;
            /*       */
        }
        /*  7560 */
        int i = paramInt2 * 3 / 4;
        /*  7561 */
        byte[] arrayOfByte = new byte[i];
        /*  7562 */
        int j = paramInt1;
        /*  7563 */
        int k = paramInt1 + paramInt2;
        /*  7564 */
        byte b = 0;
        /*  7565 */
        while (j < k) {
            /*  7566 */
            char c1 = paramArrayOfchar[j++];
            /*  7567 */
            char c2 = paramArrayOfchar[j++];
            /*  7568 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7569 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7571 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7572 */
                return new byte[0];
                /*       */
            }
            /*  7574 */
            byte b3 = au[c1];
            /*  7575 */
            byte b4 = au[c2];
            /*  7576 */
            byte b5 = au[b1];
            /*  7577 */
            byte b6 = au[b2];
            /*  7578 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7579 */
                return new byte[0];
                /*       */
            }
            /*  7581 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7582 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7583 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7584 */
            arrayOfByte[b++] = (byte) m;
            /*  7585 */
            if (b < i) {
                /*  7586 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7588 */
            if (b < i) {
                /*  7589 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7592 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bP(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7596 */
        if (paramInt2 % 4 != 0) {
            /*  7597 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7600 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7601 */
            paramInt2--;
            /*       */
        }
        /*  7603 */
        int i = paramInt2 * 3 / 4;
        /*  7604 */
        byte[] arrayOfByte = new byte[i];
        /*  7605 */
        int j = paramInt1;
        /*  7606 */
        int k = paramInt1 + paramInt2;
        /*  7607 */
        byte b = 0;
        /*  7608 */
        while (j < k) {
            /*  7609 */
            char c1 = paramArrayOfchar[j++];
            /*  7610 */
            char c2 = paramArrayOfchar[j++];
            /*  7611 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7612 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7614 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7615 */
                return new byte[0];
                /*       */
            }
            /*  7617 */
            byte b3 = au[c1];
            /*  7618 */
            byte b4 = au[c2];
            /*  7619 */
            byte b5 = au[b1];
            /*  7620 */
            byte b6 = au[b2];
            /*  7621 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7622 */
                return new byte[0];
                /*       */
            }
            /*  7624 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7625 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7626 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7627 */
            arrayOfByte[b++] = (byte) m;
            /*  7628 */
            if (b < i) {
                /*  7629 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7631 */
            if (b < i) {
                /*  7632 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7635 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bQ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7639 */
        if (paramInt2 % 4 != 0) {
            /*  7640 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7643 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7644 */
            paramInt2--;
            /*       */
        }
        /*  7646 */
        int i = paramInt2 * 3 / 4;
        /*  7647 */
        byte[] arrayOfByte = new byte[i];
        /*  7648 */
        int j = paramInt1;
        /*  7649 */
        int k = paramInt1 + paramInt2;
        /*  7650 */
        byte b = 0;
        /*  7651 */
        while (j < k) {
            /*  7652 */
            char c1 = paramArrayOfchar[j++];
            /*  7653 */
            char c2 = paramArrayOfchar[j++];
            /*  7654 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7655 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7657 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7658 */
                return new byte[0];
                /*       */
            }
            /*  7660 */
            byte b3 = au[c1];
            /*  7661 */
            byte b4 = au[c2];
            /*  7662 */
            byte b5 = au[b1];
            /*  7663 */
            byte b6 = au[b2];
            /*  7664 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7665 */
                return new byte[0];
                /*       */
            }
            /*  7667 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7668 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7669 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7670 */
            arrayOfByte[b++] = (byte) m;
            /*  7671 */
            if (b < i) {
                /*  7672 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7674 */
            if (b < i) {
                /*  7675 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7678 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bR(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7682 */
        if (paramInt2 % 4 != 0) {
            /*  7683 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7686 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7687 */
            paramInt2--;
            /*       */
        }
        /*  7689 */
        int i = paramInt2 * 3 / 4;
        /*  7690 */
        byte[] arrayOfByte = new byte[i];
        /*  7691 */
        int j = paramInt1;
        /*  7692 */
        int k = paramInt1 + paramInt2;
        /*  7693 */
        byte b = 0;
        /*  7694 */
        while (j < k) {
            /*  7695 */
            char c1 = paramArrayOfchar[j++];
            /*  7696 */
            char c2 = paramArrayOfchar[j++];
            /*  7697 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7698 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7700 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7701 */
                return new byte[0];
                /*       */
            }
            /*  7703 */
            byte b3 = au[c1];
            /*  7704 */
            byte b4 = au[c2];
            /*  7705 */
            byte b5 = au[b1];
            /*  7706 */
            byte b6 = au[b2];
            /*  7707 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7708 */
                return new byte[0];
                /*       */
            }
            /*  7710 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7711 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7712 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7713 */
            arrayOfByte[b++] = (byte) m;
            /*  7714 */
            if (b < i) {
                /*  7715 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7717 */
            if (b < i) {
                /*  7718 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7721 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bS(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7725 */
        if (paramInt2 % 4 != 0) {
            /*  7726 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7729 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7730 */
            paramInt2--;
            /*       */
        }
        /*  7732 */
        int i = paramInt2 * 3 / 4;
        /*  7733 */
        byte[] arrayOfByte = new byte[i];
        /*  7734 */
        int j = paramInt1;
        /*  7735 */
        int k = paramInt1 + paramInt2;
        /*  7736 */
        byte b = 0;
        /*  7737 */
        while (j < k) {
            /*  7738 */
            char c1 = paramArrayOfchar[j++];
            /*  7739 */
            char c2 = paramArrayOfchar[j++];
            /*  7740 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7741 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7743 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7744 */
                return new byte[0];
                /*       */
            }
            /*  7746 */
            byte b3 = au[c1];
            /*  7747 */
            byte b4 = au[c2];
            /*  7748 */
            byte b5 = au[b1];
            /*  7749 */
            byte b6 = au[b2];
            /*  7750 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7751 */
                return new byte[0];
                /*       */
            }
            /*  7753 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7754 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7755 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7756 */
            arrayOfByte[b++] = (byte) m;
            /*  7757 */
            if (b < i) {
                /*  7758 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7760 */
            if (b < i) {
                /*  7761 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7764 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*  7767 */   private static char[] E = new char[64];
    /*  7768 */   private static char[] F = new char[64];

    /*       */
    /*       */
    private static byte[] bT(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7771 */
        if (paramInt2 % 4 != 0) {
            /*  7772 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7775 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7776 */
            paramInt2--;
            /*       */
        }
        /*  7778 */
        int i = paramInt2 * 3 / 4;
        /*  7779 */
        byte[] arrayOfByte = new byte[i];
        /*  7780 */
        int j = paramInt1;
        /*  7781 */
        int k = paramInt1 + paramInt2;
        /*  7782 */
        byte b = 0;
        /*  7783 */
        while (j < k) {
            /*  7784 */
            char c1 = paramArrayOfchar[j++];
            /*  7785 */
            char c2 = paramArrayOfchar[j++];
            /*  7786 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7787 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7789 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7790 */
                return new byte[0];
                /*       */
            }
            /*  7792 */
            byte b3 = au[c1];
            /*  7793 */
            byte b4 = au[c2];
            /*  7794 */
            byte b5 = au[b1];
            /*  7795 */
            byte b6 = au[b2];
            /*  7796 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7797 */
                return new byte[0];
                /*       */
            }
            /*  7799 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7800 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7801 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7802 */
            arrayOfByte[b++] = (byte) m;
            /*  7803 */
            if (b < i) {
                /*  7804 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7806 */
            if (b < i) {
                /*  7807 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7810 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bU(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7814 */
        if (paramInt2 % 4 != 0) {
            /*  7815 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7818 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7819 */
            paramInt2--;
            /*       */
        }
        /*  7821 */
        int i = paramInt2 * 3 / 4;
        /*  7822 */
        byte[] arrayOfByte = new byte[i];
        /*  7823 */
        int j = paramInt1;
        /*  7824 */
        int k = paramInt1 + paramInt2;
        /*  7825 */
        byte b = 0;
        /*  7826 */
        while (j < k) {
            /*  7827 */
            char c1 = paramArrayOfchar[j++];
            /*  7828 */
            char c2 = paramArrayOfchar[j++];
            /*  7829 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7830 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7832 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7833 */
                return new byte[0];
                /*       */
            }
            /*  7835 */
            byte b3 = au[c1];
            /*  7836 */
            byte b4 = au[c2];
            /*  7837 */
            byte b5 = au[b1];
            /*  7838 */
            byte b6 = au[b2];
            /*  7839 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7840 */
                return new byte[0];
                /*       */
            }
            /*  7842 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7843 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7844 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7845 */
            arrayOfByte[b++] = (byte) m;
            /*  7846 */
            if (b < i) {
                /*  7847 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7849 */
            if (b < i) {
                /*  7850 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7853 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bV(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7857 */
        if (paramInt2 % 4 != 0) {
            /*  7858 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7861 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7862 */
            paramInt2--;
            /*       */
        }
        /*  7864 */
        int i = paramInt2 * 3 / 4;
        /*  7865 */
        byte[] arrayOfByte = new byte[i];
        /*  7866 */
        int j = paramInt1;
        /*  7867 */
        int k = paramInt1 + paramInt2;
        /*  7868 */
        byte b = 0;
        /*  7869 */
        while (j < k) {
            /*  7870 */
            char c1 = paramArrayOfchar[j++];
            /*  7871 */
            char c2 = paramArrayOfchar[j++];
            /*  7872 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7873 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7875 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7876 */
                return new byte[0];
                /*       */
            }
            /*  7878 */
            byte b3 = au[c1];
            /*  7879 */
            byte b4 = au[c2];
            /*  7880 */
            byte b5 = au[b1];
            /*  7881 */
            byte b6 = au[b2];
            /*  7882 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7883 */
                return new byte[0];
                /*       */
            }
            /*  7885 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7886 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7887 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7888 */
            arrayOfByte[b++] = (byte) m;
            /*  7889 */
            if (b < i) {
                /*  7890 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7892 */
            if (b < i) {
                /*  7893 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7896 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bW(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7900 */
        if (paramInt2 % 4 != 0) {
            /*  7901 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7904 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7905 */
            paramInt2--;
            /*       */
        }
        /*  7907 */
        int i = paramInt2 * 3 / 4;
        /*  7908 */
        byte[] arrayOfByte = new byte[i];
        /*  7909 */
        int j = paramInt1;
        /*  7910 */
        int k = paramInt1 + paramInt2;
        /*  7911 */
        byte b = 0;
        /*  7912 */
        while (j < k) {
            /*  7913 */
            char c1 = paramArrayOfchar[j++];
            /*  7914 */
            char c2 = paramArrayOfchar[j++];
            /*  7915 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7916 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7918 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7919 */
                return new byte[0];
                /*       */
            }
            /*  7921 */
            byte b3 = au[c1];
            /*  7922 */
            byte b4 = au[c2];
            /*  7923 */
            byte b5 = au[b1];
            /*  7924 */
            byte b6 = au[b2];
            /*  7925 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7926 */
                return new byte[0];
                /*       */
            }
            /*  7928 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7929 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7930 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7931 */
            arrayOfByte[b++] = (byte) m;
            /*  7932 */
            if (b < i) {
                /*  7933 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7935 */
            if (b < i) {
                /*  7936 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7939 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bX(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7943 */
        if (paramInt2 % 4 != 0) {
            /*  7944 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7947 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7948 */
            paramInt2--;
            /*       */
        }
        /*  7950 */
        int i = paramInt2 * 3 / 4;
        /*  7951 */
        byte[] arrayOfByte = new byte[i];
        /*  7952 */
        int j = paramInt1;
        /*  7953 */
        int k = paramInt1 + paramInt2;
        /*  7954 */
        byte b = 0;
        /*  7955 */
        while (j < k) {
            /*  7956 */
            char c1 = paramArrayOfchar[j++];
            /*  7957 */
            char c2 = paramArrayOfchar[j++];
            /*  7958 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  7959 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  7961 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  7962 */
                return new byte[0];
                /*       */
            }
            /*  7964 */
            byte b3 = au[c1];
            /*  7965 */
            byte b4 = au[c2];
            /*  7966 */
            byte b5 = au[b1];
            /*  7967 */
            byte b6 = au[b2];
            /*  7968 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  7969 */
                return new byte[0];
                /*       */
            }
            /*  7971 */
            int m = b3 << 2 | b4 >>> 4;
            /*  7972 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  7973 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  7974 */
            arrayOfByte[b++] = (byte) m;
            /*  7975 */
            if (b < i) {
                /*  7976 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  7978 */
            if (b < i) {
                /*  7979 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  7982 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bY(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  7986 */
        if (paramInt2 % 4 != 0) {
            /*  7987 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  7990 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  7991 */
            paramInt2--;
            /*       */
        }
        /*  7993 */
        int i = paramInt2 * 3 / 4;
        /*  7994 */
        byte[] arrayOfByte = new byte[i];
        /*  7995 */
        int j = paramInt1;
        /*  7996 */
        int k = paramInt1 + paramInt2;
        /*  7997 */
        byte b = 0;
        /*  7998 */
        while (j < k) {
            /*  7999 */
            char c1 = paramArrayOfchar[j++];
            /*  8000 */
            char c2 = paramArrayOfchar[j++];
            /*  8001 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8002 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8004 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8005 */
                return new byte[0];
                /*       */
            }
            /*  8007 */
            byte b3 = au[c1];
            /*  8008 */
            byte b4 = au[c2];
            /*  8009 */
            byte b5 = au[b1];
            /*  8010 */
            byte b6 = au[b2];
            /*  8011 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8012 */
                return new byte[0];
                /*       */
            }
            /*  8014 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8015 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8016 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8017 */
            arrayOfByte[b++] = (byte) m;
            /*  8018 */
            if (b < i) {
                /*  8019 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8021 */
            if (b < i) {
                /*  8022 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8025 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] bZ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8029 */
        if (paramInt2 % 4 != 0) {
            /*  8030 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8033 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8034 */
            paramInt2--;
            /*       */
        }
        /*  8036 */
        int i = paramInt2 * 3 / 4;
        /*  8037 */
        byte[] arrayOfByte = new byte[i];
        /*  8038 */
        int j = paramInt1;
        /*  8039 */
        int k = paramInt1 + paramInt2;
        /*  8040 */
        byte b = 0;
        /*  8041 */
        while (j < k) {
            /*  8042 */
            char c1 = paramArrayOfchar[j++];
            /*  8043 */
            char c2 = paramArrayOfchar[j++];
            /*  8044 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8045 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8047 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8048 */
                return new byte[0];
                /*       */
            }
            /*  8050 */
            byte b3 = au[c1];
            /*  8051 */
            byte b4 = au[c2];
            /*  8052 */
            byte b5 = au[b1];
            /*  8053 */
            byte b6 = au[b2];
            /*  8054 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8055 */
                return new byte[0];
                /*       */
            }
            /*  8057 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8058 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8059 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8060 */
            arrayOfByte[b++] = (byte) m;
            /*  8061 */
            if (b < i) {
                /*  8062 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8064 */
            if (b < i) {
                /*  8065 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8068 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ca(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8072 */
        if (paramInt2 % 4 != 0) {
            /*  8073 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8076 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8077 */
            paramInt2--;
            /*       */
        }
        /*  8079 */
        int i = paramInt2 * 3 / 4;
        /*  8080 */
        byte[] arrayOfByte = new byte[i];
        /*  8081 */
        int j = paramInt1;
        /*  8082 */
        int k = paramInt1 + paramInt2;
        /*  8083 */
        byte b = 0;
        /*  8084 */
        while (j < k) {
            /*  8085 */
            char c1 = paramArrayOfchar[j++];
            /*  8086 */
            char c2 = paramArrayOfchar[j++];
            /*  8087 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8088 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8090 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8091 */
                return new byte[0];
                /*       */
            }
            /*  8093 */
            byte b3 = au[c1];
            /*  8094 */
            byte b4 = au[c2];
            /*  8095 */
            byte b5 = au[b1];
            /*  8096 */
            byte b6 = au[b2];
            /*  8097 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8098 */
                return new byte[0];
                /*       */
            }
            /*  8100 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8101 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8102 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8103 */
            arrayOfByte[b++] = (byte) m;
            /*  8104 */
            if (b < i) {
                /*  8105 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8107 */
            if (b < i) {
                /*  8108 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8111 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cb(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8115 */
        if (paramInt2 % 4 != 0) {
            /*  8116 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8119 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8120 */
            paramInt2--;
            /*       */
        }
        /*  8122 */
        int i = paramInt2 * 3 / 4;
        /*  8123 */
        byte[] arrayOfByte = new byte[i];
        /*  8124 */
        int j = paramInt1;
        /*  8125 */
        int k = paramInt1 + paramInt2;
        /*  8126 */
        byte b = 0;
        /*  8127 */
        while (j < k) {
            /*  8128 */
            char c1 = paramArrayOfchar[j++];
            /*  8129 */
            char c2 = paramArrayOfchar[j++];
            /*  8130 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8131 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8133 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8134 */
                return new byte[0];
                /*       */
            }
            /*  8136 */
            byte b3 = au[c1];
            /*  8137 */
            byte b4 = au[c2];
            /*  8138 */
            byte b5 = au[b1];
            /*  8139 */
            byte b6 = au[b2];
            /*  8140 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8141 */
                return new byte[0];
                /*       */
            }
            /*  8143 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8144 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8145 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8146 */
            arrayOfByte[b++] = (byte) m;
            /*  8147 */
            if (b < i) {
                /*  8148 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8150 */
            if (b < i) {
                /*  8151 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8154 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cc(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8158 */
        if (paramInt2 % 4 != 0) {
            /*  8159 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8162 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8163 */
            paramInt2--;
            /*       */
        }
        /*  8165 */
        int i = paramInt2 * 3 / 4;
        /*  8166 */
        byte[] arrayOfByte = new byte[i];
        /*  8167 */
        int j = paramInt1;
        /*  8168 */
        int k = paramInt1 + paramInt2;
        /*  8169 */
        byte b = 0;
        /*  8170 */
        while (j < k) {
            /*  8171 */
            char c1 = paramArrayOfchar[j++];
            /*  8172 */
            char c2 = paramArrayOfchar[j++];
            /*  8173 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8174 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8176 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8177 */
                return new byte[0];
                /*       */
            }
            /*  8179 */
            byte b3 = au[c1];
            /*  8180 */
            byte b4 = au[c2];
            /*  8181 */
            byte b5 = au[b1];
            /*  8182 */
            byte b6 = au[b2];
            /*  8183 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8184 */
                return new byte[0];
                /*       */
            }
            /*  8186 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8187 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8188 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8189 */
            arrayOfByte[b++] = (byte) m;
            /*  8190 */
            if (b < i) {
                /*  8191 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8193 */
            if (b < i) {
                /*  8194 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8197 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cd(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8201 */
        if (paramInt2 % 4 != 0) {
            /*  8202 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8205 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8206 */
            paramInt2--;
            /*       */
        }
        /*  8208 */
        int i = paramInt2 * 3 / 4;
        /*  8209 */
        byte[] arrayOfByte = new byte[i];
        /*  8210 */
        int j = paramInt1;
        /*  8211 */
        int k = paramInt1 + paramInt2;
        /*  8212 */
        byte b = 0;
        /*  8213 */
        while (j < k) {
            /*  8214 */
            char c1 = paramArrayOfchar[j++];
            /*  8215 */
            char c2 = paramArrayOfchar[j++];
            /*  8216 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8217 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8219 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8220 */
                return new byte[0];
                /*       */
            }
            /*  8222 */
            byte b3 = au[c1];
            /*  8223 */
            byte b4 = au[c2];
            /*  8224 */
            byte b5 = au[b1];
            /*  8225 */
            byte b6 = au[b2];
            /*  8226 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8227 */
                return new byte[0];
                /*       */
            }
            /*  8229 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8230 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8231 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8232 */
            arrayOfByte[b++] = (byte) m;
            /*  8233 */
            if (b < i) {
                /*  8234 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8236 */
            if (b < i) {
                /*  8237 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8240 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ce(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8244 */
        if (paramInt2 % 4 != 0) {
            /*  8245 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8248 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8249 */
            paramInt2--;
            /*       */
        }
        /*  8251 */
        int i = paramInt2 * 3 / 4;
        /*  8252 */
        byte[] arrayOfByte = new byte[i];
        /*  8253 */
        int j = paramInt1;
        /*  8254 */
        int k = paramInt1 + paramInt2;
        /*  8255 */
        byte b = 0;
        /*  8256 */
        while (j < k) {
            /*  8257 */
            char c1 = paramArrayOfchar[j++];
            /*  8258 */
            char c2 = paramArrayOfchar[j++];
            /*  8259 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8260 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8262 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8263 */
                return new byte[0];
                /*       */
            }
            /*  8265 */
            byte b3 = au[c1];
            /*  8266 */
            byte b4 = au[c2];
            /*  8267 */
            byte b5 = au[b1];
            /*  8268 */
            byte b6 = au[b2];
            /*  8269 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8270 */
                return new byte[0];
                /*       */
            }
            /*  8272 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8273 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8274 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8275 */
            arrayOfByte[b++] = (byte) m;
            /*  8276 */
            if (b < i) {
                /*  8277 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8279 */
            if (b < i) {
                /*  8280 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8283 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cf(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8287 */
        if (paramInt2 % 4 != 0) {
            /*  8288 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8291 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8292 */
            paramInt2--;
            /*       */
        }
        /*  8294 */
        int i = paramInt2 * 3 / 4;
        /*  8295 */
        byte[] arrayOfByte = new byte[i];
        /*  8296 */
        int j = paramInt1;
        /*  8297 */
        int k = paramInt1 + paramInt2;
        /*  8298 */
        byte b = 0;
        /*  8299 */
        while (j < k) {
            /*  8300 */
            char c1 = paramArrayOfchar[j++];
            /*  8301 */
            char c2 = paramArrayOfchar[j++];
            /*  8302 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8303 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8305 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8306 */
                return new byte[0];
                /*       */
            }
            /*  8308 */
            byte b3 = au[c1];
            /*  8309 */
            byte b4 = au[c2];
            /*  8310 */
            byte b5 = au[b1];
            /*  8311 */
            byte b6 = au[b2];
            /*  8312 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8313 */
                return new byte[0];
                /*       */
            }
            /*  8315 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8316 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8317 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8318 */
            arrayOfByte[b++] = (byte) m;
            /*  8319 */
            if (b < i) {
                /*  8320 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8322 */
            if (b < i) {
                /*  8323 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8326 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cg(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8330 */
        if (paramInt2 % 4 != 0) {
            /*  8331 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8334 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8335 */
            paramInt2--;
            /*       */
        }
        /*  8337 */
        int i = paramInt2 * 3 / 4;
        /*  8338 */
        byte[] arrayOfByte = new byte[i];
        /*  8339 */
        int j = paramInt1;
        /*  8340 */
        int k = paramInt1 + paramInt2;
        /*  8341 */
        byte b = 0;
        /*  8342 */
        while (j < k) {
            /*  8343 */
            char c1 = paramArrayOfchar[j++];
            /*  8344 */
            char c2 = paramArrayOfchar[j++];
            /*  8345 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8346 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8348 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8349 */
                return new byte[0];
                /*       */
            }
            /*  8351 */
            byte b3 = au[c1];
            /*  8352 */
            byte b4 = au[c2];
            /*  8353 */
            byte b5 = au[b1];
            /*  8354 */
            byte b6 = au[b2];
            /*  8355 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8356 */
                return new byte[0];
                /*       */
            }
            /*  8358 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8359 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8360 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8361 */
            arrayOfByte[b++] = (byte) m;
            /*  8362 */
            if (b < i) {
                /*  8363 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8365 */
            if (b < i) {
                /*  8366 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8369 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ch(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8373 */
        if (paramInt2 % 4 != 0) {
            /*  8374 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8377 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8378 */
            paramInt2--;
            /*       */
        }
        /*  8380 */
        int i = paramInt2 * 3 / 4;
        /*  8381 */
        byte[] arrayOfByte = new byte[i];
        /*  8382 */
        int j = paramInt1;
        /*  8383 */
        int k = paramInt1 + paramInt2;
        /*  8384 */
        byte b = 0;
        /*  8385 */
        while (j < k) {
            /*  8386 */
            char c1 = paramArrayOfchar[j++];
            /*  8387 */
            char c2 = paramArrayOfchar[j++];
            /*  8388 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8389 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8391 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8392 */
                return new byte[0];
                /*       */
            }
            /*  8394 */
            byte b3 = au[c1];
            /*  8395 */
            byte b4 = au[c2];
            /*  8396 */
            byte b5 = au[b1];
            /*  8397 */
            byte b6 = au[b2];
            /*  8398 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8399 */
                return new byte[0];
                /*       */
            }
            /*  8401 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8402 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8403 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8404 */
            arrayOfByte[b++] = (byte) m;
            /*  8405 */
            if (b < i) {
                /*  8406 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8408 */
            if (b < i) {
                /*  8409 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8412 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ci(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8416 */
        if (paramInt2 % 4 != 0) {
            /*  8417 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8420 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8421 */
            paramInt2--;
            /*       */
        }
        /*  8423 */
        int i = paramInt2 * 3 / 4;
        /*  8424 */
        byte[] arrayOfByte = new byte[i];
        /*  8425 */
        int j = paramInt1;
        /*  8426 */
        int k = paramInt1 + paramInt2;
        /*  8427 */
        byte b = 0;
        /*  8428 */
        while (j < k) {
            /*  8429 */
            char c1 = paramArrayOfchar[j++];
            /*  8430 */
            char c2 = paramArrayOfchar[j++];
            /*  8431 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8432 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8434 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8435 */
                return new byte[0];
                /*       */
            }
            /*  8437 */
            byte b3 = au[c1];
            /*  8438 */
            byte b4 = au[c2];
            /*  8439 */
            byte b5 = au[b1];
            /*  8440 */
            byte b6 = au[b2];
            /*  8441 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8442 */
                return new byte[0];
                /*       */
            }
            /*  8444 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8445 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8446 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8447 */
            arrayOfByte[b++] = (byte) m;
            /*  8448 */
            if (b < i) {
                /*  8449 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8451 */
            if (b < i) {
                /*  8452 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8455 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cj(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8459 */
        if (paramInt2 % 4 != 0) {
            /*  8460 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8463 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8464 */
            paramInt2--;
            /*       */
        }
        /*  8466 */
        int i = paramInt2 * 3 / 4;
        /*  8467 */
        byte[] arrayOfByte = new byte[i];
        /*  8468 */
        int j = paramInt1;
        /*  8469 */
        int k = paramInt1 + paramInt2;
        /*  8470 */
        byte b = 0;
        /*  8471 */
        while (j < k) {
            /*  8472 */
            char c1 = paramArrayOfchar[j++];
            /*  8473 */
            char c2 = paramArrayOfchar[j++];
            /*  8474 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8475 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8477 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8478 */
                return new byte[0];
                /*       */
            }
            /*  8480 */
            byte b3 = au[c1];
            /*  8481 */
            byte b4 = au[c2];
            /*  8482 */
            byte b5 = au[b1];
            /*  8483 */
            byte b6 = au[b2];
            /*  8484 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8485 */
                return new byte[0];
                /*       */
            }
            /*  8487 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8488 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8489 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8490 */
            arrayOfByte[b++] = (byte) m;
            /*  8491 */
            if (b < i) {
                /*  8492 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8494 */
            if (b < i) {
                /*  8495 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8498 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ck(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8502 */
        if (paramInt2 % 4 != 0) {
            /*  8503 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8506 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8507 */
            paramInt2--;
            /*       */
        }
        /*  8509 */
        int i = paramInt2 * 3 / 4;
        /*  8510 */
        byte[] arrayOfByte = new byte[i];
        /*  8511 */
        int j = paramInt1;
        /*  8512 */
        int k = paramInt1 + paramInt2;
        /*  8513 */
        byte b = 0;
        /*  8514 */
        while (j < k) {
            /*  8515 */
            char c1 = paramArrayOfchar[j++];
            /*  8516 */
            char c2 = paramArrayOfchar[j++];
            /*  8517 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8518 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8520 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8521 */
                return new byte[0];
                /*       */
            }
            /*  8523 */
            byte b3 = au[c1];
            /*  8524 */
            byte b4 = au[c2];
            /*  8525 */
            byte b5 = au[b1];
            /*  8526 */
            byte b6 = au[b2];
            /*  8527 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8528 */
                return new byte[0];
                /*       */
            }
            /*  8530 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8531 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8532 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8533 */
            arrayOfByte[b++] = (byte) m;
            /*  8534 */
            if (b < i) {
                /*  8535 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8537 */
            if (b < i) {
                /*  8538 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8541 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cl(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8545 */
        if (paramInt2 % 4 != 0) {
            /*  8546 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8549 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8550 */
            paramInt2--;
            /*       */
        }
        /*  8552 */
        int i = paramInt2 * 3 / 4;
        /*  8553 */
        byte[] arrayOfByte = new byte[i];
        /*  8554 */
        int j = paramInt1;
        /*  8555 */
        int k = paramInt1 + paramInt2;
        /*  8556 */
        byte b = 0;
        /*  8557 */
        while (j < k) {
            /*  8558 */
            char c1 = paramArrayOfchar[j++];
            /*  8559 */
            char c2 = paramArrayOfchar[j++];
            /*  8560 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8561 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8563 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8564 */
                return new byte[0];
                /*       */
            }
            /*  8566 */
            byte b3 = au[c1];
            /*  8567 */
            byte b4 = au[c2];
            /*  8568 */
            byte b5 = au[b1];
            /*  8569 */
            byte b6 = au[b2];
            /*  8570 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8571 */
                return new byte[0];
                /*       */
            }
            /*  8573 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8574 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8575 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8576 */
            arrayOfByte[b++] = (byte) m;
            /*  8577 */
            if (b < i) {
                /*  8578 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8580 */
            if (b < i) {
                /*  8581 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8584 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cm(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8588 */
        if (paramInt2 % 4 != 0) {
            /*  8589 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8592 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8593 */
            paramInt2--;
            /*       */
        }
        /*  8595 */
        int i = paramInt2 * 3 / 4;
        /*  8596 */
        byte[] arrayOfByte = new byte[i];
        /*  8597 */
        int j = paramInt1;
        /*  8598 */
        int k = paramInt1 + paramInt2;
        /*  8599 */
        byte b = 0;
        /*  8600 */
        while (j < k) {
            /*  8601 */
            char c1 = paramArrayOfchar[j++];
            /*  8602 */
            char c2 = paramArrayOfchar[j++];
            /*  8603 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8604 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8606 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8607 */
                return new byte[0];
                /*       */
            }
            /*  8609 */
            byte b3 = au[c1];
            /*  8610 */
            byte b4 = au[c2];
            /*  8611 */
            byte b5 = au[b1];
            /*  8612 */
            byte b6 = au[b2];
            /*  8613 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8614 */
                return new byte[0];
                /*       */
            }
            /*  8616 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8617 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8618 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8619 */
            arrayOfByte[b++] = (byte) m;
            /*  8620 */
            if (b < i) {
                /*  8621 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8623 */
            if (b < i) {
                /*  8624 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8627 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*  8630 */   private static char[] G = new char[64];
    /*  8631 */   private static char[] H = new char[64];

    /*       */
    /*       */
    private static byte[] cn(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8634 */
        if (paramInt2 % 4 != 0) {
            /*  8635 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8638 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8639 */
            paramInt2--;
            /*       */
        }
        /*  8641 */
        int i = paramInt2 * 3 / 4;
        /*  8642 */
        byte[] arrayOfByte = new byte[i];
        /*  8643 */
        int j = paramInt1;
        /*  8644 */
        int k = paramInt1 + paramInt2;
        /*  8645 */
        byte b = 0;
        /*  8646 */
        while (j < k) {
            /*  8647 */
            char c1 = paramArrayOfchar[j++];
            /*  8648 */
            char c2 = paramArrayOfchar[j++];
            /*  8649 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8650 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8652 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8653 */
                return new byte[0];
                /*       */
            }
            /*  8655 */
            byte b3 = au[c1];
            /*  8656 */
            byte b4 = au[c2];
            /*  8657 */
            byte b5 = au[b1];
            /*  8658 */
            byte b6 = au[b2];
            /*  8659 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8660 */
                return new byte[0];
                /*       */
            }
            /*  8662 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8663 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8664 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8665 */
            arrayOfByte[b++] = (byte) m;
            /*  8666 */
            if (b < i) {
                /*  8667 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8669 */
            if (b < i) {
                /*  8670 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8673 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] co(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8677 */
        if (paramInt2 % 4 != 0) {
            /*  8678 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8681 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8682 */
            paramInt2--;
            /*       */
        }
        /*  8684 */
        int i = paramInt2 * 3 / 4;
        /*  8685 */
        byte[] arrayOfByte = new byte[i];
        /*  8686 */
        int j = paramInt1;
        /*  8687 */
        int k = paramInt1 + paramInt2;
        /*  8688 */
        byte b = 0;
        /*  8689 */
        while (j < k) {
            /*  8690 */
            char c1 = paramArrayOfchar[j++];
            /*  8691 */
            char c2 = paramArrayOfchar[j++];
            /*  8692 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8693 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8695 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8696 */
                return new byte[0];
                /*       */
            }
            /*  8698 */
            byte b3 = au[c1];
            /*  8699 */
            byte b4 = au[c2];
            /*  8700 */
            byte b5 = au[b1];
            /*  8701 */
            byte b6 = au[b2];
            /*  8702 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8703 */
                return new byte[0];
                /*       */
            }
            /*  8705 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8706 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8707 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8708 */
            arrayOfByte[b++] = (byte) m;
            /*  8709 */
            if (b < i) {
                /*  8710 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8712 */
            if (b < i) {
                /*  8713 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8716 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cp(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8720 */
        if (paramInt2 % 4 != 0) {
            /*  8721 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8724 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8725 */
            paramInt2--;
            /*       */
        }
        /*  8727 */
        int i = paramInt2 * 3 / 4;
        /*  8728 */
        byte[] arrayOfByte = new byte[i];
        /*  8729 */
        int j = paramInt1;
        /*  8730 */
        int k = paramInt1 + paramInt2;
        /*  8731 */
        byte b = 0;
        /*  8732 */
        while (j < k) {
            /*  8733 */
            char c1 = paramArrayOfchar[j++];
            /*  8734 */
            char c2 = paramArrayOfchar[j++];
            /*  8735 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8736 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8738 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8739 */
                return new byte[0];
                /*       */
            }
            /*  8741 */
            byte b3 = au[c1];
            /*  8742 */
            byte b4 = au[c2];
            /*  8743 */
            byte b5 = au[b1];
            /*  8744 */
            byte b6 = au[b2];
            /*  8745 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8746 */
                return new byte[0];
                /*       */
            }
            /*  8748 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8749 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8750 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8751 */
            arrayOfByte[b++] = (byte) m;
            /*  8752 */
            if (b < i) {
                /*  8753 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8755 */
            if (b < i) {
                /*  8756 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8759 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cq(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8763 */
        if (paramInt2 % 4 != 0) {
            /*  8764 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8767 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8768 */
            paramInt2--;
            /*       */
        }
        /*  8770 */
        int i = paramInt2 * 3 / 4;
        /*  8771 */
        byte[] arrayOfByte = new byte[i];
        /*  8772 */
        int j = paramInt1;
        /*  8773 */
        int k = paramInt1 + paramInt2;
        /*  8774 */
        byte b = 0;
        /*  8775 */
        while (j < k) {
            /*  8776 */
            char c1 = paramArrayOfchar[j++];
            /*  8777 */
            char c2 = paramArrayOfchar[j++];
            /*  8778 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8779 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8781 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8782 */
                return new byte[0];
                /*       */
            }
            /*  8784 */
            byte b3 = au[c1];
            /*  8785 */
            byte b4 = au[c2];
            /*  8786 */
            byte b5 = au[b1];
            /*  8787 */
            byte b6 = au[b2];
            /*  8788 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8789 */
                return new byte[0];
                /*       */
            }
            /*  8791 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8792 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8793 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8794 */
            arrayOfByte[b++] = (byte) m;
            /*  8795 */
            if (b < i) {
                /*  8796 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8798 */
            if (b < i) {
                /*  8799 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8802 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cr(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8806 */
        if (paramInt2 % 4 != 0) {
            /*  8807 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8810 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8811 */
            paramInt2--;
            /*       */
        }
        /*  8813 */
        int i = paramInt2 * 3 / 4;
        /*  8814 */
        byte[] arrayOfByte = new byte[i];
        /*  8815 */
        int j = paramInt1;
        /*  8816 */
        int k = paramInt1 + paramInt2;
        /*  8817 */
        byte b = 0;
        /*  8818 */
        while (j < k) {
            /*  8819 */
            char c1 = paramArrayOfchar[j++];
            /*  8820 */
            char c2 = paramArrayOfchar[j++];
            /*  8821 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8822 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8824 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8825 */
                return new byte[0];
                /*       */
            }
            /*  8827 */
            byte b3 = au[c1];
            /*  8828 */
            byte b4 = au[c2];
            /*  8829 */
            byte b5 = au[b1];
            /*  8830 */
            byte b6 = au[b2];
            /*  8831 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8832 */
                return new byte[0];
                /*       */
            }
            /*  8834 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8835 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8836 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8837 */
            arrayOfByte[b++] = (byte) m;
            /*  8838 */
            if (b < i) {
                /*  8839 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8841 */
            if (b < i) {
                /*  8842 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8845 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cs(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8849 */
        if (paramInt2 % 4 != 0) {
            /*  8850 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8853 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8854 */
            paramInt2--;
            /*       */
        }
        /*  8856 */
        int i = paramInt2 * 3 / 4;
        /*  8857 */
        byte[] arrayOfByte = new byte[i];
        /*  8858 */
        int j = paramInt1;
        /*  8859 */
        int k = paramInt1 + paramInt2;
        /*  8860 */
        byte b = 0;
        /*  8861 */
        while (j < k) {
            /*  8862 */
            char c1 = paramArrayOfchar[j++];
            /*  8863 */
            char c2 = paramArrayOfchar[j++];
            /*  8864 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8865 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8867 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8868 */
                return new byte[0];
                /*       */
            }
            /*  8870 */
            byte b3 = au[c1];
            /*  8871 */
            byte b4 = au[c2];
            /*  8872 */
            byte b5 = au[b1];
            /*  8873 */
            byte b6 = au[b2];
            /*  8874 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8875 */
                return new byte[0];
                /*       */
            }
            /*  8877 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8878 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8879 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8880 */
            arrayOfByte[b++] = (byte) m;
            /*  8881 */
            if (b < i) {
                /*  8882 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8884 */
            if (b < i) {
                /*  8885 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8888 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ct(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8892 */
        if (paramInt2 % 4 != 0) {
            /*  8893 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8896 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8897 */
            paramInt2--;
            /*       */
        }
        /*  8899 */
        int i = paramInt2 * 3 / 4;
        /*  8900 */
        byte[] arrayOfByte = new byte[i];
        /*  8901 */
        int j = paramInt1;
        /*  8902 */
        int k = paramInt1 + paramInt2;
        /*  8903 */
        byte b = 0;
        /*  8904 */
        while (j < k) {
            /*  8905 */
            char c1 = paramArrayOfchar[j++];
            /*  8906 */
            char c2 = paramArrayOfchar[j++];
            /*  8907 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8908 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8910 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8911 */
                return new byte[0];
                /*       */
            }
            /*  8913 */
            byte b3 = au[c1];
            /*  8914 */
            byte b4 = au[c2];
            /*  8915 */
            byte b5 = au[b1];
            /*  8916 */
            byte b6 = au[b2];
            /*  8917 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8918 */
                return new byte[0];
                /*       */
            }
            /*  8920 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8921 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8922 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8923 */
            arrayOfByte[b++] = (byte) m;
            /*  8924 */
            if (b < i) {
                /*  8925 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8927 */
            if (b < i) {
                /*  8928 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8931 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cu(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8935 */
        if (paramInt2 % 4 != 0) {
            /*  8936 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8939 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8940 */
            paramInt2--;
            /*       */
        }
        /*  8942 */
        int i = paramInt2 * 3 / 4;
        /*  8943 */
        byte[] arrayOfByte = new byte[i];
        /*  8944 */
        int j = paramInt1;
        /*  8945 */
        int k = paramInt1 + paramInt2;
        /*  8946 */
        byte b = 0;
        /*  8947 */
        while (j < k) {
            /*  8948 */
            char c1 = paramArrayOfchar[j++];
            /*  8949 */
            char c2 = paramArrayOfchar[j++];
            /*  8950 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8951 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8953 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8954 */
                return new byte[0];
                /*       */
            }
            /*  8956 */
            byte b3 = au[c1];
            /*  8957 */
            byte b4 = au[c2];
            /*  8958 */
            byte b5 = au[b1];
            /*  8959 */
            byte b6 = au[b2];
            /*  8960 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  8961 */
                return new byte[0];
                /*       */
            }
            /*  8963 */
            int m = b3 << 2 | b4 >>> 4;
            /*  8964 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  8965 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  8966 */
            arrayOfByte[b++] = (byte) m;
            /*  8967 */
            if (b < i) {
                /*  8968 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  8970 */
            if (b < i) {
                /*  8971 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  8974 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cv(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  8978 */
        if (paramInt2 % 4 != 0) {
            /*  8979 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  8982 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  8983 */
            paramInt2--;
            /*       */
        }
        /*  8985 */
        int i = paramInt2 * 3 / 4;
        /*  8986 */
        byte[] arrayOfByte = new byte[i];
        /*  8987 */
        int j = paramInt1;
        /*  8988 */
        int k = paramInt1 + paramInt2;
        /*  8989 */
        byte b = 0;
        /*  8990 */
        while (j < k) {
            /*  8991 */
            char c1 = paramArrayOfchar[j++];
            /*  8992 */
            char c2 = paramArrayOfchar[j++];
            /*  8993 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  8994 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  8996 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  8997 */
                return new byte[0];
                /*       */
            }
            /*  8999 */
            byte b3 = au[c1];
            /*  9000 */
            byte b4 = au[c2];
            /*  9001 */
            byte b5 = au[b1];
            /*  9002 */
            byte b6 = au[b2];
            /*  9003 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9004 */
                return new byte[0];
                /*       */
            }
            /*  9006 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9007 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9008 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9009 */
            arrayOfByte[b++] = (byte) m;
            /*  9010 */
            if (b < i) {
                /*  9011 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9013 */
            if (b < i) {
                /*  9014 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9017 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cw(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9021 */
        if (paramInt2 % 4 != 0) {
            /*  9022 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9025 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9026 */
            paramInt2--;
            /*       */
        }
        /*  9028 */
        int i = paramInt2 * 3 / 4;
        /*  9029 */
        byte[] arrayOfByte = new byte[i];
        /*  9030 */
        int j = paramInt1;
        /*  9031 */
        int k = paramInt1 + paramInt2;
        /*  9032 */
        byte b = 0;
        /*  9033 */
        while (j < k) {
            /*  9034 */
            char c1 = paramArrayOfchar[j++];
            /*  9035 */
            char c2 = paramArrayOfchar[j++];
            /*  9036 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9037 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9039 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9040 */
                return new byte[0];
                /*       */
            }
            /*  9042 */
            byte b3 = au[c1];
            /*  9043 */
            byte b4 = au[c2];
            /*  9044 */
            byte b5 = au[b1];
            /*  9045 */
            byte b6 = au[b2];
            /*  9046 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9047 */
                return new byte[0];
                /*       */
            }
            /*  9049 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9050 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9051 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9052 */
            arrayOfByte[b++] = (byte) m;
            /*  9053 */
            if (b < i) {
                /*  9054 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9056 */
            if (b < i) {
                /*  9057 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9060 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cx(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9064 */
        if (paramInt2 % 4 != 0) {
            /*  9065 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9068 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9069 */
            paramInt2--;
            /*       */
        }
        /*  9071 */
        int i = paramInt2 * 3 / 4;
        /*  9072 */
        byte[] arrayOfByte = new byte[i];
        /*  9073 */
        int j = paramInt1;
        /*  9074 */
        int k = paramInt1 + paramInt2;
        /*  9075 */
        byte b = 0;
        /*  9076 */
        while (j < k) {
            /*  9077 */
            char c1 = paramArrayOfchar[j++];
            /*  9078 */
            char c2 = paramArrayOfchar[j++];
            /*  9079 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9080 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9082 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9083 */
                return new byte[0];
                /*       */
            }
            /*  9085 */
            byte b3 = au[c1];
            /*  9086 */
            byte b4 = au[c2];
            /*  9087 */
            byte b5 = au[b1];
            /*  9088 */
            byte b6 = au[b2];
            /*  9089 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9090 */
                return new byte[0];
                /*       */
            }
            /*  9092 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9093 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9094 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9095 */
            arrayOfByte[b++] = (byte) m;
            /*  9096 */
            if (b < i) {
                /*  9097 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9099 */
            if (b < i) {
                /*  9100 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9103 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cy(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9107 */
        if (paramInt2 % 4 != 0) {
            /*  9108 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9111 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9112 */
            paramInt2--;
            /*       */
        }
        /*  9114 */
        int i = paramInt2 * 3 / 4;
        /*  9115 */
        byte[] arrayOfByte = new byte[i];
        /*  9116 */
        int j = paramInt1;
        /*  9117 */
        int k = paramInt1 + paramInt2;
        /*  9118 */
        byte b = 0;
        /*  9119 */
        while (j < k) {
            /*  9120 */
            char c1 = paramArrayOfchar[j++];
            /*  9121 */
            char c2 = paramArrayOfchar[j++];
            /*  9122 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9123 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9125 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9126 */
                return new byte[0];
                /*       */
            }
            /*  9128 */
            byte b3 = au[c1];
            /*  9129 */
            byte b4 = au[c2];
            /*  9130 */
            byte b5 = au[b1];
            /*  9131 */
            byte b6 = au[b2];
            /*  9132 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9133 */
                return new byte[0];
                /*       */
            }
            /*  9135 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9136 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9137 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9138 */
            arrayOfByte[b++] = (byte) m;
            /*  9139 */
            if (b < i) {
                /*  9140 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9142 */
            if (b < i) {
                /*  9143 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9146 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cz(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9150 */
        if (paramInt2 % 4 != 0) {
            /*  9151 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9154 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9155 */
            paramInt2--;
            /*       */
        }
        /*  9157 */
        int i = paramInt2 * 3 / 4;
        /*  9158 */
        byte[] arrayOfByte = new byte[i];
        /*  9159 */
        int j = paramInt1;
        /*  9160 */
        int k = paramInt1 + paramInt2;
        /*  9161 */
        byte b = 0;
        /*  9162 */
        while (j < k) {
            /*  9163 */
            char c1 = paramArrayOfchar[j++];
            /*  9164 */
            char c2 = paramArrayOfchar[j++];
            /*  9165 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9166 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9168 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9169 */
                return new byte[0];
                /*       */
            }
            /*  9171 */
            byte b3 = au[c1];
            /*  9172 */
            byte b4 = au[c2];
            /*  9173 */
            byte b5 = au[b1];
            /*  9174 */
            byte b6 = au[b2];
            /*  9175 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9176 */
                return new byte[0];
                /*       */
            }
            /*  9178 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9179 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9180 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9181 */
            arrayOfByte[b++] = (byte) m;
            /*  9182 */
            if (b < i) {
                /*  9183 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9185 */
            if (b < i) {
                /*  9186 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9189 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cA(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9193 */
        if (paramInt2 % 4 != 0) {
            /*  9194 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9197 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9198 */
            paramInt2--;
            /*       */
        }
        /*  9200 */
        int i = paramInt2 * 3 / 4;
        /*  9201 */
        byte[] arrayOfByte = new byte[i];
        /*  9202 */
        int j = paramInt1;
        /*  9203 */
        int k = paramInt1 + paramInt2;
        /*  9204 */
        byte b = 0;
        /*  9205 */
        while (j < k) {
            /*  9206 */
            char c1 = paramArrayOfchar[j++];
            /*  9207 */
            char c2 = paramArrayOfchar[j++];
            /*  9208 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9209 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9211 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9212 */
                return new byte[0];
                /*       */
            }
            /*  9214 */
            byte b3 = au[c1];
            /*  9215 */
            byte b4 = au[c2];
            /*  9216 */
            byte b5 = au[b1];
            /*  9217 */
            byte b6 = au[b2];
            /*  9218 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9219 */
                return new byte[0];
                /*       */
            }
            /*  9221 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9222 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9223 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9224 */
            arrayOfByte[b++] = (byte) m;
            /*  9225 */
            if (b < i) {
                /*  9226 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9228 */
            if (b < i) {
                /*  9229 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9232 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cB(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9236 */
        if (paramInt2 % 4 != 0) {
            /*  9237 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9240 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9241 */
            paramInt2--;
            /*       */
        }
        /*  9243 */
        int i = paramInt2 * 3 / 4;
        /*  9244 */
        byte[] arrayOfByte = new byte[i];
        /*  9245 */
        int j = paramInt1;
        /*  9246 */
        int k = paramInt1 + paramInt2;
        /*  9247 */
        byte b = 0;
        /*  9248 */
        while (j < k) {
            /*  9249 */
            char c1 = paramArrayOfchar[j++];
            /*  9250 */
            char c2 = paramArrayOfchar[j++];
            /*  9251 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9252 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9254 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9255 */
                return new byte[0];
                /*       */
            }
            /*  9257 */
            byte b3 = au[c1];
            /*  9258 */
            byte b4 = au[c2];
            /*  9259 */
            byte b5 = au[b1];
            /*  9260 */
            byte b6 = au[b2];
            /*  9261 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9262 */
                return new byte[0];
                /*       */
            }
            /*  9264 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9265 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9266 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9267 */
            arrayOfByte[b++] = (byte) m;
            /*  9268 */
            if (b < i) {
                /*  9269 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9271 */
            if (b < i) {
                /*  9272 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9275 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cC(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9279 */
        if (paramInt2 % 4 != 0) {
            /*  9280 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9283 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9284 */
            paramInt2--;
            /*       */
        }
        /*  9286 */
        int i = paramInt2 * 3 / 4;
        /*  9287 */
        byte[] arrayOfByte = new byte[i];
        /*  9288 */
        int j = paramInt1;
        /*  9289 */
        int k = paramInt1 + paramInt2;
        /*  9290 */
        byte b = 0;
        /*  9291 */
        while (j < k) {
            /*  9292 */
            char c1 = paramArrayOfchar[j++];
            /*  9293 */
            char c2 = paramArrayOfchar[j++];
            /*  9294 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9295 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9297 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9298 */
                return new byte[0];
                /*       */
            }
            /*  9300 */
            byte b3 = au[c1];
            /*  9301 */
            byte b4 = au[c2];
            /*  9302 */
            byte b5 = au[b1];
            /*  9303 */
            byte b6 = au[b2];
            /*  9304 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9305 */
                return new byte[0];
                /*       */
            }
            /*  9307 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9308 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9309 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9310 */
            arrayOfByte[b++] = (byte) m;
            /*  9311 */
            if (b < i) {
                /*  9312 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9314 */
            if (b < i) {
                /*  9315 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9318 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cD(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9322 */
        if (paramInt2 % 4 != 0) {
            /*  9323 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9326 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9327 */
            paramInt2--;
            /*       */
        }
        /*  9329 */
        int i = paramInt2 * 3 / 4;
        /*  9330 */
        byte[] arrayOfByte = new byte[i];
        /*  9331 */
        int j = paramInt1;
        /*  9332 */
        int k = paramInt1 + paramInt2;
        /*  9333 */
        byte b = 0;
        /*  9334 */
        while (j < k) {
            /*  9335 */
            char c1 = paramArrayOfchar[j++];
            /*  9336 */
            char c2 = paramArrayOfchar[j++];
            /*  9337 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9338 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9340 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9341 */
                return new byte[0];
                /*       */
            }
            /*  9343 */
            byte b3 = au[c1];
            /*  9344 */
            byte b4 = au[c2];
            /*  9345 */
            byte b5 = au[b1];
            /*  9346 */
            byte b6 = au[b2];
            /*  9347 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9348 */
                return new byte[0];
                /*       */
            }
            /*  9350 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9351 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9352 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9353 */
            arrayOfByte[b++] = (byte) m;
            /*  9354 */
            if (b < i) {
                /*  9355 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9357 */
            if (b < i) {
                /*  9358 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9361 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cE(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9365 */
        if (paramInt2 % 4 != 0) {
            /*  9366 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9369 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9370 */
            paramInt2--;
            /*       */
        }
        /*  9372 */
        int i = paramInt2 * 3 / 4;
        /*  9373 */
        byte[] arrayOfByte = new byte[i];
        /*  9374 */
        int j = paramInt1;
        /*  9375 */
        int k = paramInt1 + paramInt2;
        /*  9376 */
        byte b = 0;
        /*  9377 */
        while (j < k) {
            /*  9378 */
            char c1 = paramArrayOfchar[j++];
            /*  9379 */
            char c2 = paramArrayOfchar[j++];
            /*  9380 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9381 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9383 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9384 */
                return new byte[0];
                /*       */
            }
            /*  9386 */
            byte b3 = au[c1];
            /*  9387 */
            byte b4 = au[c2];
            /*  9388 */
            byte b5 = au[b1];
            /*  9389 */
            byte b6 = au[b2];
            /*  9390 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9391 */
                return new byte[0];
                /*       */
            }
            /*  9393 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9394 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9395 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9396 */
            arrayOfByte[b++] = (byte) m;
            /*  9397 */
            if (b < i) {
                /*  9398 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9400 */
            if (b < i) {
                /*  9401 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9404 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cF(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9408 */
        if (paramInt2 % 4 != 0) {
            /*  9409 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9412 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9413 */
            paramInt2--;
            /*       */
        }
        /*  9415 */
        int i = paramInt2 * 3 / 4;
        /*  9416 */
        byte[] arrayOfByte = new byte[i];
        /*  9417 */
        int j = paramInt1;
        /*  9418 */
        int k = paramInt1 + paramInt2;
        /*  9419 */
        byte b = 0;
        /*  9420 */
        while (j < k) {
            /*  9421 */
            char c1 = paramArrayOfchar[j++];
            /*  9422 */
            char c2 = paramArrayOfchar[j++];
            /*  9423 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9424 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9426 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9427 */
                return new byte[0];
                /*       */
            }
            /*  9429 */
            byte b3 = au[c1];
            /*  9430 */
            byte b4 = au[c2];
            /*  9431 */
            byte b5 = au[b1];
            /*  9432 */
            byte b6 = au[b2];
            /*  9433 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9434 */
                return new byte[0];
                /*       */
            }
            /*  9436 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9437 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9438 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9439 */
            arrayOfByte[b++] = (byte) m;
            /*  9440 */
            if (b < i) {
                /*  9441 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9443 */
            if (b < i) {
                /*  9444 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9447 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cG(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9451 */
        if (paramInt2 % 4 != 0) {
            /*  9452 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9455 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9456 */
            paramInt2--;
            /*       */
        }
        /*  9458 */
        int i = paramInt2 * 3 / 4;
        /*  9459 */
        byte[] arrayOfByte = new byte[i];
        /*  9460 */
        int j = paramInt1;
        /*  9461 */
        int k = paramInt1 + paramInt2;
        /*  9462 */
        byte b = 0;
        /*  9463 */
        while (j < k) {
            /*  9464 */
            char c1 = paramArrayOfchar[j++];
            /*  9465 */
            char c2 = paramArrayOfchar[j++];
            /*  9466 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9467 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9469 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9470 */
                return new byte[0];
                /*       */
            }
            /*  9472 */
            byte b3 = au[c1];
            /*  9473 */
            byte b4 = au[c2];
            /*  9474 */
            byte b5 = au[b1];
            /*  9475 */
            byte b6 = au[b2];
            /*  9476 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9477 */
                return new byte[0];
                /*       */
            }
            /*  9479 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9480 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9481 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9482 */
            arrayOfByte[b++] = (byte) m;
            /*  9483 */
            if (b < i) {
                /*  9484 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9486 */
            if (b < i) {
                /*  9487 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9490 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*  9493 */   private static char[] I = new char[64];
    /*  9494 */   private static char[] J = new char[64];
    /*  9495 */   private static char[] K = new char[64];
    /*  9496 */   private static char[] L = new char[64];
    /*  9497 */   private static char[] M = new char[64];

    /*       */
    /*       */
    private static byte[] cH(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9500 */
        if (paramInt2 % 4 != 0) {
            /*  9501 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9504 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9505 */
            paramInt2--;
            /*       */
        }
        /*  9507 */
        int i = paramInt2 * 3 / 4;
        /*  9508 */
        byte[] arrayOfByte = new byte[i];
        /*  9509 */
        int j = paramInt1;
        /*  9510 */
        int k = paramInt1 + paramInt2;
        /*  9511 */
        byte b = 0;
        /*  9512 */
        while (j < k) {
            /*  9513 */
            char c1 = paramArrayOfchar[j++];
            /*  9514 */
            char c2 = paramArrayOfchar[j++];
            /*  9515 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9516 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9518 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9519 */
                return new byte[0];
                /*       */
            }
            /*  9521 */
            byte b3 = au[c1];
            /*  9522 */
            byte b4 = au[c2];
            /*  9523 */
            byte b5 = au[b1];
            /*  9524 */
            byte b6 = au[b2];
            /*  9525 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9526 */
                return new byte[0];
                /*       */
            }
            /*  9528 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9529 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9530 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9531 */
            arrayOfByte[b++] = (byte) m;
            /*  9532 */
            if (b < i) {
                /*  9533 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9535 */
            if (b < i) {
                /*  9536 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9539 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cI(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9543 */
        if (paramInt2 % 4 != 0) {
            /*  9544 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9547 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9548 */
            paramInt2--;
            /*       */
        }
        /*  9550 */
        int i = paramInt2 * 3 / 4;
        /*  9551 */
        byte[] arrayOfByte = new byte[i];
        /*  9552 */
        int j = paramInt1;
        /*  9553 */
        int k = paramInt1 + paramInt2;
        /*  9554 */
        byte b = 0;
        /*  9555 */
        while (j < k) {
            /*  9556 */
            char c1 = paramArrayOfchar[j++];
            /*  9557 */
            char c2 = paramArrayOfchar[j++];
            /*  9558 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9559 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9561 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9562 */
                return new byte[0];
                /*       */
            }
            /*  9564 */
            byte b3 = au[c1];
            /*  9565 */
            byte b4 = au[c2];
            /*  9566 */
            byte b5 = au[b1];
            /*  9567 */
            byte b6 = au[b2];
            /*  9568 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9569 */
                return new byte[0];
                /*       */
            }
            /*  9571 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9572 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9573 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9574 */
            arrayOfByte[b++] = (byte) m;
            /*  9575 */
            if (b < i) {
                /*  9576 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9578 */
            if (b < i) {
                /*  9579 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9582 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cJ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9586 */
        if (paramInt2 % 4 != 0) {
            /*  9587 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9590 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9591 */
            paramInt2--;
            /*       */
        }
        /*  9593 */
        int i = paramInt2 * 3 / 4;
        /*  9594 */
        byte[] arrayOfByte = new byte[i];
        /*  9595 */
        int j = paramInt1;
        /*  9596 */
        int k = paramInt1 + paramInt2;
        /*  9597 */
        byte b = 0;
        /*  9598 */
        while (j < k) {
            /*  9599 */
            char c1 = paramArrayOfchar[j++];
            /*  9600 */
            char c2 = paramArrayOfchar[j++];
            /*  9601 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9602 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9604 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9605 */
                return new byte[0];
                /*       */
            }
            /*  9607 */
            byte b3 = au[c1];
            /*  9608 */
            byte b4 = au[c2];
            /*  9609 */
            byte b5 = au[b1];
            /*  9610 */
            byte b6 = au[b2];
            /*  9611 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9612 */
                return new byte[0];
                /*       */
            }
            /*  9614 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9615 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9616 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9617 */
            arrayOfByte[b++] = (byte) m;
            /*  9618 */
            if (b < i) {
                /*  9619 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9621 */
            if (b < i) {
                /*  9622 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9625 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cK(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9629 */
        if (paramInt2 % 4 != 0) {
            /*  9630 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9633 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9634 */
            paramInt2--;
            /*       */
        }
        /*  9636 */
        int i = paramInt2 * 3 / 4;
        /*  9637 */
        byte[] arrayOfByte = new byte[i];
        /*  9638 */
        int j = paramInt1;
        /*  9639 */
        int k = paramInt1 + paramInt2;
        /*  9640 */
        byte b = 0;
        /*  9641 */
        while (j < k) {
            /*  9642 */
            char c1 = paramArrayOfchar[j++];
            /*  9643 */
            char c2 = paramArrayOfchar[j++];
            /*  9644 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9645 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9647 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9648 */
                return new byte[0];
                /*       */
            }
            /*  9650 */
            byte b3 = au[c1];
            /*  9651 */
            byte b4 = au[c2];
            /*  9652 */
            byte b5 = au[b1];
            /*  9653 */
            byte b6 = au[b2];
            /*  9654 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9655 */
                return new byte[0];
                /*       */
            }
            /*  9657 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9658 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9659 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9660 */
            arrayOfByte[b++] = (byte) m;
            /*  9661 */
            if (b < i) {
                /*  9662 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9664 */
            if (b < i) {
                /*  9665 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9668 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cL(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9672 */
        if (paramInt2 % 4 != 0) {
            /*  9673 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9676 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9677 */
            paramInt2--;
            /*       */
        }
        /*  9679 */
        int i = paramInt2 * 3 / 4;
        /*  9680 */
        byte[] arrayOfByte = new byte[i];
        /*  9681 */
        int j = paramInt1;
        /*  9682 */
        int k = paramInt1 + paramInt2;
        /*  9683 */
        byte b = 0;
        /*  9684 */
        while (j < k) {
            /*  9685 */
            char c1 = paramArrayOfchar[j++];
            /*  9686 */
            char c2 = paramArrayOfchar[j++];
            /*  9687 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9688 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9690 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9691 */
                return new byte[0];
                /*       */
            }
            /*  9693 */
            byte b3 = au[c1];
            /*  9694 */
            byte b4 = au[c2];
            /*  9695 */
            byte b5 = au[b1];
            /*  9696 */
            byte b6 = au[b2];
            /*  9697 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9698 */
                return new byte[0];
                /*       */
            }
            /*  9700 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9701 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9702 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9703 */
            arrayOfByte[b++] = (byte) m;
            /*  9704 */
            if (b < i) {
                /*  9705 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9707 */
            if (b < i) {
                /*  9708 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9711 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cM(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9715 */
        if (paramInt2 % 4 != 0) {
            /*  9716 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9719 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9720 */
            paramInt2--;
            /*       */
        }
        /*  9722 */
        int i = paramInt2 * 3 / 4;
        /*  9723 */
        byte[] arrayOfByte = new byte[i];
        /*  9724 */
        int j = paramInt1;
        /*  9725 */
        int k = paramInt1 + paramInt2;
        /*  9726 */
        byte b = 0;
        /*  9727 */
        while (j < k) {
            /*  9728 */
            char c1 = paramArrayOfchar[j++];
            /*  9729 */
            char c2 = paramArrayOfchar[j++];
            /*  9730 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9731 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9733 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9734 */
                return new byte[0];
                /*       */
            }
            /*  9736 */
            byte b3 = au[c1];
            /*  9737 */
            byte b4 = au[c2];
            /*  9738 */
            byte b5 = au[b1];
            /*  9739 */
            byte b6 = au[b2];
            /*  9740 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9741 */
                return new byte[0];
                /*       */
            }
            /*  9743 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9744 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9745 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9746 */
            arrayOfByte[b++] = (byte) m;
            /*  9747 */
            if (b < i) {
                /*  9748 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9750 */
            if (b < i) {
                /*  9751 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9754 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cN(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9758 */
        if (paramInt2 % 4 != 0) {
            /*  9759 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9762 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9763 */
            paramInt2--;
            /*       */
        }
        /*  9765 */
        int i = paramInt2 * 3 / 4;
        /*  9766 */
        byte[] arrayOfByte = new byte[i];
        /*  9767 */
        int j = paramInt1;
        /*  9768 */
        int k = paramInt1 + paramInt2;
        /*  9769 */
        byte b = 0;
        /*  9770 */
        while (j < k) {
            /*  9771 */
            char c1 = paramArrayOfchar[j++];
            /*  9772 */
            char c2 = paramArrayOfchar[j++];
            /*  9773 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9774 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9776 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9777 */
                return new byte[0];
                /*       */
            }
            /*  9779 */
            byte b3 = au[c1];
            /*  9780 */
            byte b4 = au[c2];
            /*  9781 */
            byte b5 = au[b1];
            /*  9782 */
            byte b6 = au[b2];
            /*  9783 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9784 */
                return new byte[0];
                /*       */
            }
            /*  9786 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9787 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9788 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9789 */
            arrayOfByte[b++] = (byte) m;
            /*  9790 */
            if (b < i) {
                /*  9791 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9793 */
            if (b < i) {
                /*  9794 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9797 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cO(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9801 */
        if (paramInt2 % 4 != 0) {
            /*  9802 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9805 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9806 */
            paramInt2--;
            /*       */
        }
        /*  9808 */
        int i = paramInt2 * 3 / 4;
        /*  9809 */
        byte[] arrayOfByte = new byte[i];
        /*  9810 */
        int j = paramInt1;
        /*  9811 */
        int k = paramInt1 + paramInt2;
        /*  9812 */
        byte b = 0;
        /*  9813 */
        while (j < k) {
            /*  9814 */
            char c1 = paramArrayOfchar[j++];
            /*  9815 */
            char c2 = paramArrayOfchar[j++];
            /*  9816 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9817 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9819 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9820 */
                return new byte[0];
                /*       */
            }
            /*  9822 */
            byte b3 = au[c1];
            /*  9823 */
            byte b4 = au[c2];
            /*  9824 */
            byte b5 = au[b1];
            /*  9825 */
            byte b6 = au[b2];
            /*  9826 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9827 */
                return new byte[0];
                /*       */
            }
            /*  9829 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9830 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9831 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9832 */
            arrayOfByte[b++] = (byte) m;
            /*  9833 */
            if (b < i) {
                /*  9834 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9836 */
            if (b < i) {
                /*  9837 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9840 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cP(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9844 */
        if (paramInt2 % 4 != 0) {
            /*  9845 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9848 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9849 */
            paramInt2--;
            /*       */
        }
        /*  9851 */
        int i = paramInt2 * 3 / 4;
        /*  9852 */
        byte[] arrayOfByte = new byte[i];
        /*  9853 */
        int j = paramInt1;
        /*  9854 */
        int k = paramInt1 + paramInt2;
        /*  9855 */
        byte b = 0;
        /*  9856 */
        while (j < k) {
            /*  9857 */
            char c1 = paramArrayOfchar[j++];
            /*  9858 */
            char c2 = paramArrayOfchar[j++];
            /*  9859 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9860 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9862 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9863 */
                return new byte[0];
                /*       */
            }
            /*  9865 */
            byte b3 = au[c1];
            /*  9866 */
            byte b4 = au[c2];
            /*  9867 */
            byte b5 = au[b1];
            /*  9868 */
            byte b6 = au[b2];
            /*  9869 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9870 */
                return new byte[0];
                /*       */
            }
            /*  9872 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9873 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9874 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9875 */
            arrayOfByte[b++] = (byte) m;
            /*  9876 */
            if (b < i) {
                /*  9877 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9879 */
            if (b < i) {
                /*  9880 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9883 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cQ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9887 */
        if (paramInt2 % 4 != 0) {
            /*  9888 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9891 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9892 */
            paramInt2--;
            /*       */
        }
        /*  9894 */
        int i = paramInt2 * 3 / 4;
        /*  9895 */
        byte[] arrayOfByte = new byte[i];
        /*  9896 */
        int j = paramInt1;
        /*  9897 */
        int k = paramInt1 + paramInt2;
        /*  9898 */
        byte b = 0;
        /*  9899 */
        while (j < k) {
            /*  9900 */
            char c1 = paramArrayOfchar[j++];
            /*  9901 */
            char c2 = paramArrayOfchar[j++];
            /*  9902 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9903 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9905 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9906 */
                return new byte[0];
                /*       */
            }
            /*  9908 */
            byte b3 = au[c1];
            /*  9909 */
            byte b4 = au[c2];
            /*  9910 */
            byte b5 = au[b1];
            /*  9911 */
            byte b6 = au[b2];
            /*  9912 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9913 */
                return new byte[0];
                /*       */
            }
            /*  9915 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9916 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9917 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9918 */
            arrayOfByte[b++] = (byte) m;
            /*  9919 */
            if (b < i) {
                /*  9920 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9922 */
            if (b < i) {
                /*  9923 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9926 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cR(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9930 */
        if (paramInt2 % 4 != 0) {
            /*  9931 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9934 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9935 */
            paramInt2--;
            /*       */
        }
        /*  9937 */
        int i = paramInt2 * 3 / 4;
        /*  9938 */
        byte[] arrayOfByte = new byte[i];
        /*  9939 */
        int j = paramInt1;
        /*  9940 */
        int k = paramInt1 + paramInt2;
        /*  9941 */
        byte b = 0;
        /*  9942 */
        while (j < k) {
            /*  9943 */
            char c1 = paramArrayOfchar[j++];
            /*  9944 */
            char c2 = paramArrayOfchar[j++];
            /*  9945 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9946 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9948 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9949 */
                return new byte[0];
                /*       */
            }
            /*  9951 */
            byte b3 = au[c1];
            /*  9952 */
            byte b4 = au[c2];
            /*  9953 */
            byte b5 = au[b1];
            /*  9954 */
            byte b6 = au[b2];
            /*  9955 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9956 */
                return new byte[0];
                /*       */
            }
            /*  9958 */
            int m = b3 << 2 | b4 >>> 4;
            /*  9959 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /*  9960 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /*  9961 */
            arrayOfByte[b++] = (byte) m;
            /*  9962 */
            if (b < i) {
                /*  9963 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /*  9965 */
            if (b < i) {
                /*  9966 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /*  9969 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cS(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /*  9973 */
        if (paramInt2 % 4 != 0) {
            /*  9974 */
            return new byte[0];
            /*       */
        }
        /*       */
        /*  9977 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /*  9978 */
            paramInt2--;
            /*       */
        }
        /*  9980 */
        int i = paramInt2 * 3 / 4;
        /*  9981 */
        byte[] arrayOfByte = new byte[i];
        /*  9982 */
        int j = paramInt1;
        /*  9983 */
        int k = paramInt1 + paramInt2;
        /*  9984 */
        byte b = 0;
        /*  9985 */
        while (j < k) {
            /*  9986 */
            char c1 = paramArrayOfchar[j++];
            /*  9987 */
            char c2 = paramArrayOfchar[j++];
            /*  9988 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*  9989 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /*  9991 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /*  9992 */
                return new byte[0];
                /*       */
            }
            /*  9994 */
            byte b3 = au[c1];
            /*  9995 */
            byte b4 = au[c2];
            /*  9996 */
            byte b5 = au[b1];
            /*  9997 */
            byte b6 = au[b2];
            /*  9998 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /*  9999 */
                return new byte[0];
                /*       */
            }
            /* 10001 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10002 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10003 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10004 */
            arrayOfByte[b++] = (byte) m;
            /* 10005 */
            if (b < i) {
                /* 10006 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10008 */
            if (b < i) {
                /* 10009 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10012 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cT(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10016 */
        if (paramInt2 % 4 != 0) {
            /* 10017 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10020 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10021 */
            paramInt2--;
            /*       */
        }
        /* 10023 */
        int i = paramInt2 * 3 / 4;
        /* 10024 */
        byte[] arrayOfByte = new byte[i];
        /* 10025 */
        int j = paramInt1;
        /* 10026 */
        int k = paramInt1 + paramInt2;
        /* 10027 */
        byte b = 0;
        /* 10028 */
        while (j < k) {
            /* 10029 */
            char c1 = paramArrayOfchar[j++];
            /* 10030 */
            char c2 = paramArrayOfchar[j++];
            /* 10031 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10032 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10034 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10035 */
                return new byte[0];
                /*       */
            }
            /* 10037 */
            byte b3 = au[c1];
            /* 10038 */
            byte b4 = au[c2];
            /* 10039 */
            byte b5 = au[b1];
            /* 10040 */
            byte b6 = au[b2];
            /* 10041 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10042 */
                return new byte[0];
                /*       */
            }
            /* 10044 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10045 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10046 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10047 */
            arrayOfByte[b++] = (byte) m;
            /* 10048 */
            if (b < i) {
                /* 10049 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10051 */
            if (b < i) {
                /* 10052 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10055 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cU(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10059 */
        if (paramInt2 % 4 != 0) {
            /* 10060 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10063 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10064 */
            paramInt2--;
            /*       */
        }
        /* 10066 */
        int i = paramInt2 * 3 / 4;
        /* 10067 */
        byte[] arrayOfByte = new byte[i];
        /* 10068 */
        int j = paramInt1;
        /* 10069 */
        int k = paramInt1 + paramInt2;
        /* 10070 */
        byte b = 0;
        /* 10071 */
        while (j < k) {
            /* 10072 */
            char c1 = paramArrayOfchar[j++];
            /* 10073 */
            char c2 = paramArrayOfchar[j++];
            /* 10074 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10075 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10077 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10078 */
                return new byte[0];
                /*       */
            }
            /* 10080 */
            byte b3 = au[c1];
            /* 10081 */
            byte b4 = au[c2];
            /* 10082 */
            byte b5 = au[b1];
            /* 10083 */
            byte b6 = au[b2];
            /* 10084 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10085 */
                return new byte[0];
                /*       */
            }
            /* 10087 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10088 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10089 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10090 */
            arrayOfByte[b++] = (byte) m;
            /* 10091 */
            if (b < i) {
                /* 10092 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10094 */
            if (b < i) {
                /* 10095 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10098 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cV(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10102 */
        if (paramInt2 % 4 != 0) {
            /* 10103 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10106 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10107 */
            paramInt2--;
            /*       */
        }
        /* 10109 */
        int i = paramInt2 * 3 / 4;
        /* 10110 */
        byte[] arrayOfByte = new byte[i];
        /* 10111 */
        int j = paramInt1;
        /* 10112 */
        int k = paramInt1 + paramInt2;
        /* 10113 */
        byte b = 0;
        /* 10114 */
        while (j < k) {
            /* 10115 */
            char c1 = paramArrayOfchar[j++];
            /* 10116 */
            char c2 = paramArrayOfchar[j++];
            /* 10117 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10118 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10120 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10121 */
                return new byte[0];
                /*       */
            }
            /* 10123 */
            byte b3 = au[c1];
            /* 10124 */
            byte b4 = au[c2];
            /* 10125 */
            byte b5 = au[b1];
            /* 10126 */
            byte b6 = au[b2];
            /* 10127 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10128 */
                return new byte[0];
                /*       */
            }
            /* 10130 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10131 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10132 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10133 */
            arrayOfByte[b++] = (byte) m;
            /* 10134 */
            if (b < i) {
                /* 10135 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10137 */
            if (b < i) {
                /* 10138 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10141 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cW(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10145 */
        if (paramInt2 % 4 != 0) {
            /* 10146 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10149 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10150 */
            paramInt2--;
            /*       */
        }
        /* 10152 */
        int i = paramInt2 * 3 / 4;
        /* 10153 */
        byte[] arrayOfByte = new byte[i];
        /* 10154 */
        int j = paramInt1;
        /* 10155 */
        int k = paramInt1 + paramInt2;
        /* 10156 */
        byte b = 0;
        /* 10157 */
        while (j < k) {
            /* 10158 */
            char c1 = paramArrayOfchar[j++];
            /* 10159 */
            char c2 = paramArrayOfchar[j++];
            /* 10160 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10161 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10163 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10164 */
                return new byte[0];
                /*       */
            }
            /* 10166 */
            byte b3 = au[c1];
            /* 10167 */
            byte b4 = au[c2];
            /* 10168 */
            byte b5 = au[b1];
            /* 10169 */
            byte b6 = au[b2];
            /* 10170 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10171 */
                return new byte[0];
                /*       */
            }
            /* 10173 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10174 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10175 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10176 */
            arrayOfByte[b++] = (byte) m;
            /* 10177 */
            if (b < i) {
                /* 10178 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10180 */
            if (b < i) {
                /* 10181 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10184 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cX(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10188 */
        if (paramInt2 % 4 != 0) {
            /* 10189 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10192 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10193 */
            paramInt2--;
            /*       */
        }
        /* 10195 */
        int i = paramInt2 * 3 / 4;
        /* 10196 */
        byte[] arrayOfByte = new byte[i];
        /* 10197 */
        int j = paramInt1;
        /* 10198 */
        int k = paramInt1 + paramInt2;
        /* 10199 */
        byte b = 0;
        /* 10200 */
        while (j < k) {
            /* 10201 */
            char c1 = paramArrayOfchar[j++];
            /* 10202 */
            char c2 = paramArrayOfchar[j++];
            /* 10203 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10204 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10206 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10207 */
                return new byte[0];
                /*       */
            }
            /* 10209 */
            byte b3 = au[c1];
            /* 10210 */
            byte b4 = au[c2];
            /* 10211 */
            byte b5 = au[b1];
            /* 10212 */
            byte b6 = au[b2];
            /* 10213 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10214 */
                return new byte[0];
                /*       */
            }
            /* 10216 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10217 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10218 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10219 */
            arrayOfByte[b++] = (byte) m;
            /* 10220 */
            if (b < i) {
                /* 10221 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10223 */
            if (b < i) {
                /* 10224 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10227 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cY(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10231 */
        if (paramInt2 % 4 != 0) {
            /* 10232 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10235 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10236 */
            paramInt2--;
            /*       */
        }
        /* 10238 */
        int i = paramInt2 * 3 / 4;
        /* 10239 */
        byte[] arrayOfByte = new byte[i];
        /* 10240 */
        int j = paramInt1;
        /* 10241 */
        int k = paramInt1 + paramInt2;
        /* 10242 */
        byte b = 0;
        /* 10243 */
        while (j < k) {
            /* 10244 */
            char c1 = paramArrayOfchar[j++];
            /* 10245 */
            char c2 = paramArrayOfchar[j++];
            /* 10246 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10247 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10249 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10250 */
                return new byte[0];
                /*       */
            }
            /* 10252 */
            byte b3 = au[c1];
            /* 10253 */
            byte b4 = au[c2];
            /* 10254 */
            byte b5 = au[b1];
            /* 10255 */
            byte b6 = au[b2];
            /* 10256 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10257 */
                return new byte[0];
                /*       */
            }
            /* 10259 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10260 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10261 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10262 */
            arrayOfByte[b++] = (byte) m;
            /* 10263 */
            if (b < i) {
                /* 10264 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10266 */
            if (b < i) {
                /* 10267 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10270 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] cZ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10274 */
        if (paramInt2 % 4 != 0) {
            /* 10275 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10278 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10279 */
            paramInt2--;
            /*       */
        }
        /* 10281 */
        int i = paramInt2 * 3 / 4;
        /* 10282 */
        byte[] arrayOfByte = new byte[i];
        /* 10283 */
        int j = paramInt1;
        /* 10284 */
        int k = paramInt1 + paramInt2;
        /* 10285 */
        byte b = 0;
        /* 10286 */
        while (j < k) {
            /* 10287 */
            char c1 = paramArrayOfchar[j++];
            /* 10288 */
            char c2 = paramArrayOfchar[j++];
            /* 10289 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10290 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10292 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10293 */
                return new byte[0];
                /*       */
            }
            /* 10295 */
            byte b3 = au[c1];
            /* 10296 */
            byte b4 = au[c2];
            /* 10297 */
            byte b5 = au[b1];
            /* 10298 */
            byte b6 = au[b2];
            /* 10299 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10300 */
                return new byte[0];
                /*       */
            }
            /* 10302 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10303 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10304 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10305 */
            arrayOfByte[b++] = (byte) m;
            /* 10306 */
            if (b < i) {
                /* 10307 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10309 */
            if (b < i) {
                /* 10310 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10313 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 10316 */   private static char[] N = new char[64];
    /* 10317 */   private static char[] O = new char[64];

    /*       */
    /*       */
    private static byte[] da(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10320 */
        if (paramInt2 % 4 != 0) {
            /* 10321 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10324 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10325 */
            paramInt2--;
            /*       */
        }
        /* 10327 */
        int i = paramInt2 * 3 / 4;
        /* 10328 */
        byte[] arrayOfByte = new byte[i];
        /* 10329 */
        int j = paramInt1;
        /* 10330 */
        int k = paramInt1 + paramInt2;
        /* 10331 */
        byte b = 0;
        /* 10332 */
        while (j < k) {
            /* 10333 */
            char c1 = paramArrayOfchar[j++];
            /* 10334 */
            char c2 = paramArrayOfchar[j++];
            /* 10335 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10336 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10338 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10339 */
                return new byte[0];
                /*       */
            }
            /* 10341 */
            byte b3 = au[c1];
            /* 10342 */
            byte b4 = au[c2];
            /* 10343 */
            byte b5 = au[b1];
            /* 10344 */
            byte b6 = au[b2];
            /* 10345 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10346 */
                return new byte[0];
                /*       */
            }
            /* 10348 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10349 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10350 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10351 */
            arrayOfByte[b++] = (byte) m;
            /* 10352 */
            if (b < i) {
                /* 10353 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10355 */
            if (b < i) {
                /* 10356 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10359 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] db(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10363 */
        if (paramInt2 % 4 != 0) {
            /* 10364 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10367 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10368 */
            paramInt2--;
            /*       */
        }
        /* 10370 */
        int i = paramInt2 * 3 / 4;
        /* 10371 */
        byte[] arrayOfByte = new byte[i];
        /* 10372 */
        int j = paramInt1;
        /* 10373 */
        int k = paramInt1 + paramInt2;
        /* 10374 */
        byte b = 0;
        /* 10375 */
        while (j < k) {
            /* 10376 */
            char c1 = paramArrayOfchar[j++];
            /* 10377 */
            char c2 = paramArrayOfchar[j++];
            /* 10378 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10379 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10381 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10382 */
                return new byte[0];
                /*       */
            }
            /* 10384 */
            byte b3 = au[c1];
            /* 10385 */
            byte b4 = au[c2];
            /* 10386 */
            byte b5 = au[b1];
            /* 10387 */
            byte b6 = au[b2];
            /* 10388 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10389 */
                return new byte[0];
                /*       */
            }
            /* 10391 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10392 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10393 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10394 */
            arrayOfByte[b++] = (byte) m;
            /* 10395 */
            if (b < i) {
                /* 10396 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10398 */
            if (b < i) {
                /* 10399 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10402 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dc(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10406 */
        if (paramInt2 % 4 != 0) {
            /* 10407 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10410 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10411 */
            paramInt2--;
            /*       */
        }
        /* 10413 */
        int i = paramInt2 * 3 / 4;
        /* 10414 */
        byte[] arrayOfByte = new byte[i];
        /* 10415 */
        int j = paramInt1;
        /* 10416 */
        int k = paramInt1 + paramInt2;
        /* 10417 */
        byte b = 0;
        /* 10418 */
        while (j < k) {
            /* 10419 */
            char c1 = paramArrayOfchar[j++];
            /* 10420 */
            char c2 = paramArrayOfchar[j++];
            /* 10421 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10422 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10424 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10425 */
                return new byte[0];
                /*       */
            }
            /* 10427 */
            byte b3 = au[c1];
            /* 10428 */
            byte b4 = au[c2];
            /* 10429 */
            byte b5 = au[b1];
            /* 10430 */
            byte b6 = au[b2];
            /* 10431 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10432 */
                return new byte[0];
                /*       */
            }
            /* 10434 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10435 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10436 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10437 */
            arrayOfByte[b++] = (byte) m;
            /* 10438 */
            if (b < i) {
                /* 10439 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10441 */
            if (b < i) {
                /* 10442 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10445 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dd(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10449 */
        if (paramInt2 % 4 != 0) {
            /* 10450 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10453 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10454 */
            paramInt2--;
            /*       */
        }
        /* 10456 */
        int i = paramInt2 * 3 / 4;
        /* 10457 */
        byte[] arrayOfByte = new byte[i];
        /* 10458 */
        int j = paramInt1;
        /* 10459 */
        int k = paramInt1 + paramInt2;
        /* 10460 */
        byte b = 0;
        /* 10461 */
        while (j < k) {
            /* 10462 */
            char c1 = paramArrayOfchar[j++];
            /* 10463 */
            char c2 = paramArrayOfchar[j++];
            /* 10464 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10465 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10467 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10468 */
                return new byte[0];
                /*       */
            }
            /* 10470 */
            byte b3 = au[c1];
            /* 10471 */
            byte b4 = au[c2];
            /* 10472 */
            byte b5 = au[b1];
            /* 10473 */
            byte b6 = au[b2];
            /* 10474 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10475 */
                return new byte[0];
                /*       */
            }
            /* 10477 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10478 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10479 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10480 */
            arrayOfByte[b++] = (byte) m;
            /* 10481 */
            if (b < i) {
                /* 10482 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10484 */
            if (b < i) {
                /* 10485 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10488 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] de(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10492 */
        if (paramInt2 % 4 != 0) {
            /* 10493 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10496 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10497 */
            paramInt2--;
            /*       */
        }
        /* 10499 */
        int i = paramInt2 * 3 / 4;
        /* 10500 */
        byte[] arrayOfByte = new byte[i];
        /* 10501 */
        int j = paramInt1;
        /* 10502 */
        int k = paramInt1 + paramInt2;
        /* 10503 */
        byte b = 0;
        /* 10504 */
        while (j < k) {
            /* 10505 */
            char c1 = paramArrayOfchar[j++];
            /* 10506 */
            char c2 = paramArrayOfchar[j++];
            /* 10507 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10508 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10510 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10511 */
                return new byte[0];
                /*       */
            }
            /* 10513 */
            byte b3 = au[c1];
            /* 10514 */
            byte b4 = au[c2];
            /* 10515 */
            byte b5 = au[b1];
            /* 10516 */
            byte b6 = au[b2];
            /* 10517 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10518 */
                return new byte[0];
                /*       */
            }
            /* 10520 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10521 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10522 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10523 */
            arrayOfByte[b++] = (byte) m;
            /* 10524 */
            if (b < i) {
                /* 10525 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10527 */
            if (b < i) {
                /* 10528 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10531 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] df(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10535 */
        if (paramInt2 % 4 != 0) {
            /* 10536 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10539 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10540 */
            paramInt2--;
            /*       */
        }
        /* 10542 */
        int i = paramInt2 * 3 / 4;
        /* 10543 */
        byte[] arrayOfByte = new byte[i];
        /* 10544 */
        int j = paramInt1;
        /* 10545 */
        int k = paramInt1 + paramInt2;
        /* 10546 */
        byte b = 0;
        /* 10547 */
        while (j < k) {
            /* 10548 */
            char c1 = paramArrayOfchar[j++];
            /* 10549 */
            char c2 = paramArrayOfchar[j++];
            /* 10550 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10551 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10553 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10554 */
                return new byte[0];
                /*       */
            }
            /* 10556 */
            byte b3 = au[c1];
            /* 10557 */
            byte b4 = au[c2];
            /* 10558 */
            byte b5 = au[b1];
            /* 10559 */
            byte b6 = au[b2];
            /* 10560 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10561 */
                return new byte[0];
                /*       */
            }
            /* 10563 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10564 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10565 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10566 */
            arrayOfByte[b++] = (byte) m;
            /* 10567 */
            if (b < i) {
                /* 10568 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10570 */
            if (b < i) {
                /* 10571 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10574 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dg(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10578 */
        if (paramInt2 % 4 != 0) {
            /* 10579 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10582 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10583 */
            paramInt2--;
            /*       */
        }
        /* 10585 */
        int i = paramInt2 * 3 / 4;
        /* 10586 */
        byte[] arrayOfByte = new byte[i];
        /* 10587 */
        int j = paramInt1;
        /* 10588 */
        int k = paramInt1 + paramInt2;
        /* 10589 */
        byte b = 0;
        /* 10590 */
        while (j < k) {
            /* 10591 */
            char c1 = paramArrayOfchar[j++];
            /* 10592 */
            char c2 = paramArrayOfchar[j++];
            /* 10593 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10594 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10596 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10597 */
                return new byte[0];
                /*       */
            }
            /* 10599 */
            byte b3 = au[c1];
            /* 10600 */
            byte b4 = au[c2];
            /* 10601 */
            byte b5 = au[b1];
            /* 10602 */
            byte b6 = au[b2];
            /* 10603 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10604 */
                return new byte[0];
                /*       */
            }
            /* 10606 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10607 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10608 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10609 */
            arrayOfByte[b++] = (byte) m;
            /* 10610 */
            if (b < i) {
                /* 10611 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10613 */
            if (b < i) {
                /* 10614 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10617 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dh(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10621 */
        if (paramInt2 % 4 != 0) {
            /* 10622 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10625 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10626 */
            paramInt2--;
            /*       */
        }
        /* 10628 */
        int i = paramInt2 * 3 / 4;
        /* 10629 */
        byte[] arrayOfByte = new byte[i];
        /* 10630 */
        int j = paramInt1;
        /* 10631 */
        int k = paramInt1 + paramInt2;
        /* 10632 */
        byte b = 0;
        /* 10633 */
        while (j < k) {
            /* 10634 */
            char c1 = paramArrayOfchar[j++];
            /* 10635 */
            char c2 = paramArrayOfchar[j++];
            /* 10636 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10637 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10639 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10640 */
                return new byte[0];
                /*       */
            }
            /* 10642 */
            byte b3 = au[c1];
            /* 10643 */
            byte b4 = au[c2];
            /* 10644 */
            byte b5 = au[b1];
            /* 10645 */
            byte b6 = au[b2];
            /* 10646 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10647 */
                return new byte[0];
                /*       */
            }
            /* 10649 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10650 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10651 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10652 */
            arrayOfByte[b++] = (byte) m;
            /* 10653 */
            if (b < i) {
                /* 10654 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10656 */
            if (b < i) {
                /* 10657 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10660 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] di(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10664 */
        if (paramInt2 % 4 != 0) {
            /* 10665 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10668 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10669 */
            paramInt2--;
            /*       */
        }
        /* 10671 */
        int i = paramInt2 * 3 / 4;
        /* 10672 */
        byte[] arrayOfByte = new byte[i];
        /* 10673 */
        int j = paramInt1;
        /* 10674 */
        int k = paramInt1 + paramInt2;
        /* 10675 */
        byte b = 0;
        /* 10676 */
        while (j < k) {
            /* 10677 */
            char c1 = paramArrayOfchar[j++];
            /* 10678 */
            char c2 = paramArrayOfchar[j++];
            /* 10679 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10680 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10682 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10683 */
                return new byte[0];
                /*       */
            }
            /* 10685 */
            byte b3 = au[c1];
            /* 10686 */
            byte b4 = au[c2];
            /* 10687 */
            byte b5 = au[b1];
            /* 10688 */
            byte b6 = au[b2];
            /* 10689 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10690 */
                return new byte[0];
                /*       */
            }
            /* 10692 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10693 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10694 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10695 */
            arrayOfByte[b++] = (byte) m;
            /* 10696 */
            if (b < i) {
                /* 10697 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10699 */
            if (b < i) {
                /* 10700 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10703 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dj(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10707 */
        if (paramInt2 % 4 != 0) {
            /* 10708 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10711 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10712 */
            paramInt2--;
            /*       */
        }
        /* 10714 */
        int i = paramInt2 * 3 / 4;
        /* 10715 */
        byte[] arrayOfByte = new byte[i];
        /* 10716 */
        int j = paramInt1;
        /* 10717 */
        int k = paramInt1 + paramInt2;
        /* 10718 */
        byte b = 0;
        /* 10719 */
        while (j < k) {
            /* 10720 */
            char c1 = paramArrayOfchar[j++];
            /* 10721 */
            char c2 = paramArrayOfchar[j++];
            /* 10722 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10723 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10725 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10726 */
                return new byte[0];
                /*       */
            }
            /* 10728 */
            byte b3 = au[c1];
            /* 10729 */
            byte b4 = au[c2];
            /* 10730 */
            byte b5 = au[b1];
            /* 10731 */
            byte b6 = au[b2];
            /* 10732 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10733 */
                return new byte[0];
                /*       */
            }
            /* 10735 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10736 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10737 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10738 */
            arrayOfByte[b++] = (byte) m;
            /* 10739 */
            if (b < i) {
                /* 10740 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10742 */
            if (b < i) {
                /* 10743 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10746 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dk(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10750 */
        if (paramInt2 % 4 != 0) {
            /* 10751 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10754 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10755 */
            paramInt2--;
            /*       */
        }
        /* 10757 */
        int i = paramInt2 * 3 / 4;
        /* 10758 */
        byte[] arrayOfByte = new byte[i];
        /* 10759 */
        int j = paramInt1;
        /* 10760 */
        int k = paramInt1 + paramInt2;
        /* 10761 */
        byte b = 0;
        /* 10762 */
        while (j < k) {
            /* 10763 */
            char c1 = paramArrayOfchar[j++];
            /* 10764 */
            char c2 = paramArrayOfchar[j++];
            /* 10765 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10766 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10768 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10769 */
                return new byte[0];
                /*       */
            }
            /* 10771 */
            byte b3 = au[c1];
            /* 10772 */
            byte b4 = au[c2];
            /* 10773 */
            byte b5 = au[b1];
            /* 10774 */
            byte b6 = au[b2];
            /* 10775 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10776 */
                return new byte[0];
                /*       */
            }
            /* 10778 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10779 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10780 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10781 */
            arrayOfByte[b++] = (byte) m;
            /* 10782 */
            if (b < i) {
                /* 10783 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10785 */
            if (b < i) {
                /* 10786 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10789 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dl(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10793 */
        if (paramInt2 % 4 != 0) {
            /* 10794 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10797 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10798 */
            paramInt2--;
            /*       */
        }
        /* 10800 */
        int i = paramInt2 * 3 / 4;
        /* 10801 */
        byte[] arrayOfByte = new byte[i];
        /* 10802 */
        int j = paramInt1;
        /* 10803 */
        int k = paramInt1 + paramInt2;
        /* 10804 */
        byte b = 0;
        /* 10805 */
        while (j < k) {
            /* 10806 */
            char c1 = paramArrayOfchar[j++];
            /* 10807 */
            char c2 = paramArrayOfchar[j++];
            /* 10808 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10809 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10811 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10812 */
                return new byte[0];
                /*       */
            }
            /* 10814 */
            byte b3 = au[c1];
            /* 10815 */
            byte b4 = au[c2];
            /* 10816 */
            byte b5 = au[b1];
            /* 10817 */
            byte b6 = au[b2];
            /* 10818 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10819 */
                return new byte[0];
                /*       */
            }
            /* 10821 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10822 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10823 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10824 */
            arrayOfByte[b++] = (byte) m;
            /* 10825 */
            if (b < i) {
                /* 10826 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10828 */
            if (b < i) {
                /* 10829 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10832 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dm(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10836 */
        if (paramInt2 % 4 != 0) {
            /* 10837 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10840 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10841 */
            paramInt2--;
            /*       */
        }
        /* 10843 */
        int i = paramInt2 * 3 / 4;
        /* 10844 */
        byte[] arrayOfByte = new byte[i];
        /* 10845 */
        int j = paramInt1;
        /* 10846 */
        int k = paramInt1 + paramInt2;
        /* 10847 */
        byte b = 0;
        /* 10848 */
        while (j < k) {
            /* 10849 */
            char c1 = paramArrayOfchar[j++];
            /* 10850 */
            char c2 = paramArrayOfchar[j++];
            /* 10851 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10852 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10854 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10855 */
                return new byte[0];
                /*       */
            }
            /* 10857 */
            byte b3 = au[c1];
            /* 10858 */
            byte b4 = au[c2];
            /* 10859 */
            byte b5 = au[b1];
            /* 10860 */
            byte b6 = au[b2];
            /* 10861 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10862 */
                return new byte[0];
                /*       */
            }
            /* 10864 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10865 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10866 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10867 */
            arrayOfByte[b++] = (byte) m;
            /* 10868 */
            if (b < i) {
                /* 10869 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10871 */
            if (b < i) {
                /* 10872 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10875 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dn(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10879 */
        if (paramInt2 % 4 != 0) {
            /* 10880 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10883 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10884 */
            paramInt2--;
            /*       */
        }
        /* 10886 */
        int i = paramInt2 * 3 / 4;
        /* 10887 */
        byte[] arrayOfByte = new byte[i];
        /* 10888 */
        int j = paramInt1;
        /* 10889 */
        int k = paramInt1 + paramInt2;
        /* 10890 */
        byte b = 0;
        /* 10891 */
        while (j < k) {
            /* 10892 */
            char c1 = paramArrayOfchar[j++];
            /* 10893 */
            char c2 = paramArrayOfchar[j++];
            /* 10894 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10895 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10897 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10898 */
                return new byte[0];
                /*       */
            }
            /* 10900 */
            byte b3 = au[c1];
            /* 10901 */
            byte b4 = au[c2];
            /* 10902 */
            byte b5 = au[b1];
            /* 10903 */
            byte b6 = au[b2];
            /* 10904 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10905 */
                return new byte[0];
                /*       */
            }
            /* 10907 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10908 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10909 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10910 */
            arrayOfByte[b++] = (byte) m;
            /* 10911 */
            if (b < i) {
                /* 10912 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10914 */
            if (b < i) {
                /* 10915 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10918 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] doz(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10922 */
        if (paramInt2 % 4 != 0) {
            /* 10923 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10926 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10927 */
            paramInt2--;
            /*       */
        }
        /* 10929 */
        int i = paramInt2 * 3 / 4;
        /* 10930 */
        byte[] arrayOfByte = new byte[i];
        /* 10931 */
        int j = paramInt1;
        /* 10932 */
        int k = paramInt1 + paramInt2;
        /* 10933 */
        byte b = 0;
        /* 10934 */
        while (j < k) {
            /* 10935 */
            char c1 = paramArrayOfchar[j++];
            /* 10936 */
            char c2 = paramArrayOfchar[j++];
            /* 10937 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10938 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10940 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10941 */
                return new byte[0];
                /*       */
            }
            /* 10943 */
            byte b3 = au[c1];
            /* 10944 */
            byte b4 = au[c2];
            /* 10945 */
            byte b5 = au[b1];
            /* 10946 */
            byte b6 = au[b2];
            /* 10947 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10948 */
                return new byte[0];
                /*       */
            }
            /* 10950 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10951 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10952 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10953 */
            arrayOfByte[b++] = (byte) m;
            /* 10954 */
            if (b < i) {
                /* 10955 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 10957 */
            if (b < i) {
                /* 10958 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 10961 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dp(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 10965 */
        if (paramInt2 % 4 != 0) {
            /* 10966 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 10969 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 10970 */
            paramInt2--;
            /*       */
        }
        /* 10972 */
        int i = paramInt2 * 3 / 4;
        /* 10973 */
        byte[] arrayOfByte = new byte[i];
        /* 10974 */
        int j = paramInt1;
        /* 10975 */
        int k = paramInt1 + paramInt2;
        /* 10976 */
        byte b = 0;
        /* 10977 */
        while (j < k) {
            /* 10978 */
            char c1 = paramArrayOfchar[j++];
            /* 10979 */
            char c2 = paramArrayOfchar[j++];
            /* 10980 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 10981 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 10983 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 10984 */
                return new byte[0];
                /*       */
            }
            /* 10986 */
            byte b3 = au[c1];
            /* 10987 */
            byte b4 = au[c2];
            /* 10988 */
            byte b5 = au[b1];
            /* 10989 */
            byte b6 = au[b2];
            /* 10990 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 10991 */
                return new byte[0];
                /*       */
            }
            /* 10993 */
            int m = b3 << 2 | b4 >>> 4;
            /* 10994 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 10995 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 10996 */
            arrayOfByte[b++] = (byte) m;
            /* 10997 */
            if (b < i) {
                /* 10998 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11000 */
            if (b < i) {
                /* 11001 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11004 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dq(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11008 */
        if (paramInt2 % 4 != 0) {
            /* 11009 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11012 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11013 */
            paramInt2--;
            /*       */
        }
        /* 11015 */
        int i = paramInt2 * 3 / 4;
        /* 11016 */
        byte[] arrayOfByte = new byte[i];
        /* 11017 */
        int j = paramInt1;
        /* 11018 */
        int k = paramInt1 + paramInt2;
        /* 11019 */
        byte b = 0;
        /* 11020 */
        while (j < k) {
            /* 11021 */
            char c1 = paramArrayOfchar[j++];
            /* 11022 */
            char c2 = paramArrayOfchar[j++];
            /* 11023 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11024 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11026 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11027 */
                return new byte[0];
                /*       */
            }
            /* 11029 */
            byte b3 = au[c1];
            /* 11030 */
            byte b4 = au[c2];
            /* 11031 */
            byte b5 = au[b1];
            /* 11032 */
            byte b6 = au[b2];
            /* 11033 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11034 */
                return new byte[0];
                /*       */
            }
            /* 11036 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11037 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11038 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11039 */
            arrayOfByte[b++] = (byte) m;
            /* 11040 */
            if (b < i) {
                /* 11041 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11043 */
            if (b < i) {
                /* 11044 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11047 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dr(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11051 */
        if (paramInt2 % 4 != 0) {
            /* 11052 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11055 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11056 */
            paramInt2--;
            /*       */
        }
        /* 11058 */
        int i = paramInt2 * 3 / 4;
        /* 11059 */
        byte[] arrayOfByte = new byte[i];
        /* 11060 */
        int j = paramInt1;
        /* 11061 */
        int k = paramInt1 + paramInt2;
        /* 11062 */
        byte b = 0;
        /* 11063 */
        while (j < k) {
            /* 11064 */
            char c1 = paramArrayOfchar[j++];
            /* 11065 */
            char c2 = paramArrayOfchar[j++];
            /* 11066 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11067 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11069 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11070 */
                return new byte[0];
                /*       */
            }
            /* 11072 */
            byte b3 = au[c1];
            /* 11073 */
            byte b4 = au[c2];
            /* 11074 */
            byte b5 = au[b1];
            /* 11075 */
            byte b6 = au[b2];
            /* 11076 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11077 */
                return new byte[0];
                /*       */
            }
            /* 11079 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11080 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11081 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11082 */
            arrayOfByte[b++] = (byte) m;
            /* 11083 */
            if (b < i) {
                /* 11084 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11086 */
            if (b < i) {
                /* 11087 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11090 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ds(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11094 */
        if (paramInt2 % 4 != 0) {
            /* 11095 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11098 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11099 */
            paramInt2--;
            /*       */
        }
        /* 11101 */
        int i = paramInt2 * 3 / 4;
        /* 11102 */
        byte[] arrayOfByte = new byte[i];
        /* 11103 */
        int j = paramInt1;
        /* 11104 */
        int k = paramInt1 + paramInt2;
        /* 11105 */
        byte b = 0;
        /* 11106 */
        while (j < k) {
            /* 11107 */
            char c1 = paramArrayOfchar[j++];
            /* 11108 */
            char c2 = paramArrayOfchar[j++];
            /* 11109 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11110 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11112 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11113 */
                return new byte[0];
                /*       */
            }
            /* 11115 */
            byte b3 = au[c1];
            /* 11116 */
            byte b4 = au[c2];
            /* 11117 */
            byte b5 = au[b1];
            /* 11118 */
            byte b6 = au[b2];
            /* 11119 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11120 */
                return new byte[0];
                /*       */
            }
            /* 11122 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11123 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11124 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11125 */
            arrayOfByte[b++] = (byte) m;
            /* 11126 */
            if (b < i) {
                /* 11127 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11129 */
            if (b < i) {
                /* 11130 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11133 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dt(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11137 */
        if (paramInt2 % 4 != 0) {
            /* 11138 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11141 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11142 */
            paramInt2--;
            /*       */
        }
        /* 11144 */
        int i = paramInt2 * 3 / 4;
        /* 11145 */
        byte[] arrayOfByte = new byte[i];
        /* 11146 */
        int j = paramInt1;
        /* 11147 */
        int k = paramInt1 + paramInt2;
        /* 11148 */
        byte b = 0;
        /* 11149 */
        while (j < k) {
            /* 11150 */
            char c1 = paramArrayOfchar[j++];
            /* 11151 */
            char c2 = paramArrayOfchar[j++];
            /* 11152 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11153 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11155 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11156 */
                return new byte[0];
                /*       */
            }
            /* 11158 */
            byte b3 = au[c1];
            /* 11159 */
            byte b4 = au[c2];
            /* 11160 */
            byte b5 = au[b1];
            /* 11161 */
            byte b6 = au[b2];
            /* 11162 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11163 */
                return new byte[0];
                /*       */
            }
            /* 11165 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11166 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11167 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11168 */
            arrayOfByte[b++] = (byte) m;
            /* 11169 */
            if (b < i) {
                /* 11170 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11172 */
            if (b < i) {
                /* 11173 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11176 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 11179 */   private static char[] P = new char[64];
    /* 11180 */   private static char[] Q = new char[64];
    /*       */
    /* 11182 */   private static String R = "9Bou";

    /*       */
    /*       */
    private static byte[] du(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11185 */
        if (paramInt2 % 4 != 0) {
            /* 11186 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11189 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11190 */
            paramInt2--;
            /*       */
        }
        /* 11192 */
        int i = paramInt2 * 3 / 4;
        /* 11193 */
        byte[] arrayOfByte = new byte[i];
        /* 11194 */
        int j = paramInt1;
        /* 11195 */
        int k = paramInt1 + paramInt2;
        /* 11196 */
        byte b = 0;
        /* 11197 */
        while (j < k) {
            /* 11198 */
            char c1 = paramArrayOfchar[j++];
            /* 11199 */
            char c2 = paramArrayOfchar[j++];
            /* 11200 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11201 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11203 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11204 */
                return new byte[0];
                /*       */
            }
            /* 11206 */
            byte b3 = au[c1];
            /* 11207 */
            byte b4 = au[c2];
            /* 11208 */
            byte b5 = au[b1];
            /* 11209 */
            byte b6 = au[b2];
            /* 11210 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11211 */
                return new byte[0];
                /*       */
            }
            /* 11213 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11214 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11215 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11216 */
            arrayOfByte[b++] = (byte) m;
            /* 11217 */
            if (b < i) {
                /* 11218 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11220 */
            if (b < i) {
                /* 11221 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11224 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 11227 */   private static String S = "RQiB9";
    /*       */
    /*       */
    /* 11230 */   private static String T = "ka69J5";

    /*       */
    /*       */
    private static byte[] dv(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11233 */
        if (paramInt2 % 4 != 0) {
            /* 11234 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11237 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11238 */
            paramInt2--;
            /*       */
        }
        /* 11240 */
        int i = paramInt2 * 3 / 4;
        /* 11241 */
        byte[] arrayOfByte = new byte[i];
        /* 11242 */
        int j = paramInt1;
        /* 11243 */
        int k = paramInt1 + paramInt2;
        /* 11244 */
        byte b = 0;
        /* 11245 */
        while (j < k) {
            /* 11246 */
            char c1 = paramArrayOfchar[j++];
            /* 11247 */
            char c2 = paramArrayOfchar[j++];
            /* 11248 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11249 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11251 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11252 */
                return new byte[0];
                /*       */
            }
            /* 11254 */
            byte b3 = au[c1];
            /* 11255 */
            byte b4 = au[c2];
            /* 11256 */
            byte b5 = au[b1];
            /* 11257 */
            byte b6 = au[b2];
            /* 11258 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11259 */
                return new byte[0];
                /*       */
            }
            /* 11261 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11262 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11263 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11264 */
            arrayOfByte[b++] = (byte) m;
            /* 11265 */
            if (b < i) {
                /* 11266 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11268 */
            if (b < i) {
                /* 11269 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11272 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dw(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11276 */
        if (paramInt2 % 4 != 0) {
            /* 11277 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11280 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11281 */
            paramInt2--;
            /*       */
        }
        /* 11283 */
        int i = paramInt2 * 3 / 4;
        /* 11284 */
        byte[] arrayOfByte = new byte[i];
        /* 11285 */
        int j = paramInt1;
        /* 11286 */
        int k = paramInt1 + paramInt2;
        /* 11287 */
        byte b = 0;
        /* 11288 */
        while (j < k) {
            /* 11289 */
            char c1 = paramArrayOfchar[j++];
            /* 11290 */
            char c2 = paramArrayOfchar[j++];
            /* 11291 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11292 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11294 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11295 */
                return new byte[0];
                /*       */
            }
            /* 11297 */
            byte b3 = au[c1];
            /* 11298 */
            byte b4 = au[c2];
            /* 11299 */
            byte b5 = au[b1];
            /* 11300 */
            byte b6 = au[b2];
            /* 11301 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11302 */
                return new byte[0];
                /*       */
            }
            /* 11304 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11305 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11306 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11307 */
            arrayOfByte[b++] = (byte) m;
            /* 11308 */
            if (b < i) {
                /* 11309 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11311 */
            if (b < i) {
                /* 11312 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11315 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dx(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11319 */
        if (paramInt2 % 4 != 0) {
            /* 11320 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11323 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11324 */
            paramInt2--;
            /*       */
        }
        /* 11326 */
        int i = paramInt2 * 3 / 4;
        /* 11327 */
        byte[] arrayOfByte = new byte[i];
        /* 11328 */
        int j = paramInt1;
        /* 11329 */
        int k = paramInt1 + paramInt2;
        /* 11330 */
        byte b = 0;
        /* 11331 */
        while (j < k) {
            /* 11332 */
            char c1 = paramArrayOfchar[j++];
            /* 11333 */
            char c2 = paramArrayOfchar[j++];
            /* 11334 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11335 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11337 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11338 */
                return new byte[0];
                /*       */
            }
            /* 11340 */
            byte b3 = au[c1];
            /* 11341 */
            byte b4 = au[c2];
            /* 11342 */
            byte b5 = au[b1];
            /* 11343 */
            byte b6 = au[b2];
            /* 11344 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11345 */
                return new byte[0];
                /*       */
            }
            /* 11347 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11348 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11349 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11350 */
            arrayOfByte[b++] = (byte) m;
            /* 11351 */
            if (b < i) {
                /* 11352 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11354 */
            if (b < i) {
                /* 11355 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11358 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dy(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11362 */
        if (paramInt2 % 4 != 0) {
            /* 11363 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11366 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11367 */
            paramInt2--;
            /*       */
        }
        /* 11369 */
        int i = paramInt2 * 3 / 4;
        /* 11370 */
        byte[] arrayOfByte = new byte[i];
        /* 11371 */
        int j = paramInt1;
        /* 11372 */
        int k = paramInt1 + paramInt2;
        /* 11373 */
        byte b = 0;
        /* 11374 */
        while (j < k) {
            /* 11375 */
            char c1 = paramArrayOfchar[j++];
            /* 11376 */
            char c2 = paramArrayOfchar[j++];
            /* 11377 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11378 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11380 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11381 */
                return new byte[0];
                /*       */
            }
            /* 11383 */
            byte b3 = au[c1];
            /* 11384 */
            byte b4 = au[c2];
            /* 11385 */
            byte b5 = au[b1];
            /* 11386 */
            byte b6 = au[b2];
            /* 11387 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11388 */
                return new byte[0];
                /*       */
            }
            /* 11390 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11391 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11392 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11393 */
            arrayOfByte[b++] = (byte) m;
            /* 11394 */
            if (b < i) {
                /* 11395 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11397 */
            if (b < i) {
                /* 11398 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11401 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 11404 */   private static String U = "AcXzU";
    /*       */
    /*       */
    /* 11407 */   private static String V = "b9xQIZ";

    /*       */
    /*       */
    private static byte[] dz(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11410 */
        if (paramInt2 % 4 != 0) {
            /* 11411 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11414 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11415 */
            paramInt2--;
            /*       */
        }
        /* 11417 */
        int i = paramInt2 * 3 / 4;
        /* 11418 */
        byte[] arrayOfByte = new byte[i];
        /* 11419 */
        int j = paramInt1;
        /* 11420 */
        int k = paramInt1 + paramInt2;
        /* 11421 */
        byte b = 0;
        /* 11422 */
        while (j < k) {
            /* 11423 */
            char c1 = paramArrayOfchar[j++];
            /* 11424 */
            char c2 = paramArrayOfchar[j++];
            /* 11425 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11426 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11428 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11429 */
                return new byte[0];
                /*       */
            }
            /* 11431 */
            byte b3 = au[c1];
            /* 11432 */
            byte b4 = au[c2];
            /* 11433 */
            byte b5 = au[b1];
            /* 11434 */
            byte b6 = au[b2];
            /* 11435 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11436 */
                return new byte[0];
                /*       */
            }
            /* 11438 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11439 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11440 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11441 */
            arrayOfByte[b++] = (byte) m;
            /* 11442 */
            if (b < i) {
                /* 11443 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11445 */
            if (b < i) {
                /* 11446 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11449 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dA(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11453 */
        if (paramInt2 % 4 != 0) {
            /* 11454 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11457 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11458 */
            paramInt2--;
            /*       */
        }
        /* 11460 */
        int i = paramInt2 * 3 / 4;
        /* 11461 */
        byte[] arrayOfByte = new byte[i];
        /* 11462 */
        int j = paramInt1;
        /* 11463 */
        int k = paramInt1 + paramInt2;
        /* 11464 */
        byte b = 0;
        /* 11465 */
        while (j < k) {
            /* 11466 */
            char c1 = paramArrayOfchar[j++];
            /* 11467 */
            char c2 = paramArrayOfchar[j++];
            /* 11468 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11469 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11471 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11472 */
                return new byte[0];
                /*       */
            }
            /* 11474 */
            byte b3 = au[c1];
            /* 11475 */
            byte b4 = au[c2];
            /* 11476 */
            byte b5 = au[b1];
            /* 11477 */
            byte b6 = au[b2];
            /* 11478 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11479 */
                return new byte[0];
                /*       */
            }
            /* 11481 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11482 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11483 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11484 */
            arrayOfByte[b++] = (byte) m;
            /* 11485 */
            if (b < i) {
                /* 11486 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11488 */
            if (b < i) {
                /* 11489 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11492 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dB(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11496 */
        if (paramInt2 % 4 != 0) {
            /* 11497 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11500 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11501 */
            paramInt2--;
            /*       */
        }
        /* 11503 */
        int i = paramInt2 * 3 / 4;
        /* 11504 */
        byte[] arrayOfByte = new byte[i];
        /* 11505 */
        int j = paramInt1;
        /* 11506 */
        int k = paramInt1 + paramInt2;
        /* 11507 */
        byte b = 0;
        /* 11508 */
        while (j < k) {
            /* 11509 */
            char c1 = paramArrayOfchar[j++];
            /* 11510 */
            char c2 = paramArrayOfchar[j++];
            /* 11511 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11512 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11514 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11515 */
                return new byte[0];
                /*       */
            }
            /* 11517 */
            byte b3 = au[c1];
            /* 11518 */
            byte b4 = au[c2];
            /* 11519 */
            byte b5 = au[b1];
            /* 11520 */
            byte b6 = au[b2];
            /* 11521 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11522 */
                return new byte[0];
                /*       */
            }
            /* 11524 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11525 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11526 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11527 */
            arrayOfByte[b++] = (byte) m;
            /* 11528 */
            if (b < i) {
                /* 11529 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11531 */
            if (b < i) {
                /* 11532 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11535 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dC(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11539 */
        if (paramInt2 % 4 != 0) {
            /* 11540 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11543 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11544 */
            paramInt2--;
            /*       */
        }
        /* 11546 */
        int i = paramInt2 * 3 / 4;
        /* 11547 */
        byte[] arrayOfByte = new byte[i];
        /* 11548 */
        int j = paramInt1;
        /* 11549 */
        int k = paramInt1 + paramInt2;
        /* 11550 */
        byte b = 0;
        /* 11551 */
        while (j < k) {
            /* 11552 */
            char c1 = paramArrayOfchar[j++];
            /* 11553 */
            char c2 = paramArrayOfchar[j++];
            /* 11554 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11555 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11557 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11558 */
                return new byte[0];
                /*       */
            }
            /* 11560 */
            byte b3 = au[c1];
            /* 11561 */
            byte b4 = au[c2];
            /* 11562 */
            byte b5 = au[b1];
            /* 11563 */
            byte b6 = au[b2];
            /* 11564 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11565 */
                return new byte[0];
                /*       */
            }
            /* 11567 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11568 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11569 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11570 */
            arrayOfByte[b++] = (byte) m;
            /* 11571 */
            if (b < i) {
                /* 11572 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11574 */
            if (b < i) {
                /* 11575 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11578 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dD(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11582 */
        if (paramInt2 % 4 != 0) {
            /* 11583 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11586 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11587 */
            paramInt2--;
            /*       */
        }
        /* 11589 */
        int i = paramInt2 * 3 / 4;
        /* 11590 */
        byte[] arrayOfByte = new byte[i];
        /* 11591 */
        int j = paramInt1;
        /* 11592 */
        int k = paramInt1 + paramInt2;
        /* 11593 */
        byte b = 0;
        /* 11594 */
        while (j < k) {
            /* 11595 */
            char c1 = paramArrayOfchar[j++];
            /* 11596 */
            char c2 = paramArrayOfchar[j++];
            /* 11597 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11598 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11600 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11601 */
                return new byte[0];
                /*       */
            }
            /* 11603 */
            byte b3 = au[c1];
            /* 11604 */
            byte b4 = au[c2];
            /* 11605 */
            byte b5 = au[b1];
            /* 11606 */
            byte b6 = au[b2];
            /* 11607 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11608 */
                return new byte[0];
                /*       */
            }
            /* 11610 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11611 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11612 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11613 */
            arrayOfByte[b++] = (byte) m;
            /* 11614 */
            if (b < i) {
                /* 11615 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11617 */
            if (b < i) {
                /* 11618 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11621 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dE(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11625 */
        if (paramInt2 % 4 != 0) {
            /* 11626 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11629 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11630 */
            paramInt2--;
            /*       */
        }
        /* 11632 */
        int i = paramInt2 * 3 / 4;
        /* 11633 */
        byte[] arrayOfByte = new byte[i];
        /* 11634 */
        int j = paramInt1;
        /* 11635 */
        int k = paramInt1 + paramInt2;
        /* 11636 */
        byte b = 0;
        /* 11637 */
        while (j < k) {
            /* 11638 */
            char c1 = paramArrayOfchar[j++];
            /* 11639 */
            char c2 = paramArrayOfchar[j++];
            /* 11640 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11641 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11643 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11644 */
                return new byte[0];
                /*       */
            }
            /* 11646 */
            byte b3 = au[c1];
            /* 11647 */
            byte b4 = au[c2];
            /* 11648 */
            byte b5 = au[b1];
            /* 11649 */
            byte b6 = au[b2];
            /* 11650 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11651 */
                return new byte[0];
                /*       */
            }
            /* 11653 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11654 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11655 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11656 */
            arrayOfByte[b++] = (byte) m;
            /* 11657 */
            if (b < i) {
                /* 11658 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11660 */
            if (b < i) {
                /* 11661 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11664 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 11667 */   private static String W = "l83Ddyl2";
    /*       */
    /*       */
    /* 11670 */   private static String X = "/K3ahv/ME=";
    /*       */
    /* 11672 */   private static String Y = "1jAQRC";

    /*       */
    /*       */
    private static byte[] dF(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11675 */
        if (paramInt2 % 4 != 0) {
            /* 11676 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11679 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11680 */
            paramInt2--;
            /*       */
        }
        /* 11682 */
        int i = paramInt2 * 3 / 4;
        /* 11683 */
        byte[] arrayOfByte = new byte[i];
        /* 11684 */
        int j = paramInt1;
        /* 11685 */
        int k = paramInt1 + paramInt2;
        /* 11686 */
        byte b = 0;
        /* 11687 */
        while (j < k) {
            /* 11688 */
            char c1 = paramArrayOfchar[j++];
            /* 11689 */
            char c2 = paramArrayOfchar[j++];
            /* 11690 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11691 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11693 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11694 */
                return new byte[0];
                /*       */
            }
            /* 11696 */
            byte b3 = au[c1];
            /* 11697 */
            byte b4 = au[c2];
            /* 11698 */
            byte b5 = au[b1];
            /* 11699 */
            byte b6 = au[b2];
            /* 11700 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11701 */
                return new byte[0];
                /*       */
            }
            /* 11703 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11704 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11705 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11706 */
            arrayOfByte[b++] = (byte) m;
            /* 11707 */
            if (b < i) {
                /* 11708 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11710 */
            if (b < i) {
                /* 11711 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11714 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dG(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11718 */
        if (paramInt2 % 4 != 0) {
            /* 11719 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11722 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11723 */
            paramInt2--;
            /*       */
        }
        /* 11725 */
        int i = paramInt2 * 3 / 4;
        /* 11726 */
        byte[] arrayOfByte = new byte[i];
        /* 11727 */
        int j = paramInt1;
        /* 11728 */
        int k = paramInt1 + paramInt2;
        /* 11729 */
        byte b = 0;
        /* 11730 */
        while (j < k) {
            /* 11731 */
            char c1 = paramArrayOfchar[j++];
            /* 11732 */
            char c2 = paramArrayOfchar[j++];
            /* 11733 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11734 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11736 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11737 */
                return new byte[0];
                /*       */
            }
            /* 11739 */
            byte b3 = au[c1];
            /* 11740 */
            byte b4 = au[c2];
            /* 11741 */
            byte b5 = au[b1];
            /* 11742 */
            byte b6 = au[b2];
            /* 11743 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11744 */
                return new byte[0];
                /*       */
            }
            /* 11746 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11747 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11748 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11749 */
            arrayOfByte[b++] = (byte) m;
            /* 11750 */
            if (b < i) {
                /* 11751 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11753 */
            if (b < i) {
                /* 11754 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11757 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 11760 */   private static String Z = "+o2QaOzbRlI";
    /*       */
    /*       */
    /* 11763 */   private static String aa = "1jAQZ";
    /* 11764 */   private static String ab = "m3jliT";
    /*       */
    /*       */
    /* 11767 */   private static String ac = "Ti/o7GQ";

    /*       */
    /*       */
    private static byte[] dH(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11770 */
        if (paramInt2 % 4 != 0) {
            /* 11771 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11774 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11775 */
            paramInt2--;
            /*       */
        }
        /* 11777 */
        int i = paramInt2 * 3 / 4;
        /* 11778 */
        byte[] arrayOfByte = new byte[i];
        /* 11779 */
        int j = paramInt1;
        /* 11780 */
        int k = paramInt1 + paramInt2;
        /* 11781 */
        byte b = 0;
        /* 11782 */
        while (j < k) {
            /* 11783 */
            char c1 = paramArrayOfchar[j++];
            /* 11784 */
            char c2 = paramArrayOfchar[j++];
            /* 11785 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11786 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11788 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11789 */
                return new byte[0];
                /*       */
            }
            /* 11791 */
            byte b3 = au[c1];
            /* 11792 */
            byte b4 = au[c2];
            /* 11793 */
            byte b5 = au[b1];
            /* 11794 */
            byte b6 = au[b2];
            /* 11795 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11796 */
                return new byte[0];
                /*       */
            }
            /* 11798 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11799 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11800 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11801 */
            arrayOfByte[b++] = (byte) m;
            /* 11802 */
            if (b < i) {
                /* 11803 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11805 */
            if (b < i) {
                /* 11806 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11809 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dI(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11813 */
        if (paramInt2 % 4 != 0) {
            /* 11814 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11817 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11818 */
            paramInt2--;
            /*       */
        }
        /* 11820 */
        int i = paramInt2 * 3 / 4;
        /* 11821 */
        byte[] arrayOfByte = new byte[i];
        /* 11822 */
        int j = paramInt1;
        /* 11823 */
        int k = paramInt1 + paramInt2;
        /* 11824 */
        byte b = 0;
        /* 11825 */
        while (j < k) {
            /* 11826 */
            char c1 = paramArrayOfchar[j++];
            /* 11827 */
            char c2 = paramArrayOfchar[j++];
            /* 11828 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11829 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11831 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11832 */
                return new byte[0];
                /*       */
            }
            /* 11834 */
            byte b3 = au[c1];
            /* 11835 */
            byte b4 = au[c2];
            /* 11836 */
            byte b5 = au[b1];
            /* 11837 */
            byte b6 = au[b2];
            /* 11838 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11839 */
                return new byte[0];
                /*       */
            }
            /* 11841 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11842 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11843 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11844 */
            arrayOfByte[b++] = (byte) m;
            /* 11845 */
            if (b < i) {
                /* 11846 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11848 */
            if (b < i) {
                /* 11849 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11852 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dJ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11856 */
        if (paramInt2 % 4 != 0) {
            /* 11857 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11860 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11861 */
            paramInt2--;
            /*       */
        }
        /* 11863 */
        int i = paramInt2 * 3 / 4;
        /* 11864 */
        byte[] arrayOfByte = new byte[i];
        /* 11865 */
        int j = paramInt1;
        /* 11866 */
        int k = paramInt1 + paramInt2;
        /* 11867 */
        byte b = 0;
        /* 11868 */
        while (j < k) {
            /* 11869 */
            char c1 = paramArrayOfchar[j++];
            /* 11870 */
            char c2 = paramArrayOfchar[j++];
            /* 11871 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11872 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11874 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11875 */
                return new byte[0];
                /*       */
            }
            /* 11877 */
            byte b3 = au[c1];
            /* 11878 */
            byte b4 = au[c2];
            /* 11879 */
            byte b5 = au[b1];
            /* 11880 */
            byte b6 = au[b2];
            /* 11881 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11882 */
                return new byte[0];
                /*       */
            }
            /* 11884 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11885 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11886 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11887 */
            arrayOfByte[b++] = (byte) m;
            /* 11888 */
            if (b < i) {
                /* 11889 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11891 */
            if (b < i) {
                /* 11892 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11895 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dK(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11899 */
        if (paramInt2 % 4 != 0) {
            /* 11900 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11903 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11904 */
            paramInt2--;
            /*       */
        }
        /* 11906 */
        int i = paramInt2 * 3 / 4;
        /* 11907 */
        byte[] arrayOfByte = new byte[i];
        /* 11908 */
        int j = paramInt1;
        /* 11909 */
        int k = paramInt1 + paramInt2;
        /* 11910 */
        byte b = 0;
        /* 11911 */
        while (j < k) {
            /* 11912 */
            char c1 = paramArrayOfchar[j++];
            /* 11913 */
            char c2 = paramArrayOfchar[j++];
            /* 11914 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11915 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11917 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11918 */
                return new byte[0];
                /*       */
            }
            /* 11920 */
            byte b3 = au[c1];
            /* 11921 */
            byte b4 = au[c2];
            /* 11922 */
            byte b5 = au[b1];
            /* 11923 */
            byte b6 = au[b2];
            /* 11924 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11925 */
                return new byte[0];
                /*       */
            }
            /* 11927 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11928 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11929 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11930 */
            arrayOfByte[b++] = (byte) m;
            /* 11931 */
            if (b < i) {
                /* 11932 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11934 */
            if (b < i) {
                /* 11935 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11938 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 11941 */   private static String ad = "P3Bg==";

    /*       */
    /*       */
    private static byte[] dL(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11944 */
        if (paramInt2 % 4 != 0) {
            /* 11945 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11948 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11949 */
            paramInt2--;
            /*       */
        }
        /* 11951 */
        int i = paramInt2 * 3 / 4;
        /* 11952 */
        byte[] arrayOfByte = new byte[i];
        /* 11953 */
        int j = paramInt1;
        /* 11954 */
        int k = paramInt1 + paramInt2;
        /* 11955 */
        byte b = 0;
        /* 11956 */
        while (j < k) {
            /* 11957 */
            char c1 = paramArrayOfchar[j++];
            /* 11958 */
            char c2 = paramArrayOfchar[j++];
            /* 11959 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 11960 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 11962 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 11963 */
                return new byte[0];
                /*       */
            }
            /* 11965 */
            byte b3 = au[c1];
            /* 11966 */
            byte b4 = au[c2];
            /* 11967 */
            byte b5 = au[b1];
            /* 11968 */
            byte b6 = au[b2];
            /* 11969 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 11970 */
                return new byte[0];
                /*       */
            }
            /* 11972 */
            int m = b3 << 2 | b4 >>> 4;
            /* 11973 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 11974 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 11975 */
            arrayOfByte[b++] = (byte) m;
            /* 11976 */
            if (b < i) {
                /* 11977 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 11979 */
            if (b < i) {
                /* 11980 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 11983 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dM(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 11987 */
        if (paramInt2 % 4 != 0) {
            /* 11988 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 11991 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 11992 */
            paramInt2--;
            /*       */
        }
        /* 11994 */
        int i = paramInt2 * 3 / 4;
        /* 11995 */
        byte[] arrayOfByte = new byte[i];
        /* 11996 */
        int j = paramInt1;
        /* 11997 */
        int k = paramInt1 + paramInt2;
        /* 11998 */
        byte b = 0;
        /* 11999 */
        while (j < k) {
            /* 12000 */
            char c1 = paramArrayOfchar[j++];
            /* 12001 */
            char c2 = paramArrayOfchar[j++];
            /* 12002 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 12003 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 12005 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 12006 */
                return new byte[0];
                /*       */
            }
            /* 12008 */
            byte b3 = au[c1];
            /* 12009 */
            byte b4 = au[c2];
            /* 12010 */
            byte b5 = au[b1];
            /* 12011 */
            byte b6 = au[b2];
            /* 12012 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 12013 */
                return new byte[0];
                /*       */
            }
            /* 12015 */
            int m = b3 << 2 | b4 >>> 4;
            /* 12016 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 12017 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 12018 */
            arrayOfByte[b++] = (byte) m;
            /* 12019 */
            if (b < i) {
                /* 12020 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 12022 */
            if (b < i) {
                /* 12023 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 12026 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dN(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 12030 */
        if (paramInt2 % 4 != 0) {
            /* 12031 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 12034 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 12035 */
            paramInt2--;
            /*       */
        }
        /* 12037 */
        int i = paramInt2 * 3 / 4;
        /* 12038 */
        byte[] arrayOfByte = new byte[i];
        /* 12039 */
        int j = paramInt1;
        /* 12040 */
        int k = paramInt1 + paramInt2;
        /* 12041 */
        byte b = 0;
        /* 12042 */
        while (j < k) {
            /* 12043 */
            char c1 = paramArrayOfchar[j++];
            /* 12044 */
            char c2 = paramArrayOfchar[j++];
            /* 12045 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 12046 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 12048 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 12049 */
                return new byte[0];
                /*       */
            }
            /* 12051 */
            byte b3 = au[c1];
            /* 12052 */
            byte b4 = au[c2];
            /* 12053 */
            byte b5 = au[b1];
            /* 12054 */
            byte b6 = au[b2];
            /* 12055 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 12056 */
                return new byte[0];
                /*       */
            }
            /* 12058 */
            int m = b3 << 2 | b4 >>> 4;
            /* 12059 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 12060 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 12061 */
            arrayOfByte[b++] = (byte) m;
            /* 12062 */
            if (b < i) {
                /* 12063 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 12065 */
            if (b < i) {
                /* 12066 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 12069 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 12072 */   private static String ae = "413740";
    /* 12073 */   private static String af = "453bde";
    /* 12074 */   private static String ag = "bcb497";
    /* 12075 */   private static String ah = "ecd5f3";
    /* 12076 */   private static String ai = "802f58";

    /*       */
    /*       */
    private static byte[] dO(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 12079 */
        if (paramInt2 % 4 != 0) {
            /* 12080 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 12083 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 12084 */
            paramInt2--;
            /*       */
        }
        /* 12086 */
        int i = paramInt2 * 3 / 4;
        /* 12087 */
        byte[] arrayOfByte = new byte[i];
        /* 12088 */
        int j = paramInt1;
        /* 12089 */
        int k = paramInt1 + paramInt2;
        /* 12090 */
        byte b = 0;
        /* 12091 */
        while (j < k) {
            /* 12092 */
            char c1 = paramArrayOfchar[j++];
            /* 12093 */
            char c2 = paramArrayOfchar[j++];
            /* 12094 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 12095 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 12097 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 12098 */
                return new byte[0];
                /*       */
            }
            /* 12100 */
            byte b3 = au[c1];
            /* 12101 */
            byte b4 = au[c2];
            /* 12102 */
            byte b5 = au[b1];
            /* 12103 */
            byte b6 = au[b2];
            /* 12104 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 12105 */
                return new byte[0];
                /*       */
            }
            /* 12107 */
            int m = b3 << 2 | b4 >>> 4;
            /* 12108 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 12109 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 12110 */
            arrayOfByte[b++] = (byte) m;
            /* 12111 */
            if (b < i) {
                /* 12112 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 12114 */
            if (b < i) {
                /* 12115 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 12118 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dP(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 12122 */
        if (paramInt2 % 4 != 0) {
            /* 12123 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 12126 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 12127 */
            paramInt2--;
            /*       */
        }
        /* 12129 */
        int i = paramInt2 * 3 / 4;
        /* 12130 */
        byte[] arrayOfByte = new byte[i];
        /* 12131 */
        int j = paramInt1;
        /* 12132 */
        int k = paramInt1 + paramInt2;
        /* 12133 */
        byte b = 0;
        /* 12134 */
        while (j < k) {
            /* 12135 */
            char c1 = paramArrayOfchar[j++];
            /* 12136 */
            char c2 = paramArrayOfchar[j++];
            /* 12137 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 12138 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 12140 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 12141 */
                return new byte[0];
                /*       */
            }
            /* 12143 */
            byte b3 = au[c1];
            /* 12144 */
            byte b4 = au[c2];
            /* 12145 */
            byte b5 = au[b1];
            /* 12146 */
            byte b6 = au[b2];
            /* 12147 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 12148 */
                return new byte[0];
                /*       */
            }
            /* 12150 */
            int m = b3 << 2 | b4 >>> 4;
            /* 12151 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 12152 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 12153 */
            arrayOfByte[b++] = (byte) m;
            /* 12154 */
            if (b < i) {
                /* 12155 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 12157 */
            if (b < i) {
                /* 12158 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 12161 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dQ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 12165 */
        if (paramInt2 % 4 != 0) {
            /* 12166 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 12169 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 12170 */
            paramInt2--;
            /*       */
        }
        /* 12172 */
        int i = paramInt2 * 3 / 4;
        /* 12173 */
        byte[] arrayOfByte = new byte[i];
        /* 12174 */
        int j = paramInt1;
        /* 12175 */
        int k = paramInt1 + paramInt2;
        /* 12176 */
        byte b = 0;
        /* 12177 */
        while (j < k) {
            /* 12178 */
            char c1 = paramArrayOfchar[j++];
            /* 12179 */
            char c2 = paramArrayOfchar[j++];
            /* 12180 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 12181 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 12183 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 12184 */
                return new byte[0];
                /*       */
            }
            /* 12186 */
            byte b3 = au[c1];
            /* 12187 */
            byte b4 = au[c2];
            /* 12188 */
            byte b5 = au[b1];
            /* 12189 */
            byte b6 = au[b2];
            /* 12190 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 12191 */
                return new byte[0];
                /*       */
            }
            /* 12193 */
            int m = b3 << 2 | b4 >>> 4;
            /* 12194 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 12195 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 12196 */
            arrayOfByte[b++] = (byte) m;
            /* 12197 */
            if (b < i) {
                /* 12198 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 12200 */
            if (b < i) {
                /* 12201 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 12204 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 12207 */   private static byte aj = 0;
    /* 12208 */   private static byte ak = 1;
    /* 12209 */   private static byte al = 2;
    /* 12210 */   private static byte am = 3;
    /* 12211 */   private static byte an = 4;
    /* 12212 */   private static byte ao = 5;
    /* 12213 */   private static byte ap = 6;
    /* 12214 */   private static byte aq = 7;
    /* 12215 */   private static byte ar = 8;
    /* 12216 */   private static byte as = 9;

    /*       */
    /*       */
    private static byte[] dR(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 12219 */
        if (paramInt2 % 4 != 0) {
            /* 12220 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 12223 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 12224 */
            paramInt2--;
            /*       */
        }
        /* 12226 */
        int i = paramInt2 * 3 / 4;
        /* 12227 */
        byte[] arrayOfByte = new byte[i];
        /* 12228 */
        int j = paramInt1;
        /* 12229 */
        int k = paramInt1 + paramInt2;
        /* 12230 */
        byte b = 0;
        /* 12231 */
        while (j < k) {
            /* 12232 */
            char c1 = paramArrayOfchar[j++];
            /* 12233 */
            char c2 = paramArrayOfchar[j++];
            /* 12234 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 12235 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 12237 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 12238 */
                return new byte[0];
                /*       */
            }
            /* 12240 */
            byte b3 = au[c1];
            /* 12241 */
            byte b4 = au[c2];
            /* 12242 */
            byte b5 = au[b1];
            /* 12243 */
            byte b6 = au[b2];
            /* 12244 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 12245 */
                return new byte[0];
                /*       */
            }
            /* 12247 */
            int m = b3 << 2 | b4 >>> 4;
            /* 12248 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 12249 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 12250 */
            arrayOfByte[b++] = (byte) m;
            /* 12251 */
            if (b < i) {
                /* 12252 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 12254 */
            if (b < i) {
                /* 12255 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 12258 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] dS(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 12262 */
        if (paramInt2 % 4 != 0) {
            /* 12263 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 12266 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 12267 */
            paramInt2--;
            /*       */
        }
        /* 12269 */
        int i = paramInt2 * 3 / 4;
        /* 12270 */
        byte[] arrayOfByte = new byte[i];
        /* 12271 */
        int j = paramInt1;
        /* 12272 */
        int k = paramInt1 + paramInt2;
        /* 12273 */
        byte b = 0;
        /* 12274 */
        while (j < k) {
            /* 12275 */
            char c1 = paramArrayOfchar[j++];
            /* 12276 */
            char c2 = paramArrayOfchar[j++];
            /* 12277 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 12278 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 12280 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 12281 */
                return new byte[0];
                /*       */
            }
            /* 12283 */
            byte b3 = au[c1];
            /* 12284 */
            byte b4 = au[c2];
            /* 12285 */
            byte b5 = au[b1];
            /* 12286 */
            byte b6 = au[b2];
            /* 12287 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 12288 */
                return new byte[0];
                /*       */
            }
            /* 12290 */
            int m = b3 << 2 | b4 >>> 4;
            /* 12291 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 12292 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 12293 */
            arrayOfByte[b++] = (byte) m;
            /* 12294 */
            if (b < i) {
                /* 12295 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 12297 */
            if (b < i) {
                /* 12298 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 12301 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */   class b
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 12308 */     private double c = 0.0D;
        /* 12309 */     private double d = 0.0D;
        /* 12310 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public b(a this$0) {
            /* 12315 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 12320 */
            if (param1Int == 0 || param1Int == 1)
                /* 12321 */ return 1;
            /* 12322 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 12331 */
            double d = param1Double;
            /* 12332 */
            if (this.f == true)
                /* 12333 */ d = Math.toRadians(param1Double);
            /* 12334 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 12339 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 12345 */
            byte b1 = 0;
            /* 12346 */
            byte b2 = 0;
            /* 12347 */
            byte b3 = 40;
            /* 12348 */
            byte b4 = 41;
            /* 12349 */
            String str = param1String;
            /* 12350 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 12351 */
                if (param1String.charAt(b5) == b3) {
                    /* 12352 */
                    b1++;
                    /* 12353 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 12354 */
                    b2++;
                    /*       */
                }
                /* 12356 */
            }
            while (b1 > 0) {
                /* 12357 */
                str = str + b4;
                /* 12358 */
                b1--;
                /*       */
            }
            /* 12360 */
            while (b2 > 0) {
                /* 12361 */
                str = b3 + str;
                /* 12362 */
                b2--;
                /*       */
            }
            /* 12364 */
            str = b(str);
            /* 12365 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 12370 */
            String str = "";
            /* 12371 */
            for (byte b1 = 0; b1 < param1String.length(); b1++) {
                /* 12372 */
                str = str + param1String.charAt(b1);
                /* 12373 */
                if (b1 != param1String.length() - 1) {
                    /*       */
                    /* 12375 */
                    if (param1String.charAt(b1) == ')' && param1String.charAt(b1 + 1) == '(')
                        /* 12376 */ str = str + '*';
                    /* 12377 */
                    if (param1String.charAt(b1) == '(' && param1String.charAt(b1 + 1) == ')')
                        /* 12378 */ str = str + '1';
                    /*       */
                }
                /* 12380 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class z
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 12388 */     private double c = 0.0D;
        /* 12389 */     private double d = 0.0D;
        /* 12390 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public z(a this$0) {
            /* 12395 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 12400 */
            if (param1Int == 0 || param1Int == 1)
                /* 12401 */ return 1;
            /* 12402 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 12411 */
            double d = param1Double;
            /* 12412 */
            if (this.f == true)
                /* 12413 */ d = Math.toRadians(param1Double);
            /* 12414 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 12419 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 12425 */
            byte b1 = 0;
            /* 12426 */
            byte b2 = 0;
            /* 12427 */
            byte b3 = 40;
            /* 12428 */
            byte b4 = 41;
            /* 12429 */
            String str = param1String;
            /* 12430 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 12431 */
                if (param1String.charAt(b5) == b3) {
                    /* 12432 */
                    b1++;
                    /* 12433 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 12434 */
                    b2++;
                    /*       */
                }
                /* 12436 */
            }
            while (b1 > 0) {
                /* 12437 */
                str = str + b4;
                /* 12438 */
                b1--;
                /*       */
            }
            /* 12440 */
            while (b2 > 0) {
                /* 12441 */
                str = b3 + str;
                /* 12442 */
                b2--;
                /*       */
            }
            /* 12444 */
            str = b(str);
            /* 12445 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 12450 */
            String str = "";
            /* 12451 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 12452 */
                str = str + param1String.charAt(b);
                /* 12453 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 12455 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 12456 */ str = str + '*';
                    /* 12457 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 12458 */ str = str + '1';
                    /*       */
                }
                /* 12460 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class c
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 12468 */     private double c = 0.0D;
        /* 12469 */     private double d = 0.0D;
        /* 12470 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public c(a this$0) {
            /* 12475 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 12480 */
            if (param1Int == 0 || param1Int == 1)
                /* 12481 */ return 1;
            /* 12482 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 12491 */
            double d = param1Double;
            /* 12492 */
            if (this.f == true)
                /* 12493 */ d = Math.toRadians(param1Double);
            /* 12494 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 12499 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 12505 */
            byte b1 = 0;
            /* 12506 */
            byte b2 = 0;
            /* 12507 */
            byte b3 = 40;
            /* 12508 */
            byte b4 = 41;
            /* 12509 */
            String str = param1String;
            /* 12510 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 12511 */
                if (param1String.charAt(b5) == b3) {
                    /* 12512 */
                    b1++;
                    /* 12513 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 12514 */
                    b2++;
                    /*       */
                }
                /* 12516 */
            }
            while (b1 > 0) {
                /* 12517 */
                str = str + b4;
                /* 12518 */
                b1--;
                /*       */
            }
            /* 12520 */
            while (b2 > 0) {
                /* 12521 */
                str = b3 + str;
                /* 12522 */
                b2--;
                /*       */
            }
            /* 12524 */
            str = b(str);
            /* 12525 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 12530 */
            String str = "";
            /* 12531 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 12532 */
                str = str + param1String.charAt(b);
                /* 12533 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 12535 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 12536 */ str = str + '*';
                    /* 12537 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 12538 */ str = str + '1';
                    /*       */
                }
                /* 12540 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class n
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 12548 */     private double c = 0.0D;
        /* 12549 */     private double d = 0.0D;
        /* 12550 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public n(a this$0) {
            /* 12555 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 12560 */
            if (param1Int == 0 || param1Int == 1)
                /* 12561 */ return 1;
            /* 12562 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 12571 */
            double d = param1Double;
            /* 12572 */
            if (this.f == true)
                /* 12573 */ d = Math.toRadians(param1Double);
            /* 12574 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 12579 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 12585 */
            byte b1 = 0;
            /* 12586 */
            byte b2 = 0;
            /* 12587 */
            byte b3 = 40;
            /* 12588 */
            byte b4 = 41;
            /* 12589 */
            String str = param1String;
            /* 12590 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 12591 */
                if (param1String.charAt(b5) == b3) {
                    /* 12592 */
                    b1++;
                    /* 12593 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 12594 */
                    b2++;
                    /*       */
                }
                /* 12596 */
            }
            while (b1 > 0) {
                /* 12597 */
                str = str + b4;
                /* 12598 */
                b1--;
                /*       */
            }
            /* 12600 */
            while (b2 > 0) {
                /* 12601 */
                str = b3 + str;
                /* 12602 */
                b2--;
                /*       */
            }
            /* 12604 */
            str = b(str);
            /* 12605 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 12610 */
            String str = "";
            /* 12611 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 12612 */
                str = str + param1String.charAt(b);
                /* 12613 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 12615 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 12616 */ str = str + '*';
                    /* 12617 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 12618 */ str = str + '1';
                    /*       */
                }
                /* 12620 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */   abcd(Context paramContext) {
        /* 12625 */
        this.a = paramContext;
        /* 12626 */
        f();
        /*       */
    }

    /*       */
    /*       */
    /*       */   class y
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 12633 */     private double c = 0.0D;
        /* 12634 */     private double d = 0.0D;
        /* 12635 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public y(a this$0) {
            /* 12640 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 12645 */
            if (param1Int == 0 || param1Int == 1)
                /* 12646 */ return 1;
            /* 12647 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 12656 */
            double d = param1Double;
            /* 12657 */
            if (this.f == true)
                /* 12658 */ d = Math.toRadians(param1Double);
            /* 12659 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 12664 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 12670 */
            byte b1 = 0;
            /* 12671 */
            byte b2 = 0;
            /* 12672 */
            byte b3 = 40;
            /* 12673 */
            byte b4 = 41;
            /* 12674 */
            String str = param1String;
            /* 12675 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 12676 */
                if (param1String.charAt(b5) == b3) {
                    /* 12677 */
                    b1++;
                    /* 12678 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 12679 */
                    b2++;
                    /*       */
                }
                /* 12681 */
            }
            while (b1 > 0) {
                /* 12682 */
                str = str + b4;
                /* 12683 */
                b1--;
                /*       */
            }
            /* 12685 */
            while (b2 > 0) {
                /* 12686 */
                str = b3 + str;
                /* 12687 */
                b2--;
                /*       */
            }
            /* 12689 */
            str = b(str);
            /* 12690 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 12695 */
            String str = "";
            /* 12696 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 12697 */
                str = str + param1String.charAt(b);
                /* 12698 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 12700 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 12701 */ str = str + '*';
                    /* 12702 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 12703 */ str = str + '1';
                    /*       */
                }
                /* 12705 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class aj
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 12713 */     private double c = 0.0D;
        /* 12714 */     private double d = 0.0D;
        /* 12715 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public aj(a this$0) {
            /* 12720 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 12725 */
            if (param1Int == 0 || param1Int == 1)
                /* 12726 */ return 1;
            /* 12727 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 12736 */
            double d = param1Double;
            /* 12737 */
            if (this.f == true)
                /* 12738 */ d = Math.toRadians(param1Double);
            /* 12739 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 12744 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 12750 */
            byte b1 = 0;
            /* 12751 */
            byte b2 = 0;
            /* 12752 */
            byte b3 = 40;
            /* 12753 */
            byte b4 = 41;
            /* 12754 */
            String str = param1String;
            /* 12755 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 12756 */
                if (param1String.charAt(b5) == b3) {
                    /* 12757 */
                    b1++;
                    /* 12758 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 12759 */
                    b2++;
                    /*       */
                }
                /* 12761 */
            }
            while (b1 > 0) {
                /* 12762 */
                str = str + b4;
                /* 12763 */
                b1--;
                /*       */
            }
            /* 12765 */
            while (b2 > 0) {
                /* 12766 */
                str = b3 + str;
                /* 12767 */
                b2--;
                /*       */
            }
            /* 12769 */
            str = b(str);
            /* 12770 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 12775 */
            String str = "";
            /* 12776 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 12777 */
                str = str + param1String.charAt(b);
                /* 12778 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 12780 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 12781 */ str = str + '*';
                    /* 12782 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 12783 */ str = str + '1';
                    /*       */
                }
                /* 12785 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class au
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 12793 */     private double c = 0.0D;
        /* 12794 */     private double d = 0.0D;
        /* 12795 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public au(a this$0) {
            /* 12800 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 12805 */
            if (param1Int == 0 || param1Int == 1)
                /* 12806 */ return 1;
            /* 12807 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 12816 */
            double d = param1Double;
            /* 12817 */
            if (this.f == true)
                /* 12818 */ d = Math.toRadians(param1Double);
            /* 12819 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 12824 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 12830 */
            byte b1 = 0;
            /* 12831 */
            byte b2 = 0;
            /* 12832 */
            byte b3 = 40;
            /* 12833 */
            byte b4 = 41;
            /* 12834 */
            String str = param1String;
            /* 12835 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 12836 */
                if (param1String.charAt(b5) == b3) {
                    /* 12837 */
                    b1++;
                    /* 12838 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 12839 */
                    b2++;
                    /*       */
                }
                /* 12841 */
            }
            while (b1 > 0) {
                /* 12842 */
                str = str + b4;
                /* 12843 */
                b1--;
                /*       */
            }
            /* 12845 */
            while (b2 > 0) {
                /* 12846 */
                str = b3 + str;
                /* 12847 */
                b2--;
                /*       */
            }
            /* 12849 */
            str = b(str);
            /* 12850 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 12855 */
            String str = "";
            /* 12856 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 12857 */
                str = str + param1String.charAt(b);
                /* 12858 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 12860 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 12861 */ str = str + '*';
                    /* 12862 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 12863 */ str = str + '1';
                    /*       */
                }
                /* 12865 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class az
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 12873 */     private double c = 0.0D;
        /* 12874 */     private double d = 0.0D;
        /* 12875 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public az(a this$0) {
            /* 12880 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 12885 */
            if (param1Int == 0 || param1Int == 1)
                /* 12886 */ return 1;
            /* 12887 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 12896 */
            double d = param1Double;
            /* 12897 */
            if (this.f == true)
                /* 12898 */ d = Math.toRadians(param1Double);
            /* 12899 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 12904 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 12910 */
            byte b1 = 0;
            /* 12911 */
            byte b2 = 0;
            /* 12912 */
            byte b3 = 40;
            /* 12913 */
            byte b4 = 41;
            /* 12914 */
            String str = param1String;
            /* 12915 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 12916 */
                if (param1String.charAt(b5) == b3) {
                    /* 12917 */
                    b1++;
                    /* 12918 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 12919 */
                    b2++;
                    /*       */
                }
                /* 12921 */
            }
            while (b1 > 0) {
                /* 12922 */
                str = str + b4;
                /* 12923 */
                b1--;
                /*       */
            }
            /* 12925 */
            while (b2 > 0) {
                /* 12926 */
                str = b3 + str;
                /* 12927 */
                b2--;
                /*       */
            }
            /* 12929 */
            str = b(str);
            /* 12930 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 12935 */
            String str = "";
            /* 12936 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 12937 */
                str = str + param1String.charAt(b);
                /* 12938 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 12940 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 12941 */ str = str + '*';
                    /* 12942 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 12943 */ str = str + '1';
                    /*       */
                }
                /* 12945 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class ba
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 12953 */     private double c = 0.0D;
        /* 12954 */     private double d = 0.0D;
        /* 12955 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public ba(a this$0) {
            /* 12960 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 12965 */
            if (param1Int == 0 || param1Int == 1)
                /* 12966 */ return 1;
            /* 12967 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 12976 */
            double d = param1Double;
            /* 12977 */
            if (this.f == true)
                /* 12978 */ d = Math.toRadians(param1Double);
            /* 12979 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 12984 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 12990 */
            byte b1 = 0;
            /* 12991 */
            byte b2 = 0;
            /* 12992 */
            byte b3 = 40;
            /* 12993 */
            byte b4 = 41;
            /* 12994 */
            String str = param1String;
            /* 12995 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 12996 */
                if (param1String.charAt(b5) == b3) {
                    /* 12997 */
                    b1++;
                    /* 12998 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 12999 */
                    b2++;
                    /*       */
                }
                /* 13001 */
            }
            while (b1 > 0) {
                /* 13002 */
                str = str + b4;
                /* 13003 */
                b1--;
                /*       */
            }
            /* 13005 */
            while (b2 > 0) {
                /* 13006 */
                str = b3 + str;
                /* 13007 */
                b2--;
                /*       */
            }
            /* 13009 */
            str = b(str);
            /* 13010 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 13015 */
            String str = "";
            /* 13016 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 13017 */
                str = str + param1String.charAt(b);
                /* 13018 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 13020 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 13021 */ str = str + '*';
                    /* 13022 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 13023 */ str = str + '1';
                    /*       */
                }
                /* 13025 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class bb
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 13033 */     private double c = 0.0D;
        /* 13034 */     private double d = 0.0D;
        /* 13035 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public bb(a this$0) {
            /* 13040 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 13045 */
            if (param1Int == 0 || param1Int == 1)
                /* 13046 */ return 1;
            /* 13047 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 13056 */
            double d = param1Double;
            /* 13057 */
            if (this.f == true)
                /* 13058 */ d = Math.toRadians(param1Double);
            /* 13059 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 13064 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 13070 */
            byte b1 = 0;
            /* 13071 */
            byte b2 = 0;
            /* 13072 */
            byte b3 = 40;
            /* 13073 */
            byte b4 = 41;
            /* 13074 */
            String str = param1String;
            /* 13075 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 13076 */
                if (param1String.charAt(b5) == b3) {
                    /* 13077 */
                    b1++;
                    /* 13078 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 13079 */
                    b2++;
                    /*       */
                }
                /* 13081 */
            }
            while (b1 > 0) {
                /* 13082 */
                str = str + b4;
                /* 13083 */
                b1--;
                /*       */
            }
            /* 13085 */
            while (b2 > 0) {
                /* 13086 */
                str = b3 + str;
                /* 13087 */
                b2--;
                /*       */
            }
            /* 13089 */
            str = b(str);
            /* 13090 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 13095 */
            String str = "";
            /* 13096 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 13097 */
                str = str + param1String.charAt(b);
                /* 13098 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 13100 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 13101 */ str = str + '*';
                    /* 13102 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 13103 */ str = str + '1';
                    /*       */
                }
                /* 13105 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */   static {
        /* 13110 */
        byte b = 0;
        char c;
        /* 13111 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 13112 */
            h[b++] = c;
            /*       */
        }
        /* 13114 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 13115 */
            h[b++] = c;
            /*       */
        }
        /* 13117 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 13118 */
            h[b++] = c;
            /*       */
        }
        /* 13120 */
        h[b++] = '+';
        /* 13121 */
        h[b++] = '/';
        /*       */
        /*       */
        /*       */
        /* 13125 */
        b = 0;
        /* 13126 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 13127 */
            i[b++] = c;
            /*       */
        }
        /* 13129 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 13130 */
            i[b++] = c;
            /*       */
        }
        /* 13132 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 13133 */
            i[b++] = c;
            /*       */
        }
        /* 13135 */
        i[b++] = '+';
        /* 13136 */
        i[b++] = '/';
        /*       */
    }

    /*       */
    /*       */
    /* 13140 */   private static String at = "?E(H+";

    /*       */
    /*       */
    /*       */   static {
        /* 13144 */
        b = 0;
        /* 13145 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 13146 */
            j[b++] = c;
            /*       */
        }
        /* 13148 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 13149 */
            j[b++] = c;
            /*       */
        }
        /* 13151 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 13152 */
            j[b++] = c;
            /*       */
        }
        /* 13154 */
        j[b++] = '+';
        /* 13155 */
        j[b++] = '/';
        /*       */
    }

    /*       */
    /*       */
    /* 13159 */   private static byte[] au = new byte[128];

    /*       */
    /*       */   static {
        /* 13162 */
        for (b = 0; b < au.length; b++)
            /* 13163 */
            au[b] = -1;
        /* 13164 */
        for (b = 0; b < 64; b++) {
            /* 13165 */
            au[h[b]] = (byte) b;
            /*       */
        }

        /* 13589 */
        b = 0;
        /* 13590 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 13591 */
            k[b++] = c;
            /*       */
        }
        /* 13593 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 13594 */
            k[b++] = c;
            /*       */
        }
        /* 13596 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 13597 */
            k[b++] = c;
            /*       */
        }
        /* 13599 */
        k[b++] = '+';
        /* 13600 */
        k[b++] = '/';
        /*       */
        /*       */
        /*       */
        /* 13604 */
        b = 0;
        /* 13605 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 13606 */
            l[b++] = c;
            /*       */
        }
        /* 13608 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 13609 */
            l[b++] = c;
            /*       */
        }
        /* 13611 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 13612 */
            l[b++] = c;
            /*       */
        }
        /* 13614 */
        l[b++] = '+';
        /* 13615 */
        l[b++] = '/';
        /*       */
        /*       */
        /*       */
        /* 13619 */
        b = 0;
        /* 13620 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 13621 */
            m[b++] = c;
            /*       */
        }
        /* 13623 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 13624 */
            m[b++] = c;
            /*       */
        }
        /* 13626 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 13627 */
            m[b++] = c;
            /*       */
        }
        /* 13629 */
        m[b++] = '+';
        /* 13630 */
        m[b++] = '/';
        /*       */
    }

    private static String b(String paramString) {
        return new String(c(paramString.getBytes()));
    }

    private static String a(String paramString1, String paramString2) throws Exception {
        return new String(c(paramString1.getBytes(paramString2)));
    }

    private static String b(byte[] paramArrayOfbyte) {
        return a(paramArrayOfbyte, 0, paramArrayOfbyte.length, 76, String.valueOf(c));
    }

    class bc {
        /*       */ Policy.Parameters a;
        private double c = 0.0D;
        private double d = 0.0D;
        private String e = "";
        private boolean f = false;

        public bc(a this$0) {
            a();
        }

        private int a(int param1Int) {
            if (param1Int == 0 || param1Int == 1) return 1;
            return a(param1Int - 1) * param1Int;
        }

        public void a() {
        }

        public double a(double param1Double) {
            double d = param1Double;
            if (this.f == true) d = Math.toRadians(param1Double);
            return d;
        }

        public String b() {
            return this.e;
        }

        public String a(String param1String) {
            byte b1 = 0;
            byte b2 = 0;
            byte b3 = 40;
            byte b4 = 41;
            String str = param1String;
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                if (param1String.charAt(b5) == b3) {
                    b1++;
                } else if (param1String.charAt(b5) == b4) {
                    b2++;
                }
            }
            while (b1 > 0) {
                str = str + b4;
                b1--;
            }
            while (b2 > 0) {
                str = b3 + str;
                b2--;
            }
            str = b(str);
            return str;
        }

        public String b(String param1String) {
            String str = "";
            for (byte b = 0; b < param1String.length(); b++) {
                str = str + param1String.charAt(b);
                if (b != param1String.length() - 1) {
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        str = str + '*';
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        str = str + '1';
                }
            }
            return str;
        }
    }

    class d {
        /*       */ Policy.Parameters a;
        private double c = 0.0D;
        private double d = 0.0D;
        private String e = "";
        private boolean f = false;

        public d(a this$0) {
            a();
        }

        private int a(int param1Int) {
            if (param1Int == 0 || param1Int == 1) return 1;
            return a(param1Int - 1) * param1Int;
        }

        public void a() {
        }

        public double a(double param1Double) {
            double d1 = param1Double;
            if (this.f == true) d1 = Math.toRadians(param1Double);
            return d1;
        }

        public String b() {
            return this.e;
        }

        public String a(String param1String) {
            byte b1 = 0;
            byte b2 = 0;
            byte b3 = 40;
            byte b4 = 41;
            String str = param1String;
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                if (param1String.charAt(b5) == b3) {
                    b1++;
                } else if (param1String.charAt(b5) == b4) {
                    b2++;
                }
            }
            while (b1 > 0) {
                str = str + b4;
                b1--;
            }
            while (b2 > 0) {
                str = b3 + str;
                b2--;
            }
            str = b(str);
            return str;
        }

        public String b(String param1String) {
            String str = "";
            for (byte b = 0; b < param1String.length(); b++) {
                str = str + param1String.charAt(b);
                if (b != param1String.length() - 1) {
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        str = str + '*';
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        str = str + '1';
                }
            }
            return str;
        }
    }

    class e {
        /*       */ Policy.Parameters a;
        private double c = 0.0D;
        private double d = 0.0D;
        private String e = "";
        private boolean f = false;

        public e(a this$0) {
            a();
        }

        private int a(int param1Int) {
            if (param1Int == 0 || param1Int == 1) return 1;
            return a(param1Int - 1) * param1Int;
        }

        public void a() {
        }

        public double a(double param1Double) {
            double d = param1Double;
            if (this.f == true) d = Math.toRadians(param1Double);
            return d;
        }

        public String b() {
            return this.e;
        }

        public String a(String param1String) {
            byte b1 = 0;
            byte b2 = 0;
            byte b3 = 40;
            byte b4 = 41;
            String str = param1String;
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                if (param1String.charAt(b5) == b3) {
                    b1++;
                } else if (param1String.charAt(b5) == b4) {
                    b2++;
                }
            }
            while (b1 > 0) {
                str = str + b4;
                b1--;
            }
            while (b2 > 0) {
                str = b3 + str;
                b2--;
            }
            str = b(str);
            return str;
        }

        public String b(String param1String) {
            String str = "";
            for (byte b = 0; b < param1String.length(); b++) {
                str = str + param1String.charAt(b);
                if (b != param1String.length() - 1) {
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        str = str + '*';
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        str = str + '1';
                }
            }
            return str;
        }
    }

    class f {
        /*       */ Policy.Parameters a;
        private double c = 0.0D;
        private double d = 0.0D;
        private String e = "";
        private boolean f = false;

        public f(a this$0) {
            a();
        }

        private int a(int param1Int) {
            if (param1Int == 0 || param1Int == 1) return 1;
            return a(param1Int - 1) * param1Int;
        }

        public void a() {
        }

        public double a(double param1Double) {
            double d = param1Double;
            if (this.f == true) d = Math.toRadians(param1Double);
            return d;
        }

        public String b() {
            return this.e;
        }

        public String a(String param1String) {
            byte b1 = 0;
            byte b2 = 0;
            byte b3 = 40;
            byte b4 = 41;
            String str = param1String;
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                if (param1String.charAt(b5) == b3) {
                    b1++;
                } else if (param1String.charAt(b5) == b4) {
                    b2++;
                }
            }
            while (b1 > 0) {
                str = str + b4;
                b1--;
            }
            while (b2 > 0) {
                str = b3 + str;
                b2--;
            }
            str = b(str);
            return str;
        }

        public String b(String param1String) {
            String str = "";
            for (byte b = 0; b < param1String.length(); b++) {
                str = str + param1String.charAt(b);
                if (b != param1String.length() - 1) {
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        str = str + '*';
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        str = str + '1';
                }
            }
            return str;
        }
    }

    class g {
        /*       */ Policy.Parameters a;
        private double c = 0.0D;
        private double d = 0.0D;
        private String e = "";
        private boolean f = false;

        public g(a this$0) {
            a();
        }

        private int a(int param1Int) {
            if (param1Int == 0 || param1Int == 1) return 1;
            return a(param1Int - 1) * param1Int;
        }

        public void a() {
        }

        public double a(double param1Double) {
            double d = param1Double;
            if (this.f == true) d = Math.toRadians(param1Double);
            return d;
        }

        public String b() {
            return this.e;
        }

        public String a(String param1String) {
            byte b1 = 0;
            byte b2 = 0;
            byte b3 = 40;
            byte b4 = 41;
            String str = param1String;
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                if (param1String.charAt(b5) == b3) {
                    b1++;
                } else if (param1String.charAt(b5) == b4) {
                    b2++;
                }
            }
            while (b1 > 0) {
                str = str + b4;
                b1--;
            }
            while (b2 > 0) {
                str = b3 + str;
                b2--;
            }
            str = b(str);
            return str;
        }

        public String b(String param1String) {
            String str = "";
            for (byte b = 0; b < param1String.length(); b++) {
                str = str + param1String.charAt(b);
                if (b != param1String.length() - 1) {
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        str = str + '*';
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        str = str + '1';
                }
            }
            return str;
        }
    }

    private static byte[] c() {
        return (b + aM + at + g + aX + dk).getBytes();
    }

    /* 13637 */   class aa {
        Policy.Parameters a;
        private double c = 0.0D;
        /* 13638 */     private double d = 0.0D;
        /* 13639 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public aa(a this$0) {
            /* 13644 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 13649 */
            if (param1Int == 0 || param1Int == 1)
                /* 13650 */ return 1;
            /* 13651 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 13660 */
            double d = param1Double;
            /* 13661 */
            if (this.f == true)
                /* 13662 */ d = Math.toRadians(param1Double);
            /* 13663 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 13668 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 13674 */
            byte b1 = 0;
            /* 13675 */
            byte b2 = 0;
            /* 13676 */
            byte b3 = 40;
            /* 13677 */
            byte b4 = 41;
            /* 13678 */
            String str = param1String;
            /* 13679 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 13680 */
                if (param1String.charAt(b5) == b3) {
                    /* 13681 */
                    b1++;
                    /* 13682 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 13683 */
                    b2++;
                    /*       */
                }
                /* 13685 */
            }
            while (b1 > 0) {
                /* 13686 */
                str = str + b4;
                /* 13687 */
                b1--;
                /*       */
            }
            /* 13689 */
            while (b2 > 0) {
                /* 13690 */
                str = b3 + str;
                /* 13691 */
                b2--;
                /*       */
            }
            /* 13693 */
            str = b(str);
            /* 13694 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 13699 */
            String str = "";
            /* 13700 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 13701 */
                str = str + param1String.charAt(b);
                /* 13702 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 13704 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 13705 */ str = str + '*';
                    /* 13706 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 13707 */ str = str + '1';
                    /*       */
                }
                /* 13709 */
            }
            return str;
            /*       */
        }
    }

    /*       */
    /*       */
    /*       */
    /*       */   class ab
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 13717 */     private double c = 0.0D;
        /* 13718 */     private double d = 0.0D;
        /* 13719 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public ab(a this$0) {
            /* 13724 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 13729 */
            if (param1Int == 0 || param1Int == 1)
                /* 13730 */ return 1;
            /* 13731 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 13740 */
            double d = param1Double;
            /* 13741 */
            if (this.f == true)
                /* 13742 */ d = Math.toRadians(param1Double);
            /* 13743 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 13748 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 13754 */
            byte b1 = 0;
            /* 13755 */
            byte b2 = 0;
            /* 13756 */
            byte b3 = 40;
            /* 13757 */
            byte b4 = 41;
            /* 13758 */
            String str = param1String;
            /* 13759 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 13760 */
                if (param1String.charAt(b5) == b3) {
                    /* 13761 */
                    b1++;
                    /* 13762 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 13763 */
                    b2++;
                    /*       */
                }
                /* 13765 */
            }
            while (b1 > 0) {
                /* 13766 */
                str = str + b4;
                /* 13767 */
                b1--;
                /*       */
            }
            /* 13769 */
            while (b2 > 0) {
                /* 13770 */
                str = b3 + str;
                /* 13771 */
                b2--;
                /*       */
            }
            /* 13773 */
            str = b(str);
            /* 13774 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 13779 */
            String str = "";
            /* 13780 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 13781 */
                str = str + param1String.charAt(b);
                /* 13782 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 13784 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 13785 */ str = str + '*';
                    /* 13786 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 13787 */ str = str + '1';
                    /*       */
                }
                /* 13789 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class ac
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 13797 */     private double c = 0.0D;
        /* 13798 */     private double d = 0.0D;
        /* 13799 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public ac(a this$0) {
            /* 13804 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 13809 */
            if (param1Int == 0 || param1Int == 1)
                /* 13810 */ return 1;
            /* 13811 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 13820 */
            double d = param1Double;
            /* 13821 */
            if (this.f == true)
                /* 13822 */ d = Math.toRadians(param1Double);
            /* 13823 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 13828 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 13834 */
            byte b1 = 0;
            /* 13835 */
            byte b2 = 0;
            /* 13836 */
            byte b3 = 40;
            /* 13837 */
            byte b4 = 41;
            /* 13838 */
            String str = param1String;
            /* 13839 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 13840 */
                if (param1String.charAt(b5) == b3) {
                    /* 13841 */
                    b1++;
                    /* 13842 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 13843 */
                    b2++;
                    /*       */
                }
                /* 13845 */
            }
            while (b1 > 0) {
                /* 13846 */
                str = str + b4;
                /* 13847 */
                b1--;
                /*       */
            }
            /* 13849 */
            while (b2 > 0) {
                /* 13850 */
                str = b3 + str;
                /* 13851 */
                b2--;
                /*       */
            }
            /* 13853 */
            str = b(str);
            /* 13854 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 13859 */
            String str = "";
            /* 13860 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 13861 */
                str = str + param1String.charAt(b);
                /* 13862 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 13864 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 13865 */ str = str + '*';
                    /* 13866 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 13867 */ str = str + '1';
                    /*       */
                }
                /* 13869 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class ad
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 13877 */     private double c = 0.0D;
        /* 13878 */     private double d = 0.0D;
        /* 13879 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public ad(a this$0) {
            /* 13884 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 13889 */
            if (param1Int == 0 || param1Int == 1)
                /* 13890 */ return 1;
            /* 13891 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 13900 */
            double d = param1Double;
            /* 13901 */
            if (this.f == true)
                /* 13902 */ d = Math.toRadians(param1Double);
            /* 13903 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 13908 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 13914 */
            byte b1 = 0;
            /* 13915 */
            byte b2 = 0;
            /* 13916 */
            byte b3 = 40;
            /* 13917 */
            byte b4 = 41;
            /* 13918 */
            String str = param1String;
            /* 13919 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 13920 */
                if (param1String.charAt(b5) == b3) {
                    /* 13921 */
                    b1++;
                    /* 13922 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 13923 */
                    b2++;
                    /*       */
                }
                /* 13925 */
            }
            while (b1 > 0) {
                /* 13926 */
                str = str + b4;
                /* 13927 */
                b1--;
                /*       */
            }
            /* 13929 */
            while (b2 > 0) {
                /* 13930 */
                str = b3 + str;
                /* 13931 */
                b2--;
                /*       */
            }
            /* 13933 */
            str = b(str);
            /* 13934 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 13939 */
            String str = "";
            /* 13940 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 13941 */
                str = str + param1String.charAt(b);
                /* 13942 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 13944 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 13945 */ str = str + '*';
                    /* 13946 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 13947 */ str = str + '1';
                    /*       */
                }
                /* 13949 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class ae
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 13957 */     private double c = 0.0D;
        /* 13958 */     private double d = 0.0D;
        /* 13959 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public ae(a this$0) {
            /* 13964 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 13969 */
            if (param1Int == 0 || param1Int == 1)
                /* 13970 */ return 1;
            /* 13971 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 13980 */
            double d = param1Double;
            /* 13981 */
            if (this.f == true)
                /* 13982 */ d = Math.toRadians(param1Double);
            /* 13983 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 13988 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 13994 */
            byte b1 = 0;
            /* 13995 */
            byte b2 = 0;
            /* 13996 */
            byte b3 = 40;
            /* 13997 */
            byte b4 = 41;
            /* 13998 */
            String str = param1String;
            /* 13999 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 14000 */
                if (param1String.charAt(b5) == b3) {
                    /* 14001 */
                    b1++;
                    /* 14002 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 14003 */
                    b2++;
                    /*       */
                }
                /* 14005 */
            }
            while (b1 > 0) {
                /* 14006 */
                str = str + b4;
                /* 14007 */
                b1--;
                /*       */
            }
            /* 14009 */
            while (b2 > 0) {
                /* 14010 */
                str = b3 + str;
                /* 14011 */
                b2--;
                /*       */
            }
            /* 14013 */
            str = b(str);
            /* 14014 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 14019 */
            String str = "";
            /* 14020 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 14021 */
                str = str + param1String.charAt(b);
                /* 14022 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 14024 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 14025 */ str = str + '*';
                    /* 14026 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 14027 */ str = str + '1';
                    /*       */
                }
                /* 14029 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class af
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 14037 */     private double c = 0.0D;
        /* 14038 */     private double d = 0.0D;
        /* 14039 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public af(a this$0) {
            /* 14044 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 14049 */
            if (param1Int == 0 || param1Int == 1)
                /* 14050 */ return 1;
            /* 14051 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 14060 */
            double d = param1Double;
            /* 14061 */
            if (this.f == true)
                /* 14062 */ d = Math.toRadians(param1Double);
            /* 14063 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 14068 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 14074 */
            byte b1 = 0;
            /* 14075 */
            byte b2 = 0;
            /* 14076 */
            byte b3 = 40;
            /* 14077 */
            byte b4 = 41;
            /* 14078 */
            String str = param1String;
            /* 14079 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 14080 */
                if (param1String.charAt(b5) == b3) {
                    /* 14081 */
                    b1++;
                    /* 14082 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 14083 */
                    b2++;
                    /*       */
                }
                /* 14085 */
            }
            while (b1 > 0) {
                /* 14086 */
                str = str + b4;
                /* 14087 */
                b1--;
                /*       */
            }
            /* 14089 */
            while (b2 > 0) {
                /* 14090 */
                str = b3 + str;
                /* 14091 */
                b2--;
                /*       */
            }
            /* 14093 */
            str = b(str);
            /* 14094 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 14099 */
            String str = "";
            /* 14100 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 14101 */
                str = str + param1String.charAt(b);
                /* 14102 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 14104 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 14105 */ str = str + '*';
                    /* 14106 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 14107 */ str = str + '1';
                    /*       */
                }
                /* 14109 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private String d() {
        /*       */
        try {
            /* 14116 */
            return a(Y + Z + aY + aG + aA, c(), new byte[]{ak, al, ap, aq, am, aj, aj, ar, as, al, aq, ap, am, an, ak, ak});
            /* 14117 */
        } catch (Exception exception) {
            /* 14118 */
            exception.printStackTrace();
            /*       */
            /* 14120 */
            return "";
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    private String e() {
        /*       */
        try {
            /* 14126 */
            return a(aa + ab + ac + ad, c(), new byte[]{ak, al, ap, aq, am, aj, aj, ar, as, al, aq, ap, am, an, ak, ak});
            /* 14127 */
        } catch (Exception exception) {
            /* 14128 */
            exception.printStackTrace();
            /*       */
            /* 14130 */
            return "";
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    private static String a(byte[] paramArrayOfbyte, int paramInt1, int paramInt2, int paramInt3, String paramString) {
        /* 14135 */
        int i = paramInt3 * 3 / 4;
        /* 14136 */
        if (i <= 0) {
            /* 14137 */
            throw new IllegalArgumentException();
            /*       */
        }
        /* 14139 */
        int j = (paramInt2 + i - 1) / i;
        /* 14140 */
        int k = (paramInt2 + 2) / 3 * 4 + j * paramString.length();
        /* 14141 */
        StringBuilder stringBuilder = new StringBuilder(k);
        /* 14142 */
        int m = 0;
        /* 14143 */
        while (m < paramInt2) {
            /* 14144 */
            int n = Math.min(paramInt2 - m, i);
            /* 14145 */
            stringBuilder.append(a(paramArrayOfbyte, paramInt1 + m, n));
            /* 14146 */
            stringBuilder.append(paramString);
            /* 14147 */
            m += n;
            /*       */
        }
        /* 14149 */
        return stringBuilder.toString();
        /*       */
    }

    /*       */
    /* 14152 */   private static String av = "aef0e3";
    /* 14153 */   private static String aw = "1f9891";
    /* 14154 */   private static String ax = "b69ff3";
    /* 14155 */   private static String ay = "7a0a5f";
    /* 14156 */   private static String az = "f1043e";

    /*       */
    /*       */   static {
        /* 14159 */
        b = 0;
        /* 14160 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 14161 */
            n[b++] = c;
            /*       */
        }
        /* 14163 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 14164 */
            n[b++] = c;
            /*       */
        }
        /* 14166 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 14167 */
            n[b++] = c;
            /*       */
        }
        /* 14169 */
        n[b++] = '+';
        /* 14170 */
        n[b++] = '/';
        /*       */
    }

    /*       */
    /*       */
    /* 14174 */   private static String aA = "9o+8Y=";

    /*       */
    /*       */   static {
        /* 14177 */
        b = 0;
        /* 14178 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 14179 */
            o[b++] = c;
            /*       */
        }
        /* 14181 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 14182 */
            o[b++] = c;
            /*       */
        }
        /* 14184 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 14185 */
            o[b++] = c;
            /*       */
        }
        /* 14187 */
        o[b++] = '+';
        /* 14188 */
        o[b++] = '/';
        /*       */
    }

    /*       */
    /*       */
    private void f() {
        /* 14192 */
        b();
        /*       */
    }

    /*       */
    /* 14195 */   private static String aB = "d6cb3edb";
    /* 14196 */   private static String aC = "0847aa45";
    /* 14197 */   private static String aD = "1811f842";
    /* 14198 */   private static String aE = "eb9b7191";
    /* 14199 */   private static String aF = "c7ba4581";

    /*       */
    /*       */   static {
        /* 14202 */
        b = 0;
        /* 14203 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 14204 */
            p[b++] = c;
            /*       */
        }
        /* 14206 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 14207 */
            p[b++] = c;
            /*       */
        }
        /* 14209 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 14210 */
            p[b++] = c;
            /*       */
        }
        /* 14212 */
        p[b++] = '+';
        /* 14213 */
        p[b++] = '/';
        /*       */
        /*       */
        /*       */
        /* 14217 */
        b = 0;
        /* 14218 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 14219 */
            q[b++] = c;
            /*       */
        }
        /* 14221 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 14222 */
            q[b++] = c;
            /*       */
        }
        /* 14224 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 14225 */
            q[b++] = c;
            /*       */
        }
        /* 14227 */
        q[b++] = '+';
        /* 14228 */
        q[b++] = '/';
        /*       */
    }

    /*       */
    /*       */
    /* 14232 */   private static String aG = "B1kGjN2q";

    /*       */
    /*       */   static {
        /* 14235 */
        b = 0;
        /* 14236 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 14237 */
            r[b++] = c;
            /*       */
        }
        /* 14239 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 14240 */
            r[b++] = c;
            /*       */
        }
        /* 14242 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 14243 */
            r[b++] = c;
            /*       */
        }
        /* 14245 */
        r[b++] = '+';
        /* 14246 */
        r[b++] = '/';
        /*       */
        /*       */
        /*       */
        /* 14250 */
        b = 0;
        /* 14251 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 14252 */
            s[b++] = c;
            /*       */
        }
        /* 14254 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 14255 */
            s[b++] = c;
            /*       */
        }
        /* 14257 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 14258 */
            s[b++] = c;
            /*       */
        }
        /* 14260 */
        s[b++] = '+';
        /* 14261 */
        s[b++] = '/';
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /* 14274 */
        b = 0;
        /* 14275 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 14276 */
            t[b++] = c;
            /*       */
        }
        /* 14278 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 14279 */
            t[b++] = c;
            /*       */
        }
        /* 14281 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 14282 */
            t[b++] = c;
            /*       */
        }
        /* 14284 */
        t[b++] = '+';
        /* 14285 */
        t[b++] = '/';
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /* 20312 */
        b = 0;
        /* 20313 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 20314 */
            u[b++] = c;
            /*       */
        }
        /* 20316 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 20317 */
            u[b++] = c;
            /*       */
        }
        /* 20319 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 20320 */
            u[b++] = c;
            /*       */
        }
        /* 20322 */
        u[b++] = '+';
        /* 20323 */
        u[b++] = '/';
        /*       */
    }

    private static String c(byte[] paramArrayOfbyte) {
        return new String(a(paramArrayOfbyte, 0, paramArrayOfbyte.length));
    }

    private static char[] a(byte[] paramArrayOfbyte, int paramInt) {
        return a(paramArrayOfbyte, 0, paramInt);
    }

    class ag {
        /*       */ Policy.Parameters a;
        private double c = 0.0D;
        private double d = 0.0D;
        private String e = "";
        private boolean f = false;

        public ag(a this$0) {
            a();
        }

        private int a(int param1Int) {
            if (param1Int == 0 || param1Int == 1) return 1;
            return a(param1Int - 1) * param1Int;
        }

        public void a() {
        }

        public double a(double param1Double) {
            double d = param1Double;
            if (this.f == true) d = Math.toRadians(param1Double);
            return d;
        }

        public String b() {
            return this.e;
        }

        public String a(String param1String) {
            byte b1 = 0;
            byte b2 = 0;
            byte b3 = 40;
            byte b4 = 41;
            String str = param1String;
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                if (param1String.charAt(b5) == b3) {
                    b1++;
                } else if (param1String.charAt(b5) == b4) {
                    b2++;
                }
            }
            while (b1 > 0) {
                str = str + b4;
                b1--;
            }
            while (b2 > 0) {
                str = b3 + str;
                b2--;
            }
            str = b(str);
            return str;
        }

        public String b(String param1String) {
            String str = "";
            for (byte b = 0; b < param1String.length(); b++) {
                str = str + param1String.charAt(b);
                if (b != param1String.length() - 1) {
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        str = str + '*';
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        str = str + '1';
                }
            }
            return str;
        }
    }

    private static byte[] dT(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] dU(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] dV(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] dW(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] dX(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] dY(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] dZ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ea(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eb(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ec(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ed(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ee(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ef(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eg(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eh(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ei(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ej(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ek(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    public String a() {
        String str = "";
        try {
            str = Base64.encodeToString(g(i() + "" + k() + "" + g()).getBytes("UTF-8"), 0);
        } catch (Exception exception) {
            exception.printStackTrace();
        }
        return (str.length() > 16) ? str.substring(str.length() - 17, str.length() - 1) : str;
    }

    private String g() {
        try {
            return g(Base64.encodeToString(c(Base64.encodeToString(c(i()).getBytes(), 0)).getBytes(), 0));
        } catch (Exception exception) {
            return "";
        }
    }

    private String c(String paramString) {
        String str1 = paramString.trim();
        StringBuilder stringBuilder = new StringBuilder();
        String str2 = null;
        for (byte b = 0; b < str1.length(); b++) stringBuilder.append(str1.charAt(b));
        str2 = stringBuilder.toString();
        return str2;
    }

    private static byte[] el(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] em(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] en(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eo(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ep(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eq(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] er(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] es(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] et(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eu(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ev(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ew(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ex(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ey(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ez(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eA(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eB(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eC(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eD(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eE(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eF(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eG(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    class ah {
        /*       */ Policy.Parameters a;
        private double c = 0.0D;
        private double d = 0.0D;
        private String e = "";
        private boolean f = false;

        public ah(a this$0) {
            a();
        }

        private int a(int param1Int) {
            if (param1Int == 0 || param1Int == 1) return 1;
            return a(param1Int - 1) * param1Int;
        }

        public void a() {
        }

        public double a(double param1Double) {
            double d = param1Double;
            if (this.f == true) d = Math.toRadians(param1Double);
            return d;
        }

        public String b() {
            return this.e;
        }

        public String a(String param1String) {
            byte b1 = 0;
            byte b2 = 0;
            byte b3 = 40;
            byte b4 = 41;
            String str = param1String;
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                if (param1String.charAt(b5) == b3) {
                    b1++;
                } else if (param1String.charAt(b5) == b4) {
                    b2++;
                }
            }
            while (b1 > 0) {
                str = str + b4;
                b1--;
            }
            while (b2 > 0) {
                str = b3 + str;
                b2--;
            }
            str = b(str);
            return str;
        }

        public String b(String param1String) {
            String str = "";
            for (byte b = 0; b < param1String.length(); b++) {
                str = str + param1String.charAt(b);
                if (b != param1String.length() - 1) {
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        str = str + '*';
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        str = str + '1';
                }
            }
            return str;
        }
    }

    private static byte[] eH(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eI(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eJ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eK(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eL(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eM(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eN(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eO(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eP(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eQ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eR(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eS(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eT(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eU(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eV(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eW(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eX(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eY(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] eZ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fa(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fb(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fc(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fd(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    /* 20327 */
    private static byte[] gt(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) {
            /* 20328 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20331 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20332 */
            paramInt2--;
            /*       */
        }
        /* 20334 */
        int i = paramInt2 * 3 / 4;
        /* 20335 */
        byte[] arrayOfByte = new byte[i];
        /* 20336 */
        int j = paramInt1;
        /* 20337 */
        int k = paramInt1 + paramInt2;
        /* 20338 */
        byte b = 0;
        /* 20339 */
        while (j < k) {
            /* 20340 */
            char c1 = paramArrayOfchar[j++];
            /* 20341 */
            char c2 = paramArrayOfchar[j++];
            /* 20342 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20343 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20345 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20346 */
                return new byte[0];
                /*       */
            }
            /* 20348 */
            byte b3 = au[c1];
            /* 20349 */
            byte b4 = au[c2];
            /* 20350 */
            byte b5 = au[b1];
            /* 20351 */
            byte b6 = au[b2];
            /* 20352 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20353 */
                return new byte[0];
                /*       */
            }
            /* 20355 */
            int m = b3 << 2 | b4 >>> 4;
            /* 20356 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 20357 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 20358 */
            arrayOfByte[b++] = (byte) m;
            /* 20359 */
            if (b < i) {
                /* 20360 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 20362 */
            if (b < i) {
                /* 20363 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 20366 */
        return arrayOfByte;
    }

    /*       */
    private static byte[] fe(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    /*       */
    private static byte[] ff(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    /*       */
    private static byte[] fg(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fh(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fi(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fj(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fk(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    class ai {
        /* 20370 */ Policy.Parameters a;
        private double c = 0.0D;
        private double d = 0.0D;
        private String e = "";
        private boolean f = false;

        public ai(a this$0) {
            a();
        }

        private int a(int param1Int) {
            if (param1Int == 0 || param1Int == 1) return 1;
            return a(param1Int - 1) * param1Int;
        }

        public void a() {
        }

        public double a(double param1Double) {
            double d = param1Double;
            if (this.f == true) d = Math.toRadians(param1Double);
            return d;
        }

        public String b() {
            return this.e;
        }

        public String a(String param1String) {
            byte b1 = 0;
            byte b2 = 0;
            byte b3 = 40;
            byte b4 = 41;
            String str = param1String;
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                if (param1String.charAt(b5) == b3) {
                    b1++;
                } else if (param1String.charAt(b5) == b4) {
                    b2++;
                }
            }
            while (b1 > 0) {
                str = str + b4;
                b1--;
            }
            while (b2 > 0) {
                str = b3 + str;
                b2--;
            }
            str = b(str);
            return str;
        }

        public String b(String param1String) {
            String str = "";
            for (byte b = 0; b < param1String.length(); b++) {
                str = str + param1String.charAt(b);
                if (b != param1String.length() - 1) {
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        str = str + '*';
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        str = str + '1';
                }
            }
            return str;
        }
    }

    private static byte[] fl(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fm(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fn(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fo(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fp(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fq(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fr(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fs(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ft(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fu(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fv(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fw(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fx(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fy(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fz(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fA(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fB(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fC(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fD(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fE(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fF(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fG(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fH(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fI(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fJ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fK(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fL(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gu(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) {
            /* 20371 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20374 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20375 */
            paramInt2--;
            /*       */
        }
        /* 20377 */
        int i = paramInt2 * 3 / 4;
        /* 20378 */
        byte[] arrayOfByte = new byte[i];
        /* 20379 */
        int j = paramInt1;
        /* 20380 */
        int k = paramInt1 + paramInt2;
        /* 20381 */
        byte b = 0;
        /* 20382 */
        while (j < k) {
            /* 20383 */
            char c1 = paramArrayOfchar[j++];
            /* 20384 */
            char c2 = paramArrayOfchar[j++];
            /* 20385 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20386 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20388 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20389 */
                return new byte[0];
                /*       */
            }
            /* 20391 */
            byte b3 = au[c1];
            /* 20392 */
            byte b4 = au[c2];
            /* 20393 */
            byte b5 = au[b1];
            /* 20394 */
            byte b6 = au[b2];
            /* 20395 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20396 */
                return new byte[0];
                /*       */
            }
            /* 20398 */
            int m = b3 << 2 | b4 >>> 4;
            /* 20399 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 20400 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 20401 */
            arrayOfByte[b++] = (byte) m;
            /* 20402 */
            if (b < i) {
                /* 20403 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 20405 */
            if (b < i) {
                /* 20406 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 20409 */
        return arrayOfByte;
    }

    /*       */
    private static byte[] fM(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    /*       */
    private static byte[] fN(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fO(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    class ak {
        /*       */ Policy.Parameters a;
        private double c = 0.0D;
        private double d = 0.0D;
        private String e = "";
        private boolean f = false;

        public ak(a this$0) {
            a();
        }

        private int a(int param1Int) {
            if (param1Int == 0 || param1Int == 1) return 1;
            return a(param1Int - 1) * param1Int;
        }

        public void a() {
        }

        public double a(double param1Double) {
            double d = param1Double;
            if (this.f == true) d = Math.toRadians(param1Double);
            return d;
        }

        public String b() {
            return this.e;
        }

        public String a(String param1String) {
            byte b1 = 0;
            byte b2 = 0;
            byte b3 = 40;
            byte b4 = 41;
            String str = param1String;
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                if (param1String.charAt(b5) == b3) {
                    b1++;
                } else if (param1String.charAt(b5) == b4) {
                    b2++;
                }
            }
            while (b1 > 0) {
                str = str + b4;
                b1--;
            }
            while (b2 > 0) {
                str = b3 + str;
                b2--;
            }
            str = b(str);
            return str;
        }

        public String b(String param1String) {
            String str = "";
            for (byte b = 0; b < param1String.length(); b++) {
                str = str + param1String.charAt(b);
                if (b != param1String.length() - 1) {
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        str = str + '*';
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        str = str + '1';
                }
            }
            return str;
        }
    }

    private static byte[] fP(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fQ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fR(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fS(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fT(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fU(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fV(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fW(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fX(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fY(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] fZ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ga(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gb(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gc(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gd(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ge(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gf(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gg(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gh(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gi(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gj(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gk(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gl(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gm(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gn(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] go(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gp(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gq(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gr(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] gs(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    class al {
        /* 20413 */ Policy.Parameters a;
        private double c = 0.0D;
        private double d = 0.0D;
        private String e = "";
        private boolean f = false;

        public al(a this$0) {
            a();
        }

        private int a(int param1Int) {
            if (param1Int == 0 || param1Int == 1) return 1;
            return a(param1Int - 1) * param1Int;
        }

        public void a() {
        }

        public double a(double param1Double) {
            double d = param1Double;
            if (this.f == true) d = Math.toRadians(param1Double);
            return d;
        }

        public String b() {
            return this.e;
        }

        public String a(String param1String) {
            byte b1 = 0;
            byte b2 = 0;
            byte b3 = 40;
            byte b4 = 41;
            String str = param1String;
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                if (param1String.charAt(b5) == b3) {
                    b1++;
                } else if (param1String.charAt(b5) == b4) {
                    b2++;
                }
            }
            while (b1 > 0) {
                str = str + b4;
                b1--;
            }
            while (b2 > 0) {
                str = b3 + str;
                b2--;
            }
            str = b(str);
            return str;
        }

        public String b(String param1String) {
            String str = "";
            for (byte b = 0; b < param1String.length(); b++) {
                str = str + param1String.charAt(b);
                if (b != param1String.length() - 1) {
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        str = str + '*';
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        str = str + '1';
                }
            }
            return str;
        }
    }

    private static byte[] gv(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) {
            /* 20414 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20417 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20418 */
            paramInt2--;
            /*       */
        }
        /* 20420 */
        int i = paramInt2 * 3 / 4;
        /* 20421 */
        byte[] arrayOfByte = new byte[i];
        /* 20422 */
        int j = paramInt1;
        /* 20423 */
        int k = paramInt1 + paramInt2;
        /* 20424 */
        byte b = 0;
        /* 20425 */
        while (j < k) {
            /* 20426 */
            char c1 = paramArrayOfchar[j++];
            /* 20427 */
            char c2 = paramArrayOfchar[j++];
            /* 20428 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20429 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20431 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20432 */
                return new byte[0];
                /*       */
            }
            /* 20434 */
            byte b3 = au[c1];
            /* 20435 */
            byte b4 = au[c2];
            /* 20436 */
            byte b5 = au[b1];
            /* 20437 */
            byte b6 = au[b2];
            /* 20438 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20439 */
                return new byte[0];
                /*       */
            }
            /* 20441 */
            int m = b3 << 2 | b4 >>> 4;
            /* 20442 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 20443 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 20444 */
            arrayOfByte[b++] = (byte) m;
            /* 20445 */
            if (b < i) {
                /* 20446 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 20448 */
            if (b < i) {
                /* 20449 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 20452 */
        return arrayOfByte;
    }

    /*       */
    /*       */
    /*       */
    private static byte[] gw(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 20456 */
        if (paramInt2 % 4 != 0) {
            /* 20457 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20460 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20461 */
            paramInt2--;
            /*       */
        }
        /* 20463 */
        int i = paramInt2 * 3 / 4;
        /* 20464 */
        byte[] arrayOfByte = new byte[i];
        /* 20465 */
        int j = paramInt1;
        /* 20466 */
        int k = paramInt1 + paramInt2;
        /* 20467 */
        byte b = 0;
        /* 20468 */
        while (j < k) {
            /* 20469 */
            char c1 = paramArrayOfchar[j++];
            /* 20470 */
            char c2 = paramArrayOfchar[j++];
            /* 20471 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20472 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20474 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20475 */
                return new byte[0];
                /*       */
            }
            /* 20477 */
            byte b3 = au[c1];
            /* 20478 */
            byte b4 = au[c2];
            /* 20479 */
            byte b5 = au[b1];
            /* 20480 */
            byte b6 = au[b2];
            /* 20481 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20482 */
                return new byte[0];
                /*       */
            }
            /* 20484 */
            int m = b3 << 2 | b4 >>> 4;
            /* 20485 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 20486 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 20487 */
            arrayOfByte[b++] = (byte) m;
            /* 20488 */
            if (b < i) {
                /* 20489 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 20491 */
            if (b < i) {
                /* 20492 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 20495 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gx(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 20499 */
        if (paramInt2 % 4 != 0) {
            /* 20500 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20503 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20504 */
            paramInt2--;
            /*       */
        }
        /* 20506 */
        int i = paramInt2 * 3 / 4;
        /* 20507 */
        byte[] arrayOfByte = new byte[i];
        /* 20508 */
        int j = paramInt1;
        /* 20509 */
        int k = paramInt1 + paramInt2;
        /* 20510 */
        byte b = 0;
        /* 20511 */
        while (j < k) {
            /* 20512 */
            char c1 = paramArrayOfchar[j++];
            /* 20513 */
            char c2 = paramArrayOfchar[j++];
            /* 20514 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20515 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20517 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20518 */
                return new byte[0];
                /*       */
            }
            /* 20520 */
            byte b3 = au[c1];
            /* 20521 */
            byte b4 = au[c2];
            /* 20522 */
            byte b5 = au[b1];
            /* 20523 */
            byte b6 = au[b2];
            /* 20524 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20525 */
                return new byte[0];
                /*       */
            }
            /* 20527 */
            int m = b3 << 2 | b4 >>> 4;
            /* 20528 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 20529 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 20530 */
            arrayOfByte[b++] = (byte) m;
            /* 20531 */
            if (b < i) {
                /* 20532 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 20534 */
            if (b < i) {
                /* 20535 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 20538 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gy(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 20542 */
        if (paramInt2 % 4 != 0) {
            /* 20543 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20546 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20547 */
            paramInt2--;
            /*       */
        }
        /* 20549 */
        int i = paramInt2 * 3 / 4;
        /* 20550 */
        byte[] arrayOfByte = new byte[i];
        /* 20551 */
        int j = paramInt1;
        /* 20552 */
        int k = paramInt1 + paramInt2;
        /* 20553 */
        byte b = 0;
        /* 20554 */
        while (j < k) {
            /* 20555 */
            char c1 = paramArrayOfchar[j++];
            /* 20556 */
            char c2 = paramArrayOfchar[j++];
            /* 20557 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20558 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20560 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20561 */
                return new byte[0];
                /*       */
            }
            /* 20563 */
            byte b3 = au[c1];
            /* 20564 */
            byte b4 = au[c2];
            /* 20565 */
            byte b5 = au[b1];
            /* 20566 */
            byte b6 = au[b2];
            /* 20567 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20568 */
                return new byte[0];
                /*       */
            }
            /* 20570 */
            int m = b3 << 2 | b4 >>> 4;
            /* 20571 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 20572 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 20573 */
            arrayOfByte[b++] = (byte) m;
            /* 20574 */
            if (b < i) {
                /* 20575 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 20577 */
            if (b < i) {
                /* 20578 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 20581 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gz(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 20585 */
        if (paramInt2 % 4 != 0) {
            /* 20586 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20589 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20590 */
            paramInt2--;
            /*       */
        }
        /* 20592 */
        int i = paramInt2 * 3 / 4;
        /* 20593 */
        byte[] arrayOfByte = new byte[i];
        /* 20594 */
        int j = paramInt1;
        /* 20595 */
        int k = paramInt1 + paramInt2;
        /* 20596 */
        byte b = 0;
        /* 20597 */
        while (j < k) {
            /* 20598 */
            char c1 = paramArrayOfchar[j++];
            /* 20599 */
            char c2 = paramArrayOfchar[j++];
            /* 20600 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20601 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20603 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20604 */
                return new byte[0];
                /*       */
            }
            /* 20606 */
            byte b3 = au[c1];
            /* 20607 */
            byte b4 = au[c2];
            /* 20608 */
            byte b5 = au[b1];
            /* 20609 */
            byte b6 = au[b2];
            /* 20610 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20611 */
                return new byte[0];
                /*       */
            }
            /* 20613 */
            int m = b3 << 2 | b4 >>> 4;
            /* 20614 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 20615 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 20616 */
            arrayOfByte[b++] = (byte) m;
            /* 20617 */
            if (b < i) {
                /* 20618 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 20620 */
            if (b < i) {
                /* 20621 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 20624 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gA(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 20628 */
        if (paramInt2 % 4 != 0) {
            /* 20629 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20632 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20633 */
            paramInt2--;
            /*       */
        }
        /* 20635 */
        int i = paramInt2 * 3 / 4;
        /* 20636 */
        byte[] arrayOfByte = new byte[i];
        /* 20637 */
        int j = paramInt1;
        /* 20638 */
        int k = paramInt1 + paramInt2;
        /* 20639 */
        byte b = 0;
        /* 20640 */
        while (j < k) {
            /* 20641 */
            char c1 = paramArrayOfchar[j++];
            /* 20642 */
            char c2 = paramArrayOfchar[j++];
            /* 20643 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20644 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20646 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20647 */
                return new byte[0];
                /*       */
            }
            /* 20649 */
            byte b3 = au[c1];
            /* 20650 */
            byte b4 = au[c2];
            /* 20651 */
            byte b5 = au[b1];
            /* 20652 */
            byte b6 = au[b2];
            /* 20653 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20654 */
                return new byte[0];
                /*       */
            }
            /* 20656 */
            int m = b3 << 2 | b4 >>> 4;
            /* 20657 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 20658 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 20659 */
            arrayOfByte[b++] = (byte) m;
            /* 20660 */
            if (b < i) {
                /* 20661 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 20663 */
            if (b < i) {
                /* 20664 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 20667 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gB(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 20671 */
        if (paramInt2 % 4 != 0) {
            /* 20672 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20675 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20676 */
            paramInt2--;
            /*       */
        }
        /* 20678 */
        int i = paramInt2 * 3 / 4;
        /* 20679 */
        byte[] arrayOfByte = new byte[i];
        /* 20680 */
        int j = paramInt1;
        /* 20681 */
        int k = paramInt1 + paramInt2;
        /* 20682 */
        byte b = 0;
        /* 20683 */
        while (j < k) {
            /* 20684 */
            char c1 = paramArrayOfchar[j++];
            /* 20685 */
            char c2 = paramArrayOfchar[j++];
            /* 20686 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20687 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20689 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20690 */
                return new byte[0];
                /*       */
            }
            /* 20692 */
            byte b3 = au[c1];
            /* 20693 */
            byte b4 = au[c2];
            /* 20694 */
            byte b5 = au[b1];
            /* 20695 */
            byte b6 = au[b2];
            /* 20696 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20697 */
                return new byte[0];
                /*       */
            }
            /* 20699 */
            int m = b3 << 2 | b4 >>> 4;
            /* 20700 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 20701 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 20702 */
            arrayOfByte[b++] = (byte) m;
            /* 20703 */
            if (b < i) {
                /* 20704 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 20706 */
            if (b < i) {
                /* 20707 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 20710 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gC(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 20714 */
        if (paramInt2 % 4 != 0) {
            /* 20715 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20718 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20719 */
            paramInt2--;
            /*       */
        }
        /* 20721 */
        int i = paramInt2 * 3 / 4;
        /* 20722 */
        byte[] arrayOfByte = new byte[i];
        /* 20723 */
        int j = paramInt1;
        /* 20724 */
        int k = paramInt1 + paramInt2;
        /* 20725 */
        byte b = 0;
        /* 20726 */
        while (j < k) {
            /* 20727 */
            char c1 = paramArrayOfchar[j++];
            /* 20728 */
            char c2 = paramArrayOfchar[j++];
            /* 20729 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20730 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20732 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20733 */
                return new byte[0];
                /*       */
            }
            /* 20735 */
            byte b3 = au[c1];
            /* 20736 */
            byte b4 = au[c2];
            /* 20737 */
            byte b5 = au[b1];
            /* 20738 */
            byte b6 = au[b2];
            /* 20739 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20740 */
                return new byte[0];
                /*       */
            }
            /* 20742 */
            int m = b3 << 2 | b4 >>> 4;
            /* 20743 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 20744 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 20745 */
            arrayOfByte[b++] = (byte) m;
            /* 20746 */
            if (b < i) {
                /* 20747 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 20749 */
            if (b < i) {
                /* 20750 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 20753 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gD(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 20757 */
        if (paramInt2 % 4 != 0) {
            /* 20758 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20761 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20762 */
            paramInt2--;
            /*       */
        }
        /* 20764 */
        int i = paramInt2 * 3 / 4;
        /* 20765 */
        byte[] arrayOfByte = new byte[i];
        /* 20766 */
        int j = paramInt1;
        /* 20767 */
        int k = paramInt1 + paramInt2;
        /* 20768 */
        byte b = 0;
        /* 20769 */
        while (j < k) {
            /* 20770 */
            char c1 = paramArrayOfchar[j++];
            /* 20771 */
            char c2 = paramArrayOfchar[j++];
            /* 20772 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20773 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20775 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20776 */
                return new byte[0];
                /*       */
            }
            /* 20778 */
            byte b3 = au[c1];
            /* 20779 */
            byte b4 = au[c2];
            /* 20780 */
            byte b5 = au[b1];
            /* 20781 */
            byte b6 = au[b2];
            /* 20782 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20783 */
                return new byte[0];
                /*       */
            }
            /* 20785 */
            int m = b3 << 2 | b4 >>> 4;
            /* 20786 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 20787 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 20788 */
            arrayOfByte[b++] = (byte) m;
            /* 20789 */
            if (b < i) {
                /* 20790 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 20792 */
            if (b < i) {
                /* 20793 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 20796 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gE(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 20800 */
        if (paramInt2 % 4 != 0) {
            /* 20801 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20804 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20805 */
            paramInt2--;
            /*       */
        }
        /* 20807 */
        int i = paramInt2 * 3 / 4;
        /* 20808 */
        byte[] arrayOfByte = new byte[i];
        /* 20809 */
        int j = paramInt1;
        /* 20810 */
        int k = paramInt1 + paramInt2;
        /* 20811 */
        byte b = 0;
        /* 20812 */
        while (j < k) {
            /* 20813 */
            char c1 = paramArrayOfchar[j++];
            /* 20814 */
            char c2 = paramArrayOfchar[j++];
            /* 20815 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20816 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20818 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20819 */
                return new byte[0];
                /*       */
            }
            /* 20821 */
            byte b3 = au[c1];
            /* 20822 */
            byte b4 = au[c2];
            /* 20823 */
            byte b5 = au[b1];
            /* 20824 */
            byte b6 = au[b2];
            /* 20825 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20826 */
                return new byte[0];
                /*       */
            }
            /* 20828 */
            int m = b3 << 2 | b4 >>> 4;
            /* 20829 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 20830 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 20831 */
            arrayOfByte[b++] = (byte) m;
            /* 20832 */
            if (b < i) {
                /* 20833 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 20835 */
            if (b < i) {
                /* 20836 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 20839 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gF(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 20843 */
        if (paramInt2 % 4 != 0) {
            /* 20844 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20847 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20848 */
            paramInt2--;
            /*       */
        }
        /* 20850 */
        int i = paramInt2 * 3 / 4;
        /* 20851 */
        byte[] arrayOfByte = new byte[i];
        /* 20852 */
        int j = paramInt1;
        /* 20853 */
        int k = paramInt1 + paramInt2;
        /* 20854 */
        byte b = 0;
        /* 20855 */
        while (j < k) {
            /* 20856 */
            char c1 = paramArrayOfchar[j++];
            /* 20857 */
            char c2 = paramArrayOfchar[j++];
            /* 20858 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20859 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20861 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20862 */
                return new byte[0];
                /*       */
            }
            /* 20864 */
            byte b3 = au[c1];
            /* 20865 */
            byte b4 = au[c2];
            /* 20866 */
            byte b5 = au[b1];
            /* 20867 */
            byte b6 = au[b2];
            /* 20868 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20869 */
                return new byte[0];
                /*       */
            }
            /* 20871 */
            int m = b3 << 2 | b4 >>> 4;
            /* 20872 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 20873 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 20874 */
            arrayOfByte[b++] = (byte) m;
            /* 20875 */
            if (b < i) {
                /* 20876 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 20878 */
            if (b < i) {
                /* 20879 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 20882 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gG(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 20886 */
        if (paramInt2 % 4 != 0) {
            /* 20887 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20890 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20891 */
            paramInt2--;
            /*       */
        }
        /* 20893 */
        int i = paramInt2 * 3 / 4;
        /* 20894 */
        byte[] arrayOfByte = new byte[i];
        /* 20895 */
        int j = paramInt1;
        /* 20896 */
        int k = paramInt1 + paramInt2;
        /* 20897 */
        byte b = 0;
        /* 20898 */
        while (j < k) {
            /* 20899 */
            char c1 = paramArrayOfchar[j++];
            /* 20900 */
            char c2 = paramArrayOfchar[j++];
            /* 20901 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20902 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20904 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20905 */
                return new byte[0];
                /*       */
            }
            /* 20907 */
            byte b3 = au[c1];
            /* 20908 */
            byte b4 = au[c2];
            /* 20909 */
            byte b5 = au[b1];
            /* 20910 */
            byte b6 = au[b2];
            /* 20911 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20912 */
                return new byte[0];
                /*       */
            }
            /* 20914 */
            int m = b3 << 2 | b4 >>> 4;
            /* 20915 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 20916 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 20917 */
            arrayOfByte[b++] = (byte) m;
            /* 20918 */
            if (b < i) {
                /* 20919 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 20921 */
            if (b < i) {
                /* 20922 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 20925 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gH(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 20929 */
        if (paramInt2 % 4 != 0) {
            /* 20930 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20933 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20934 */
            paramInt2--;
            /*       */
        }
        /* 20936 */
        int i = paramInt2 * 3 / 4;
        /* 20937 */
        byte[] arrayOfByte = new byte[i];
        /* 20938 */
        int j = paramInt1;
        /* 20939 */
        int k = paramInt1 + paramInt2;
        /* 20940 */
        byte b = 0;
        /* 20941 */
        while (j < k) {
            /* 20942 */
            char c1 = paramArrayOfchar[j++];
            /* 20943 */
            char c2 = paramArrayOfchar[j++];
            /* 20944 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20945 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20947 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20948 */
                return new byte[0];
                /*       */
            }
            /* 20950 */
            byte b3 = au[c1];
            /* 20951 */
            byte b4 = au[c2];
            /* 20952 */
            byte b5 = au[b1];
            /* 20953 */
            byte b6 = au[b2];
            /* 20954 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20955 */
                return new byte[0];
                /*       */
            }
            /* 20957 */
            int m = b3 << 2 | b4 >>> 4;
            /* 20958 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 20959 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 20960 */
            arrayOfByte[b++] = (byte) m;
            /* 20961 */
            if (b < i) {
                /* 20962 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 20964 */
            if (b < i) {
                /* 20965 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 20968 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gI(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 20972 */
        if (paramInt2 % 4 != 0) {
            /* 20973 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 20976 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 20977 */
            paramInt2--;
            /*       */
        }
        /* 20979 */
        int i = paramInt2 * 3 / 4;
        /* 20980 */
        byte[] arrayOfByte = new byte[i];
        /* 20981 */
        int j = paramInt1;
        /* 20982 */
        int k = paramInt1 + paramInt2;
        /* 20983 */
        byte b = 0;
        /* 20984 */
        while (j < k) {
            /* 20985 */
            char c1 = paramArrayOfchar[j++];
            /* 20986 */
            char c2 = paramArrayOfchar[j++];
            /* 20987 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 20988 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 20990 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 20991 */
                return new byte[0];
                /*       */
            }
            /* 20993 */
            byte b3 = au[c1];
            /* 20994 */
            byte b4 = au[c2];
            /* 20995 */
            byte b5 = au[b1];
            /* 20996 */
            byte b6 = au[b2];
            /* 20997 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 20998 */
                return new byte[0];
                /*       */
            }
            /* 21000 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21001 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21002 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21003 */
            arrayOfByte[b++] = (byte) m;
            /* 21004 */
            if (b < i) {
                /* 21005 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21007 */
            if (b < i) {
                /* 21008 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21011 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gJ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21015 */
        if (paramInt2 % 4 != 0) {
            /* 21016 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21019 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21020 */
            paramInt2--;
            /*       */
        }
        /* 21022 */
        int i = paramInt2 * 3 / 4;
        /* 21023 */
        byte[] arrayOfByte = new byte[i];
        /* 21024 */
        int j = paramInt1;
        /* 21025 */
        int k = paramInt1 + paramInt2;
        /* 21026 */
        byte b = 0;
        /* 21027 */
        while (j < k) {
            /* 21028 */
            char c1 = paramArrayOfchar[j++];
            /* 21029 */
            char c2 = paramArrayOfchar[j++];
            /* 21030 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21031 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21033 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21034 */
                return new byte[0];
                /*       */
            }
            /* 21036 */
            byte b3 = au[c1];
            /* 21037 */
            byte b4 = au[c2];
            /* 21038 */
            byte b5 = au[b1];
            /* 21039 */
            byte b6 = au[b2];
            /* 21040 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21041 */
                return new byte[0];
                /*       */
            }
            /* 21043 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21044 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21045 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21046 */
            arrayOfByte[b++] = (byte) m;
            /* 21047 */
            if (b < i) {
                /* 21048 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21050 */
            if (b < i) {
                /* 21051 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21054 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gK(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21058 */
        if (paramInt2 % 4 != 0) {
            /* 21059 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21062 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21063 */
            paramInt2--;
            /*       */
        }
        /* 21065 */
        int i = paramInt2 * 3 / 4;
        /* 21066 */
        byte[] arrayOfByte = new byte[i];
        /* 21067 */
        int j = paramInt1;
        /* 21068 */
        int k = paramInt1 + paramInt2;
        /* 21069 */
        byte b = 0;
        /* 21070 */
        while (j < k) {
            /* 21071 */
            char c1 = paramArrayOfchar[j++];
            /* 21072 */
            char c2 = paramArrayOfchar[j++];
            /* 21073 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21074 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21076 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21077 */
                return new byte[0];
                /*       */
            }
            /* 21079 */
            byte b3 = au[c1];
            /* 21080 */
            byte b4 = au[c2];
            /* 21081 */
            byte b5 = au[b1];
            /* 21082 */
            byte b6 = au[b2];
            /* 21083 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21084 */
                return new byte[0];
                /*       */
            }
            /* 21086 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21087 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21088 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21089 */
            arrayOfByte[b++] = (byte) m;
            /* 21090 */
            if (b < i) {
                /* 21091 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21093 */
            if (b < i) {
                /* 21094 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21097 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gL(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21101 */
        if (paramInt2 % 4 != 0) {
            /* 21102 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21105 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21106 */
            paramInt2--;
            /*       */
        }
        /* 21108 */
        int i = paramInt2 * 3 / 4;
        /* 21109 */
        byte[] arrayOfByte = new byte[i];
        /* 21110 */
        int j = paramInt1;
        /* 21111 */
        int k = paramInt1 + paramInt2;
        /* 21112 */
        byte b = 0;
        /* 21113 */
        while (j < k) {
            /* 21114 */
            char c1 = paramArrayOfchar[j++];
            /* 21115 */
            char c2 = paramArrayOfchar[j++];
            /* 21116 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21117 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21119 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21120 */
                return new byte[0];
                /*       */
            }
            /* 21122 */
            byte b3 = au[c1];
            /* 21123 */
            byte b4 = au[c2];
            /* 21124 */
            byte b5 = au[b1];
            /* 21125 */
            byte b6 = au[b2];
            /* 21126 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21127 */
                return new byte[0];
                /*       */
            }
            /* 21129 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21130 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21131 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21132 */
            arrayOfByte[b++] = (byte) m;
            /* 21133 */
            if (b < i) {
                /* 21134 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21136 */
            if (b < i) {
                /* 21137 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21140 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gM(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21144 */
        if (paramInt2 % 4 != 0) {
            /* 21145 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21148 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21149 */
            paramInt2--;
            /*       */
        }
        /* 21151 */
        int i = paramInt2 * 3 / 4;
        /* 21152 */
        byte[] arrayOfByte = new byte[i];
        /* 21153 */
        int j = paramInt1;
        /* 21154 */
        int k = paramInt1 + paramInt2;
        /* 21155 */
        byte b = 0;
        /* 21156 */
        while (j < k) {
            /* 21157 */
            char c1 = paramArrayOfchar[j++];
            /* 21158 */
            char c2 = paramArrayOfchar[j++];
            /* 21159 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21160 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21162 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21163 */
                return new byte[0];
                /*       */
            }
            /* 21165 */
            byte b3 = au[c1];
            /* 21166 */
            byte b4 = au[c2];
            /* 21167 */
            byte b5 = au[b1];
            /* 21168 */
            byte b6 = au[b2];
            /* 21169 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21170 */
                return new byte[0];
                /*       */
            }
            /* 21172 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21173 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21174 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21175 */
            arrayOfByte[b++] = (byte) m;
            /* 21176 */
            if (b < i) {
                /* 21177 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21179 */
            if (b < i) {
                /* 21180 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21183 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gN(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21187 */
        if (paramInt2 % 4 != 0) {
            /* 21188 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21191 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21192 */
            paramInt2--;
            /*       */
        }
        /* 21194 */
        int i = paramInt2 * 3 / 4;
        /* 21195 */
        byte[] arrayOfByte = new byte[i];
        /* 21196 */
        int j = paramInt1;
        /* 21197 */
        int k = paramInt1 + paramInt2;
        /* 21198 */
        byte b = 0;
        /* 21199 */
        while (j < k) {
            /* 21200 */
            char c1 = paramArrayOfchar[j++];
            /* 21201 */
            char c2 = paramArrayOfchar[j++];
            /* 21202 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21203 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21205 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21206 */
                return new byte[0];
                /*       */
            }
            /* 21208 */
            byte b3 = au[c1];
            /* 21209 */
            byte b4 = au[c2];
            /* 21210 */
            byte b5 = au[b1];
            /* 21211 */
            byte b6 = au[b2];
            /* 21212 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21213 */
                return new byte[0];
                /*       */
            }
            /* 21215 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21216 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21217 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21218 */
            arrayOfByte[b++] = (byte) m;
            /* 21219 */
            if (b < i) {
                /* 21220 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21222 */
            if (b < i) {
                /* 21223 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21226 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gO(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21230 */
        if (paramInt2 % 4 != 0) {
            /* 21231 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21234 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21235 */
            paramInt2--;
            /*       */
        }
        /* 21237 */
        int i = paramInt2 * 3 / 4;
        /* 21238 */
        byte[] arrayOfByte = new byte[i];
        /* 21239 */
        int j = paramInt1;
        /* 21240 */
        int k = paramInt1 + paramInt2;
        /* 21241 */
        byte b = 0;
        /* 21242 */
        while (j < k) {
            /* 21243 */
            char c1 = paramArrayOfchar[j++];
            /* 21244 */
            char c2 = paramArrayOfchar[j++];
            /* 21245 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21246 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21248 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21249 */
                return new byte[0];
                /*       */
            }
            /* 21251 */
            byte b3 = au[c1];
            /* 21252 */
            byte b4 = au[c2];
            /* 21253 */
            byte b5 = au[b1];
            /* 21254 */
            byte b6 = au[b2];
            /* 21255 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21256 */
                return new byte[0];
                /*       */
            }
            /* 21258 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21259 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21260 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21261 */
            arrayOfByte[b++] = (byte) m;
            /* 21262 */
            if (b < i) {
                /* 21263 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21265 */
            if (b < i) {
                /* 21266 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21269 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gP(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21273 */
        if (paramInt2 % 4 != 0) {
            /* 21274 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21277 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21278 */
            paramInt2--;
            /*       */
        }
        /* 21280 */
        int i = paramInt2 * 3 / 4;
        /* 21281 */
        byte[] arrayOfByte = new byte[i];
        /* 21282 */
        int j = paramInt1;
        /* 21283 */
        int k = paramInt1 + paramInt2;
        /* 21284 */
        byte b = 0;
        /* 21285 */
        while (j < k) {
            /* 21286 */
            char c1 = paramArrayOfchar[j++];
            /* 21287 */
            char c2 = paramArrayOfchar[j++];
            /* 21288 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21289 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21291 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21292 */
                return new byte[0];
                /*       */
            }
            /* 21294 */
            byte b3 = au[c1];
            /* 21295 */
            byte b4 = au[c2];
            /* 21296 */
            byte b5 = au[b1];
            /* 21297 */
            byte b6 = au[b2];
            /* 21298 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21299 */
                return new byte[0];
                /*       */
            }
            /* 21301 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21302 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21303 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21304 */
            arrayOfByte[b++] = (byte) m;
            /* 21305 */
            if (b < i) {
                /* 21306 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21308 */
            if (b < i) {
                /* 21309 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21312 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gQ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21316 */
        if (paramInt2 % 4 != 0) {
            /* 21317 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21320 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21321 */
            paramInt2--;
            /*       */
        }
        /* 21323 */
        int i = paramInt2 * 3 / 4;
        /* 21324 */
        byte[] arrayOfByte = new byte[i];
        /* 21325 */
        int j = paramInt1;
        /* 21326 */
        int k = paramInt1 + paramInt2;
        /* 21327 */
        byte b = 0;
        /* 21328 */
        while (j < k) {
            /* 21329 */
            char c1 = paramArrayOfchar[j++];
            /* 21330 */
            char c2 = paramArrayOfchar[j++];
            /* 21331 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21332 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21334 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21335 */
                return new byte[0];
                /*       */
            }
            /* 21337 */
            byte b3 = au[c1];
            /* 21338 */
            byte b4 = au[c2];
            /* 21339 */
            byte b5 = au[b1];
            /* 21340 */
            byte b6 = au[b2];
            /* 21341 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21342 */
                return new byte[0];
                /*       */
            }
            /* 21344 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21345 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21346 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21347 */
            arrayOfByte[b++] = (byte) m;
            /* 21348 */
            if (b < i) {
                /* 21349 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21351 */
            if (b < i) {
                /* 21352 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21355 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gR(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21359 */
        if (paramInt2 % 4 != 0) {
            /* 21360 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21363 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21364 */
            paramInt2--;
            /*       */
        }
        /* 21366 */
        int i = paramInt2 * 3 / 4;
        /* 21367 */
        byte[] arrayOfByte = new byte[i];
        /* 21368 */
        int j = paramInt1;
        /* 21369 */
        int k = paramInt1 + paramInt2;
        /* 21370 */
        byte b = 0;
        /* 21371 */
        while (j < k) {
            /* 21372 */
            char c1 = paramArrayOfchar[j++];
            /* 21373 */
            char c2 = paramArrayOfchar[j++];
            /* 21374 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21375 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21377 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21378 */
                return new byte[0];
                /*       */
            }
            /* 21380 */
            byte b3 = au[c1];
            /* 21381 */
            byte b4 = au[c2];
            /* 21382 */
            byte b5 = au[b1];
            /* 21383 */
            byte b6 = au[b2];
            /* 21384 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21385 */
                return new byte[0];
                /*       */
            }
            /* 21387 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21388 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21389 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21390 */
            arrayOfByte[b++] = (byte) m;
            /* 21391 */
            if (b < i) {
                /* 21392 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21394 */
            if (b < i) {
                /* 21395 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21398 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gS(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21402 */
        if (paramInt2 % 4 != 0) {
            /* 21403 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21406 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21407 */
            paramInt2--;
            /*       */
        }
        /* 21409 */
        int i = paramInt2 * 3 / 4;
        /* 21410 */
        byte[] arrayOfByte = new byte[i];
        /* 21411 */
        int j = paramInt1;
        /* 21412 */
        int k = paramInt1 + paramInt2;
        /* 21413 */
        byte b = 0;
        /* 21414 */
        while (j < k) {
            /* 21415 */
            char c1 = paramArrayOfchar[j++];
            /* 21416 */
            char c2 = paramArrayOfchar[j++];
            /* 21417 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21418 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21420 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21421 */
                return new byte[0];
                /*       */
            }
            /* 21423 */
            byte b3 = au[c1];
            /* 21424 */
            byte b4 = au[c2];
            /* 21425 */
            byte b5 = au[b1];
            /* 21426 */
            byte b6 = au[b2];
            /* 21427 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21428 */
                return new byte[0];
                /*       */
            }
            /* 21430 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21431 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21432 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21433 */
            arrayOfByte[b++] = (byte) m;
            /* 21434 */
            if (b < i) {
                /* 21435 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21437 */
            if (b < i) {
                /* 21438 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21441 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gT(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21445 */
        if (paramInt2 % 4 != 0) {
            /* 21446 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21449 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21450 */
            paramInt2--;
            /*       */
        }
        /* 21452 */
        int i = paramInt2 * 3 / 4;
        /* 21453 */
        byte[] arrayOfByte = new byte[i];
        /* 21454 */
        int j = paramInt1;
        /* 21455 */
        int k = paramInt1 + paramInt2;
        /* 21456 */
        byte b = 0;
        /* 21457 */
        while (j < k) {
            /* 21458 */
            char c1 = paramArrayOfchar[j++];
            /* 21459 */
            char c2 = paramArrayOfchar[j++];
            /* 21460 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21461 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21463 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21464 */
                return new byte[0];
                /*       */
            }
            /* 21466 */
            byte b3 = au[c1];
            /* 21467 */
            byte b4 = au[c2];
            /* 21468 */
            byte b5 = au[b1];
            /* 21469 */
            byte b6 = au[b2];
            /* 21470 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21471 */
                return new byte[0];
                /*       */
            }
            /* 21473 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21474 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21475 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21476 */
            arrayOfByte[b++] = (byte) m;
            /* 21477 */
            if (b < i) {
                /* 21478 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21480 */
            if (b < i) {
                /* 21481 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21484 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gU(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21488 */
        if (paramInt2 % 4 != 0) {
            /* 21489 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21492 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21493 */
            paramInt2--;
            /*       */
        }
        /* 21495 */
        int i = paramInt2 * 3 / 4;
        /* 21496 */
        byte[] arrayOfByte = new byte[i];
        /* 21497 */
        int j = paramInt1;
        /* 21498 */
        int k = paramInt1 + paramInt2;
        /* 21499 */
        byte b = 0;
        /* 21500 */
        while (j < k) {
            /* 21501 */
            char c1 = paramArrayOfchar[j++];
            /* 21502 */
            char c2 = paramArrayOfchar[j++];
            /* 21503 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21504 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21506 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21507 */
                return new byte[0];
                /*       */
            }
            /* 21509 */
            byte b3 = au[c1];
            /* 21510 */
            byte b4 = au[c2];
            /* 21511 */
            byte b5 = au[b1];
            /* 21512 */
            byte b6 = au[b2];
            /* 21513 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21514 */
                return new byte[0];
                /*       */
            }
            /* 21516 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21517 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21518 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21519 */
            arrayOfByte[b++] = (byte) m;
            /* 21520 */
            if (b < i) {
                /* 21521 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21523 */
            if (b < i) {
                /* 21524 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21527 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gV(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21531 */
        if (paramInt2 % 4 != 0) {
            /* 21532 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21535 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21536 */
            paramInt2--;
            /*       */
        }
        /* 21538 */
        int i = paramInt2 * 3 / 4;
        /* 21539 */
        byte[] arrayOfByte = new byte[i];
        /* 21540 */
        int j = paramInt1;
        /* 21541 */
        int k = paramInt1 + paramInt2;
        /* 21542 */
        byte b = 0;
        /* 21543 */
        while (j < k) {
            /* 21544 */
            char c1 = paramArrayOfchar[j++];
            /* 21545 */
            char c2 = paramArrayOfchar[j++];
            /* 21546 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21547 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21549 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21550 */
                return new byte[0];
                /*       */
            }
            /* 21552 */
            byte b3 = au[c1];
            /* 21553 */
            byte b4 = au[c2];
            /* 21554 */
            byte b5 = au[b1];
            /* 21555 */
            byte b6 = au[b2];
            /* 21556 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21557 */
                return new byte[0];
                /*       */
            }
            /* 21559 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21560 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21561 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21562 */
            arrayOfByte[b++] = (byte) m;
            /* 21563 */
            if (b < i) {
                /* 21564 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21566 */
            if (b < i) {
                /* 21567 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21570 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gW(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21574 */
        if (paramInt2 % 4 != 0) {
            /* 21575 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21578 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21579 */
            paramInt2--;
            /*       */
        }
        /* 21581 */
        int i = paramInt2 * 3 / 4;
        /* 21582 */
        byte[] arrayOfByte = new byte[i];
        /* 21583 */
        int j = paramInt1;
        /* 21584 */
        int k = paramInt1 + paramInt2;
        /* 21585 */
        byte b = 0;
        /* 21586 */
        while (j < k) {
            /* 21587 */
            char c1 = paramArrayOfchar[j++];
            /* 21588 */
            char c2 = paramArrayOfchar[j++];
            /* 21589 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21590 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21592 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21593 */
                return new byte[0];
                /*       */
            }
            /* 21595 */
            byte b3 = au[c1];
            /* 21596 */
            byte b4 = au[c2];
            /* 21597 */
            byte b5 = au[b1];
            /* 21598 */
            byte b6 = au[b2];
            /* 21599 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21600 */
                return new byte[0];
                /*       */
            }
            /* 21602 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21603 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21604 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21605 */
            arrayOfByte[b++] = (byte) m;
            /* 21606 */
            if (b < i) {
                /* 21607 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21609 */
            if (b < i) {
                /* 21610 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21613 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gX(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21617 */
        if (paramInt2 % 4 != 0) {
            /* 21618 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21621 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21622 */
            paramInt2--;
            /*       */
        }
        /* 21624 */
        int i = paramInt2 * 3 / 4;
        /* 21625 */
        byte[] arrayOfByte = new byte[i];
        /* 21626 */
        int j = paramInt1;
        /* 21627 */
        int k = paramInt1 + paramInt2;
        /* 21628 */
        byte b = 0;
        /* 21629 */
        while (j < k) {
            /* 21630 */
            char c1 = paramArrayOfchar[j++];
            /* 21631 */
            char c2 = paramArrayOfchar[j++];
            /* 21632 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21633 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21635 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21636 */
                return new byte[0];
                /*       */
            }
            /* 21638 */
            byte b3 = au[c1];
            /* 21639 */
            byte b4 = au[c2];
            /* 21640 */
            byte b5 = au[b1];
            /* 21641 */
            byte b6 = au[b2];
            /* 21642 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21643 */
                return new byte[0];
                /*       */
            }
            /* 21645 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21646 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21647 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21648 */
            arrayOfByte[b++] = (byte) m;
            /* 21649 */
            if (b < i) {
                /* 21650 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21652 */
            if (b < i) {
                /* 21653 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21656 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gY(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21660 */
        if (paramInt2 % 4 != 0) {
            /* 21661 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21664 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21665 */
            paramInt2--;
            /*       */
        }
        /* 21667 */
        int i = paramInt2 * 3 / 4;
        /* 21668 */
        byte[] arrayOfByte = new byte[i];
        /* 21669 */
        int j = paramInt1;
        /* 21670 */
        int k = paramInt1 + paramInt2;
        /* 21671 */
        byte b = 0;
        /* 21672 */
        while (j < k) {
            /* 21673 */
            char c1 = paramArrayOfchar[j++];
            /* 21674 */
            char c2 = paramArrayOfchar[j++];
            /* 21675 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21676 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21678 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21679 */
                return new byte[0];
                /*       */
            }
            /* 21681 */
            byte b3 = au[c1];
            /* 21682 */
            byte b4 = au[c2];
            /* 21683 */
            byte b5 = au[b1];
            /* 21684 */
            byte b6 = au[b2];
            /* 21685 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21686 */
                return new byte[0];
                /*       */
            }
            /* 21688 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21689 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21690 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21691 */
            arrayOfByte[b++] = (byte) m;
            /* 21692 */
            if (b < i) {
                /* 21693 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21695 */
            if (b < i) {
                /* 21696 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21699 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] gZ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21703 */
        if (paramInt2 % 4 != 0) {
            /* 21704 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21707 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21708 */
            paramInt2--;
            /*       */
        }
        /* 21710 */
        int i = paramInt2 * 3 / 4;
        /* 21711 */
        byte[] arrayOfByte = new byte[i];
        /* 21712 */
        int j = paramInt1;
        /* 21713 */
        int k = paramInt1 + paramInt2;
        /* 21714 */
        byte b = 0;
        /* 21715 */
        while (j < k) {
            /* 21716 */
            char c1 = paramArrayOfchar[j++];
            /* 21717 */
            char c2 = paramArrayOfchar[j++];
            /* 21718 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21719 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21721 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21722 */
                return new byte[0];
                /*       */
            }
            /* 21724 */
            byte b3 = au[c1];
            /* 21725 */
            byte b4 = au[c2];
            /* 21726 */
            byte b5 = au[b1];
            /* 21727 */
            byte b6 = au[b2];
            /* 21728 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21729 */
                return new byte[0];
                /*       */
            }
            /* 21731 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21732 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21733 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21734 */
            arrayOfByte[b++] = (byte) m;
            /* 21735 */
            if (b < i) {
                /* 21736 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21738 */
            if (b < i) {
                /* 21739 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21742 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ha(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21746 */
        if (paramInt2 % 4 != 0) {
            /* 21747 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21750 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21751 */
            paramInt2--;
            /*       */
        }
        /* 21753 */
        int i = paramInt2 * 3 / 4;
        /* 21754 */
        byte[] arrayOfByte = new byte[i];
        /* 21755 */
        int j = paramInt1;
        /* 21756 */
        int k = paramInt1 + paramInt2;
        /* 21757 */
        byte b = 0;
        /* 21758 */
        while (j < k) {
            /* 21759 */
            char c1 = paramArrayOfchar[j++];
            /* 21760 */
            char c2 = paramArrayOfchar[j++];
            /* 21761 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21762 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21764 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21765 */
                return new byte[0];
                /*       */
            }
            /* 21767 */
            byte b3 = au[c1];
            /* 21768 */
            byte b4 = au[c2];
            /* 21769 */
            byte b5 = au[b1];
            /* 21770 */
            byte b6 = au[b2];
            /* 21771 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21772 */
                return new byte[0];
                /*       */
            }
            /* 21774 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21775 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21776 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21777 */
            arrayOfByte[b++] = (byte) m;
            /* 21778 */
            if (b < i) {
                /* 21779 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21781 */
            if (b < i) {
                /* 21782 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21785 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hb(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21789 */
        if (paramInt2 % 4 != 0) {
            /* 21790 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21793 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21794 */
            paramInt2--;
            /*       */
        }
        /* 21796 */
        int i = paramInt2 * 3 / 4;
        /* 21797 */
        byte[] arrayOfByte = new byte[i];
        /* 21798 */
        int j = paramInt1;
        /* 21799 */
        int k = paramInt1 + paramInt2;
        /* 21800 */
        byte b = 0;
        /* 21801 */
        while (j < k) {
            /* 21802 */
            char c1 = paramArrayOfchar[j++];
            /* 21803 */
            char c2 = paramArrayOfchar[j++];
            /* 21804 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21805 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21807 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21808 */
                return new byte[0];
                /*       */
            }
            /* 21810 */
            byte b3 = au[c1];
            /* 21811 */
            byte b4 = au[c2];
            /* 21812 */
            byte b5 = au[b1];
            /* 21813 */
            byte b6 = au[b2];
            /* 21814 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21815 */
                return new byte[0];
                /*       */
            }
            /* 21817 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21818 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21819 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21820 */
            arrayOfByte[b++] = (byte) m;
            /* 21821 */
            if (b < i) {
                /* 21822 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21824 */
            if (b < i) {
                /* 21825 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21828 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hc(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21832 */
        if (paramInt2 % 4 != 0) {
            /* 21833 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21836 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21837 */
            paramInt2--;
            /*       */
        }
        /* 21839 */
        int i = paramInt2 * 3 / 4;
        /* 21840 */
        byte[] arrayOfByte = new byte[i];
        /* 21841 */
        int j = paramInt1;
        /* 21842 */
        int k = paramInt1 + paramInt2;
        /* 21843 */
        byte b = 0;
        /* 21844 */
        while (j < k) {
            /* 21845 */
            char c1 = paramArrayOfchar[j++];
            /* 21846 */
            char c2 = paramArrayOfchar[j++];
            /* 21847 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21848 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21850 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21851 */
                return new byte[0];
                /*       */
            }
            /* 21853 */
            byte b3 = au[c1];
            /* 21854 */
            byte b4 = au[c2];
            /* 21855 */
            byte b5 = au[b1];
            /* 21856 */
            byte b6 = au[b2];
            /* 21857 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21858 */
                return new byte[0];
                /*       */
            }
            /* 21860 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21861 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21862 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21863 */
            arrayOfByte[b++] = (byte) m;
            /* 21864 */
            if (b < i) {
                /* 21865 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21867 */
            if (b < i) {
                /* 21868 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21871 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hd(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21875 */
        if (paramInt2 % 4 != 0) {
            /* 21876 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21879 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21880 */
            paramInt2--;
            /*       */
        }
        /* 21882 */
        int i = paramInt2 * 3 / 4;
        /* 21883 */
        byte[] arrayOfByte = new byte[i];
        /* 21884 */
        int j = paramInt1;
        /* 21885 */
        int k = paramInt1 + paramInt2;
        /* 21886 */
        byte b = 0;
        /* 21887 */
        while (j < k) {
            /* 21888 */
            char c1 = paramArrayOfchar[j++];
            /* 21889 */
            char c2 = paramArrayOfchar[j++];
            /* 21890 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21891 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21893 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21894 */
                return new byte[0];
                /*       */
            }
            /* 21896 */
            byte b3 = au[c1];
            /* 21897 */
            byte b4 = au[c2];
            /* 21898 */
            byte b5 = au[b1];
            /* 21899 */
            byte b6 = au[b2];
            /* 21900 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21901 */
                return new byte[0];
                /*       */
            }
            /* 21903 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21904 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21905 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21906 */
            arrayOfByte[b++] = (byte) m;
            /* 21907 */
            if (b < i) {
                /* 21908 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21910 */
            if (b < i) {
                /* 21911 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21914 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] he(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21918 */
        if (paramInt2 % 4 != 0) {
            /* 21919 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21922 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21923 */
            paramInt2--;
            /*       */
        }
        /* 21925 */
        int i = paramInt2 * 3 / 4;
        /* 21926 */
        byte[] arrayOfByte = new byte[i];
        /* 21927 */
        int j = paramInt1;
        /* 21928 */
        int k = paramInt1 + paramInt2;
        /* 21929 */
        byte b = 0;
        /* 21930 */
        while (j < k) {
            /* 21931 */
            char c1 = paramArrayOfchar[j++];
            /* 21932 */
            char c2 = paramArrayOfchar[j++];
            /* 21933 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21934 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21936 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21937 */
                return new byte[0];
                /*       */
            }
            /* 21939 */
            byte b3 = au[c1];
            /* 21940 */
            byte b4 = au[c2];
            /* 21941 */
            byte b5 = au[b1];
            /* 21942 */
            byte b6 = au[b2];
            /* 21943 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21944 */
                return new byte[0];
                /*       */
            }
            /* 21946 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21947 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21948 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21949 */
            arrayOfByte[b++] = (byte) m;
            /* 21950 */
            if (b < i) {
                /* 21951 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21953 */
            if (b < i) {
                /* 21954 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 21957 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hf(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 21961 */
        if (paramInt2 % 4 != 0) {
            /* 21962 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 21965 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 21966 */
            paramInt2--;
            /*       */
        }
        /* 21968 */
        int i = paramInt2 * 3 / 4;
        /* 21969 */
        byte[] arrayOfByte = new byte[i];
        /* 21970 */
        int j = paramInt1;
        /* 21971 */
        int k = paramInt1 + paramInt2;
        /* 21972 */
        byte b = 0;
        /* 21973 */
        while (j < k) {
            /* 21974 */
            char c1 = paramArrayOfchar[j++];
            /* 21975 */
            char c2 = paramArrayOfchar[j++];
            /* 21976 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 21977 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 21979 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 21980 */
                return new byte[0];
                /*       */
            }
            /* 21982 */
            byte b3 = au[c1];
            /* 21983 */
            byte b4 = au[c2];
            /* 21984 */
            byte b5 = au[b1];
            /* 21985 */
            byte b6 = au[b2];
            /* 21986 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 21987 */
                return new byte[0];
                /*       */
            }
            /* 21989 */
            int m = b3 << 2 | b4 >>> 4;
            /* 21990 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 21991 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 21992 */
            arrayOfByte[b++] = (byte) m;
            /* 21993 */
            if (b < i) {
                /* 21994 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 21996 */
            if (b < i) {
                /* 21997 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22000 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hg(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22004 */
        if (paramInt2 % 4 != 0) {
            /* 22005 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22008 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22009 */
            paramInt2--;
            /*       */
        }
        /* 22011 */
        int i = paramInt2 * 3 / 4;
        /* 22012 */
        byte[] arrayOfByte = new byte[i];
        /* 22013 */
        int j = paramInt1;
        /* 22014 */
        int k = paramInt1 + paramInt2;
        /* 22015 */
        byte b = 0;
        /* 22016 */
        while (j < k) {
            /* 22017 */
            char c1 = paramArrayOfchar[j++];
            /* 22018 */
            char c2 = paramArrayOfchar[j++];
            /* 22019 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22020 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22022 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22023 */
                return new byte[0];
                /*       */
            }
            /* 22025 */
            byte b3 = au[c1];
            /* 22026 */
            byte b4 = au[c2];
            /* 22027 */
            byte b5 = au[b1];
            /* 22028 */
            byte b6 = au[b2];
            /* 22029 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22030 */
                return new byte[0];
                /*       */
            }
            /* 22032 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22033 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22034 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22035 */
            arrayOfByte[b++] = (byte) m;
            /* 22036 */
            if (b < i) {
                /* 22037 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22039 */
            if (b < i) {
                /* 22040 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22043 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 22046 */   private static String aH = "eae7f3";
    /* 22047 */   private static String aI = "1cd186";
    /* 22048 */   private static String aJ = "8ac9ac";
    /* 22049 */   private static String aK = "0703fb";
    /* 22050 */   private static String aL = "e24173";

    /*       */
    /*       */
    private static byte[] hh(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22053 */
        if (paramInt2 % 4 != 0) {
            /* 22054 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22057 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22058 */
            paramInt2--;
            /*       */
        }
        /* 22060 */
        int i = paramInt2 * 3 / 4;
        /* 22061 */
        byte[] arrayOfByte = new byte[i];
        /* 22062 */
        int j = paramInt1;
        /* 22063 */
        int k = paramInt1 + paramInt2;
        /* 22064 */
        byte b = 0;
        /* 22065 */
        while (j < k) {
            /* 22066 */
            char c1 = paramArrayOfchar[j++];
            /* 22067 */
            char c2 = paramArrayOfchar[j++];
            /* 22068 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22069 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22071 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22072 */
                return new byte[0];
                /*       */
            }
            /* 22074 */
            byte b3 = au[c1];
            /* 22075 */
            byte b4 = au[c2];
            /* 22076 */
            byte b5 = au[b1];
            /* 22077 */
            byte b6 = au[b2];
            /* 22078 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22079 */
                return new byte[0];
                /*       */
            }
            /* 22081 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22082 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22083 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22084 */
            arrayOfByte[b++] = (byte) m;
            /* 22085 */
            if (b < i) {
                /* 22086 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22088 */
            if (b < i) {
                /* 22089 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22092 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hi(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22096 */
        if (paramInt2 % 4 != 0) {
            /* 22097 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22100 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22101 */
            paramInt2--;
            /*       */
        }
        /* 22103 */
        int i = paramInt2 * 3 / 4;
        /* 22104 */
        byte[] arrayOfByte = new byte[i];
        /* 22105 */
        int j = paramInt1;
        /* 22106 */
        int k = paramInt1 + paramInt2;
        /* 22107 */
        byte b = 0;
        /* 22108 */
        while (j < k) {
            /* 22109 */
            char c1 = paramArrayOfchar[j++];
            /* 22110 */
            char c2 = paramArrayOfchar[j++];
            /* 22111 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22112 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22114 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22115 */
                return new byte[0];
                /*       */
            }
            /* 22117 */
            byte b3 = au[c1];
            /* 22118 */
            byte b4 = au[c2];
            /* 22119 */
            byte b5 = au[b1];
            /* 22120 */
            byte b6 = au[b2];
            /* 22121 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22122 */
                return new byte[0];
                /*       */
            }
            /* 22124 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22125 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22126 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22127 */
            arrayOfByte[b++] = (byte) m;
            /* 22128 */
            if (b < i) {
                /* 22129 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22131 */
            if (b < i) {
                /* 22132 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22135 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hj(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22139 */
        if (paramInt2 % 4 != 0) {
            /* 22140 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22143 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22144 */
            paramInt2--;
            /*       */
        }
        /* 22146 */
        int i = paramInt2 * 3 / 4;
        /* 22147 */
        byte[] arrayOfByte = new byte[i];
        /* 22148 */
        int j = paramInt1;
        /* 22149 */
        int k = paramInt1 + paramInt2;
        /* 22150 */
        byte b = 0;
        /* 22151 */
        while (j < k) {
            /* 22152 */
            char c1 = paramArrayOfchar[j++];
            /* 22153 */
            char c2 = paramArrayOfchar[j++];
            /* 22154 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22155 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22157 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22158 */
                return new byte[0];
                /*       */
            }
            /* 22160 */
            byte b3 = au[c1];
            /* 22161 */
            byte b4 = au[c2];
            /* 22162 */
            byte b5 = au[b1];
            /* 22163 */
            byte b6 = au[b2];
            /* 22164 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22165 */
                return new byte[0];
                /*       */
            }
            /* 22167 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22168 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22169 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22170 */
            arrayOfByte[b++] = (byte) m;
            /* 22171 */
            if (b < i) {
                /* 22172 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22174 */
            if (b < i) {
                /* 22175 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22178 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hk(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22182 */
        if (paramInt2 % 4 != 0) {
            /* 22183 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22186 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22187 */
            paramInt2--;
            /*       */
        }
        /* 22189 */
        int i = paramInt2 * 3 / 4;
        /* 22190 */
        byte[] arrayOfByte = new byte[i];
        /* 22191 */
        int j = paramInt1;
        /* 22192 */
        int k = paramInt1 + paramInt2;
        /* 22193 */
        byte b = 0;
        /* 22194 */
        while (j < k) {
            /* 22195 */
            char c1 = paramArrayOfchar[j++];
            /* 22196 */
            char c2 = paramArrayOfchar[j++];
            /* 22197 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22198 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22200 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22201 */
                return new byte[0];
                /*       */
            }
            /* 22203 */
            byte b3 = au[c1];
            /* 22204 */
            byte b4 = au[c2];
            /* 22205 */
            byte b5 = au[b1];
            /* 22206 */
            byte b6 = au[b2];
            /* 22207 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22208 */
                return new byte[0];
                /*       */
            }
            /* 22210 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22211 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22212 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22213 */
            arrayOfByte[b++] = (byte) m;
            /* 22214 */
            if (b < i) {
                /* 22215 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22217 */
            if (b < i) {
                /* 22218 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22221 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hl(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22225 */
        if (paramInt2 % 4 != 0) {
            /* 22226 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22229 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22230 */
            paramInt2--;
            /*       */
        }
        /* 22232 */
        int i = paramInt2 * 3 / 4;
        /* 22233 */
        byte[] arrayOfByte = new byte[i];
        /* 22234 */
        int j = paramInt1;
        /* 22235 */
        int k = paramInt1 + paramInt2;
        /* 22236 */
        byte b = 0;
        /* 22237 */
        while (j < k) {
            /* 22238 */
            char c1 = paramArrayOfchar[j++];
            /* 22239 */
            char c2 = paramArrayOfchar[j++];
            /* 22240 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22241 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22243 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22244 */
                return new byte[0];
                /*       */
            }
            /* 22246 */
            byte b3 = au[c1];
            /* 22247 */
            byte b4 = au[c2];
            /* 22248 */
            byte b5 = au[b1];
            /* 22249 */
            byte b6 = au[b2];
            /* 22250 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22251 */
                return new byte[0];
                /*       */
            }
            /* 22253 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22254 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22255 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22256 */
            arrayOfByte[b++] = (byte) m;
            /* 22257 */
            if (b < i) {
                /* 22258 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22260 */
            if (b < i) {
                /* 22261 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22264 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hm(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22268 */
        if (paramInt2 % 4 != 0) {
            /* 22269 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22272 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22273 */
            paramInt2--;
            /*       */
        }
        /* 22275 */
        int i = paramInt2 * 3 / 4;
        /* 22276 */
        byte[] arrayOfByte = new byte[i];
        /* 22277 */
        int j = paramInt1;
        /* 22278 */
        int k = paramInt1 + paramInt2;
        /* 22279 */
        byte b = 0;
        /* 22280 */
        while (j < k) {
            /* 22281 */
            char c1 = paramArrayOfchar[j++];
            /* 22282 */
            char c2 = paramArrayOfchar[j++];
            /* 22283 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22284 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22286 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22287 */
                return new byte[0];
                /*       */
            }
            /* 22289 */
            byte b3 = au[c1];
            /* 22290 */
            byte b4 = au[c2];
            /* 22291 */
            byte b5 = au[b1];
            /* 22292 */
            byte b6 = au[b2];
            /* 22293 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22294 */
                return new byte[0];
                /*       */
            }
            /* 22296 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22297 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22298 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22299 */
            arrayOfByte[b++] = (byte) m;
            /* 22300 */
            if (b < i) {
                /* 22301 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22303 */
            if (b < i) {
                /* 22304 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22307 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hn(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22311 */
        if (paramInt2 % 4 != 0) {
            /* 22312 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22315 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22316 */
            paramInt2--;
            /*       */
        }
        /* 22318 */
        int i = paramInt2 * 3 / 4;
        /* 22319 */
        byte[] arrayOfByte = new byte[i];
        /* 22320 */
        int j = paramInt1;
        /* 22321 */
        int k = paramInt1 + paramInt2;
        /* 22322 */
        byte b = 0;
        /* 22323 */
        while (j < k) {
            /* 22324 */
            char c1 = paramArrayOfchar[j++];
            /* 22325 */
            char c2 = paramArrayOfchar[j++];
            /* 22326 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22327 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22329 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22330 */
                return new byte[0];
                /*       */
            }
            /* 22332 */
            byte b3 = au[c1];
            /* 22333 */
            byte b4 = au[c2];
            /* 22334 */
            byte b5 = au[b1];
            /* 22335 */
            byte b6 = au[b2];
            /* 22336 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22337 */
                return new byte[0];
                /*       */
            }
            /* 22339 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22340 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22341 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22342 */
            arrayOfByte[b++] = (byte) m;
            /* 22343 */
            if (b < i) {
                /* 22344 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22346 */
            if (b < i) {
                /* 22347 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22350 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ho(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22354 */
        if (paramInt2 % 4 != 0) {
            /* 22355 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22358 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22359 */
            paramInt2--;
            /*       */
        }
        /* 22361 */
        int i = paramInt2 * 3 / 4;
        /* 22362 */
        byte[] arrayOfByte = new byte[i];
        /* 22363 */
        int j = paramInt1;
        /* 22364 */
        int k = paramInt1 + paramInt2;
        /* 22365 */
        byte b = 0;
        /* 22366 */
        while (j < k) {
            /* 22367 */
            char c1 = paramArrayOfchar[j++];
            /* 22368 */
            char c2 = paramArrayOfchar[j++];
            /* 22369 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22370 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22372 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22373 */
                return new byte[0];
                /*       */
            }
            /* 22375 */
            byte b3 = au[c1];
            /* 22376 */
            byte b4 = au[c2];
            /* 22377 */
            byte b5 = au[b1];
            /* 22378 */
            byte b6 = au[b2];
            /* 22379 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22380 */
                return new byte[0];
                /*       */
            }
            /* 22382 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22383 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22384 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22385 */
            arrayOfByte[b++] = (byte) m;
            /* 22386 */
            if (b < i) {
                /* 22387 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22389 */
            if (b < i) {
                /* 22390 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22393 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hp(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22397 */
        if (paramInt2 % 4 != 0) {
            /* 22398 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22401 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22402 */
            paramInt2--;
            /*       */
        }
        /* 22404 */
        int i = paramInt2 * 3 / 4;
        /* 22405 */
        byte[] arrayOfByte = new byte[i];
        /* 22406 */
        int j = paramInt1;
        /* 22407 */
        int k = paramInt1 + paramInt2;
        /* 22408 */
        byte b = 0;
        /* 22409 */
        while (j < k) {
            /* 22410 */
            char c1 = paramArrayOfchar[j++];
            /* 22411 */
            char c2 = paramArrayOfchar[j++];
            /* 22412 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22413 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22415 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22416 */
                return new byte[0];
                /*       */
            }
            /* 22418 */
            byte b3 = au[c1];
            /* 22419 */
            byte b4 = au[c2];
            /* 22420 */
            byte b5 = au[b1];
            /* 22421 */
            byte b6 = au[b2];
            /* 22422 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22423 */
                return new byte[0];
                /*       */
            }
            /* 22425 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22426 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22427 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22428 */
            arrayOfByte[b++] = (byte) m;
            /* 22429 */
            if (b < i) {
                /* 22430 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22432 */
            if (b < i) {
                /* 22433 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22436 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hq(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22440 */
        if (paramInt2 % 4 != 0) {
            /* 22441 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22444 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22445 */
            paramInt2--;
            /*       */
        }
        /* 22447 */
        int i = paramInt2 * 3 / 4;
        /* 22448 */
        byte[] arrayOfByte = new byte[i];
        /* 22449 */
        int j = paramInt1;
        /* 22450 */
        int k = paramInt1 + paramInt2;
        /* 22451 */
        byte b = 0;
        /* 22452 */
        while (j < k) {
            /* 22453 */
            char c1 = paramArrayOfchar[j++];
            /* 22454 */
            char c2 = paramArrayOfchar[j++];
            /* 22455 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22456 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22458 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22459 */
                return new byte[0];
                /*       */
            }
            /* 22461 */
            byte b3 = au[c1];
            /* 22462 */
            byte b4 = au[c2];
            /* 22463 */
            byte b5 = au[b1];
            /* 22464 */
            byte b6 = au[b2];
            /* 22465 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22466 */
                return new byte[0];
                /*       */
            }
            /* 22468 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22469 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22470 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22471 */
            arrayOfByte[b++] = (byte) m;
            /* 22472 */
            if (b < i) {
                /* 22473 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22475 */
            if (b < i) {
                /* 22476 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22479 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hr(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22483 */
        if (paramInt2 % 4 != 0) {
            /* 22484 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22487 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22488 */
            paramInt2--;
            /*       */
        }
        /* 22490 */
        int i = paramInt2 * 3 / 4;
        /* 22491 */
        byte[] arrayOfByte = new byte[i];
        /* 22492 */
        int j = paramInt1;
        /* 22493 */
        int k = paramInt1 + paramInt2;
        /* 22494 */
        byte b = 0;
        /* 22495 */
        while (j < k) {
            /* 22496 */
            char c1 = paramArrayOfchar[j++];
            /* 22497 */
            char c2 = paramArrayOfchar[j++];
            /* 22498 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22499 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22501 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22502 */
                return new byte[0];
                /*       */
            }
            /* 22504 */
            byte b3 = au[c1];
            /* 22505 */
            byte b4 = au[c2];
            /* 22506 */
            byte b5 = au[b1];
            /* 22507 */
            byte b6 = au[b2];
            /* 22508 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22509 */
                return new byte[0];
                /*       */
            }
            /* 22511 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22512 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22513 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22514 */
            arrayOfByte[b++] = (byte) m;
            /* 22515 */
            if (b < i) {
                /* 22516 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22518 */
            if (b < i) {
                /* 22519 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22522 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hs(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22526 */
        if (paramInt2 % 4 != 0) {
            /* 22527 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22530 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22531 */
            paramInt2--;
            /*       */
        }
        /* 22533 */
        int i = paramInt2 * 3 / 4;
        /* 22534 */
        byte[] arrayOfByte = new byte[i];
        /* 22535 */
        int j = paramInt1;
        /* 22536 */
        int k = paramInt1 + paramInt2;
        /* 22537 */
        byte b = 0;
        /* 22538 */
        while (j < k) {
            /* 22539 */
            char c1 = paramArrayOfchar[j++];
            /* 22540 */
            char c2 = paramArrayOfchar[j++];
            /* 22541 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22542 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22544 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22545 */
                return new byte[0];
                /*       */
            }
            /* 22547 */
            byte b3 = au[c1];
            /* 22548 */
            byte b4 = au[c2];
            /* 22549 */
            byte b5 = au[b1];
            /* 22550 */
            byte b6 = au[b2];
            /* 22551 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22552 */
                return new byte[0];
                /*       */
            }
            /* 22554 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22555 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22556 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22557 */
            arrayOfByte[b++] = (byte) m;
            /* 22558 */
            if (b < i) {
                /* 22559 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22561 */
            if (b < i) {
                /* 22562 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22565 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ht(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22569 */
        if (paramInt2 % 4 != 0) {
            /* 22570 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22573 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22574 */
            paramInt2--;
            /*       */
        }
        /* 22576 */
        int i = paramInt2 * 3 / 4;
        /* 22577 */
        byte[] arrayOfByte = new byte[i];
        /* 22578 */
        int j = paramInt1;
        /* 22579 */
        int k = paramInt1 + paramInt2;
        /* 22580 */
        byte b = 0;
        /* 22581 */
        while (j < k) {
            /* 22582 */
            char c1 = paramArrayOfchar[j++];
            /* 22583 */
            char c2 = paramArrayOfchar[j++];
            /* 22584 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22585 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22587 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22588 */
                return new byte[0];
                /*       */
            }
            /* 22590 */
            byte b3 = au[c1];
            /* 22591 */
            byte b4 = au[c2];
            /* 22592 */
            byte b5 = au[b1];
            /* 22593 */
            byte b6 = au[b2];
            /* 22594 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22595 */
                return new byte[0];
                /*       */
            }
            /* 22597 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22598 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22599 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22600 */
            arrayOfByte[b++] = (byte) m;
            /* 22601 */
            if (b < i) {
                /* 22602 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22604 */
            if (b < i) {
                /* 22605 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22608 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hu(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22612 */
        if (paramInt2 % 4 != 0) {
            /* 22613 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22616 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22617 */
            paramInt2--;
            /*       */
        }
        /* 22619 */
        int i = paramInt2 * 3 / 4;
        /* 22620 */
        byte[] arrayOfByte = new byte[i];
        /* 22621 */
        int j = paramInt1;
        /* 22622 */
        int k = paramInt1 + paramInt2;
        /* 22623 */
        byte b = 0;
        /* 22624 */
        while (j < k) {
            /* 22625 */
            char c1 = paramArrayOfchar[j++];
            /* 22626 */
            char c2 = paramArrayOfchar[j++];
            /* 22627 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22628 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22630 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22631 */
                return new byte[0];
                /*       */
            }
            /* 22633 */
            byte b3 = au[c1];
            /* 22634 */
            byte b4 = au[c2];
            /* 22635 */
            byte b5 = au[b1];
            /* 22636 */
            byte b6 = au[b2];
            /* 22637 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22638 */
                return new byte[0];
                /*       */
            }
            /* 22640 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22641 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22642 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22643 */
            arrayOfByte[b++] = (byte) m;
            /* 22644 */
            if (b < i) {
                /* 22645 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22647 */
            if (b < i) {
                /* 22648 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22651 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hv(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22655 */
        if (paramInt2 % 4 != 0) {
            /* 22656 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22659 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22660 */
            paramInt2--;
            /*       */
        }
        /* 22662 */
        int i = paramInt2 * 3 / 4;
        /* 22663 */
        byte[] arrayOfByte = new byte[i];
        /* 22664 */
        int j = paramInt1;
        /* 22665 */
        int k = paramInt1 + paramInt2;
        /* 22666 */
        byte b = 0;
        /* 22667 */
        while (j < k) {
            /* 22668 */
            char c1 = paramArrayOfchar[j++];
            /* 22669 */
            char c2 = paramArrayOfchar[j++];
            /* 22670 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22671 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22673 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22674 */
                return new byte[0];
                /*       */
            }
            /* 22676 */
            byte b3 = au[c1];
            /* 22677 */
            byte b4 = au[c2];
            /* 22678 */
            byte b5 = au[b1];
            /* 22679 */
            byte b6 = au[b2];
            /* 22680 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22681 */
                return new byte[0];
                /*       */
            }
            /* 22683 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22684 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22685 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22686 */
            arrayOfByte[b++] = (byte) m;
            /* 22687 */
            if (b < i) {
                /* 22688 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22690 */
            if (b < i) {
                /* 22691 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22694 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hw(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22698 */
        if (paramInt2 % 4 != 0) {
            /* 22699 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22702 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22703 */
            paramInt2--;
            /*       */
        }
        /* 22705 */
        int i = paramInt2 * 3 / 4;
        /* 22706 */
        byte[] arrayOfByte = new byte[i];
        /* 22707 */
        int j = paramInt1;
        /* 22708 */
        int k = paramInt1 + paramInt2;
        /* 22709 */
        byte b = 0;
        /* 22710 */
        while (j < k) {
            /* 22711 */
            char c1 = paramArrayOfchar[j++];
            /* 22712 */
            char c2 = paramArrayOfchar[j++];
            /* 22713 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22714 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22716 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22717 */
                return new byte[0];
                /*       */
            }
            /* 22719 */
            byte b3 = au[c1];
            /* 22720 */
            byte b4 = au[c2];
            /* 22721 */
            byte b5 = au[b1];
            /* 22722 */
            byte b6 = au[b2];
            /* 22723 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22724 */
                return new byte[0];
                /*       */
            }
            /* 22726 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22727 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22728 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22729 */
            arrayOfByte[b++] = (byte) m;
            /* 22730 */
            if (b < i) {
                /* 22731 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22733 */
            if (b < i) {
                /* 22734 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22737 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hx(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22741 */
        if (paramInt2 % 4 != 0) {
            /* 22742 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22745 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22746 */
            paramInt2--;
            /*       */
        }
        /* 22748 */
        int i = paramInt2 * 3 / 4;
        /* 22749 */
        byte[] arrayOfByte = new byte[i];
        /* 22750 */
        int j = paramInt1;
        /* 22751 */
        int k = paramInt1 + paramInt2;
        /* 22752 */
        byte b = 0;
        /* 22753 */
        while (j < k) {
            /* 22754 */
            char c1 = paramArrayOfchar[j++];
            /* 22755 */
            char c2 = paramArrayOfchar[j++];
            /* 22756 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22757 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22759 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22760 */
                return new byte[0];
                /*       */
            }
            /* 22762 */
            byte b3 = au[c1];
            /* 22763 */
            byte b4 = au[c2];
            /* 22764 */
            byte b5 = au[b1];
            /* 22765 */
            byte b6 = au[b2];
            /* 22766 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22767 */
                return new byte[0];
                /*       */
            }
            /* 22769 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22770 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22771 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22772 */
            arrayOfByte[b++] = (byte) m;
            /* 22773 */
            if (b < i) {
                /* 22774 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22776 */
            if (b < i) {
                /* 22777 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22780 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hy(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22784 */
        if (paramInt2 % 4 != 0) {
            /* 22785 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22788 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22789 */
            paramInt2--;
            /*       */
        }
        /* 22791 */
        int i = paramInt2 * 3 / 4;
        /* 22792 */
        byte[] arrayOfByte = new byte[i];
        /* 22793 */
        int j = paramInt1;
        /* 22794 */
        int k = paramInt1 + paramInt2;
        /* 22795 */
        byte b = 0;
        /* 22796 */
        while (j < k) {
            /* 22797 */
            char c1 = paramArrayOfchar[j++];
            /* 22798 */
            char c2 = paramArrayOfchar[j++];
            /* 22799 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22800 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22802 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22803 */
                return new byte[0];
                /*       */
            }
            /* 22805 */
            byte b3 = au[c1];
            /* 22806 */
            byte b4 = au[c2];
            /* 22807 */
            byte b5 = au[b1];
            /* 22808 */
            byte b6 = au[b2];
            /* 22809 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22810 */
                return new byte[0];
                /*       */
            }
            /* 22812 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22813 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22814 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22815 */
            arrayOfByte[b++] = (byte) m;
            /* 22816 */
            if (b < i) {
                /* 22817 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22819 */
            if (b < i) {
                /* 22820 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22823 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hz(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22827 */
        if (paramInt2 % 4 != 0) {
            /* 22828 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22831 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22832 */
            paramInt2--;
            /*       */
        }
        /* 22834 */
        int i = paramInt2 * 3 / 4;
        /* 22835 */
        byte[] arrayOfByte = new byte[i];
        /* 22836 */
        int j = paramInt1;
        /* 22837 */
        int k = paramInt1 + paramInt2;
        /* 22838 */
        byte b = 0;
        /* 22839 */
        while (j < k) {
            /* 22840 */
            char c1 = paramArrayOfchar[j++];
            /* 22841 */
            char c2 = paramArrayOfchar[j++];
            /* 22842 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22843 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22845 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22846 */
                return new byte[0];
                /*       */
            }
            /* 22848 */
            byte b3 = au[c1];
            /* 22849 */
            byte b4 = au[c2];
            /* 22850 */
            byte b5 = au[b1];
            /* 22851 */
            byte b6 = au[b2];
            /* 22852 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22853 */
                return new byte[0];
                /*       */
            }
            /* 22855 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22856 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22857 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22858 */
            arrayOfByte[b++] = (byte) m;
            /* 22859 */
            if (b < i) {
                /* 22860 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22862 */
            if (b < i) {
                /* 22863 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22866 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hA(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22870 */
        if (paramInt2 % 4 != 0) {
            /* 22871 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22874 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22875 */
            paramInt2--;
            /*       */
        }
        /* 22877 */
        int i = paramInt2 * 3 / 4;
        /* 22878 */
        byte[] arrayOfByte = new byte[i];
        /* 22879 */
        int j = paramInt1;
        /* 22880 */
        int k = paramInt1 + paramInt2;
        /* 22881 */
        byte b = 0;
        /* 22882 */
        while (j < k) {
            /* 22883 */
            char c1 = paramArrayOfchar[j++];
            /* 22884 */
            char c2 = paramArrayOfchar[j++];
            /* 22885 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22886 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22888 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22889 */
                return new byte[0];
                /*       */
            }
            /* 22891 */
            byte b3 = au[c1];
            /* 22892 */
            byte b4 = au[c2];
            /* 22893 */
            byte b5 = au[b1];
            /* 22894 */
            byte b6 = au[b2];
            /* 22895 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22896 */
                return new byte[0];
                /*       */
            }
            /* 22898 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22899 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22900 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22901 */
            arrayOfByte[b++] = (byte) m;
            /* 22902 */
            if (b < i) {
                /* 22903 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22905 */
            if (b < i) {
                /* 22906 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22909 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hB(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22913 */
        if (paramInt2 % 4 != 0) {
            /* 22914 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22917 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22918 */
            paramInt2--;
            /*       */
        }
        /* 22920 */
        int i = paramInt2 * 3 / 4;
        /* 22921 */
        byte[] arrayOfByte = new byte[i];
        /* 22922 */
        int j = paramInt1;
        /* 22923 */
        int k = paramInt1 + paramInt2;
        /* 22924 */
        byte b = 0;
        /* 22925 */
        while (j < k) {
            /* 22926 */
            char c1 = paramArrayOfchar[j++];
            /* 22927 */
            char c2 = paramArrayOfchar[j++];
            /* 22928 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22929 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22931 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22932 */
                return new byte[0];
                /*       */
            }
            /* 22934 */
            byte b3 = au[c1];
            /* 22935 */
            byte b4 = au[c2];
            /* 22936 */
            byte b5 = au[b1];
            /* 22937 */
            byte b6 = au[b2];
            /* 22938 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22939 */
                return new byte[0];
                /*       */
            }
            /* 22941 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22942 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22943 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22944 */
            arrayOfByte[b++] = (byte) m;
            /* 22945 */
            if (b < i) {
                /* 22946 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22948 */
            if (b < i) {
                /* 22949 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22952 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hC(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22956 */
        if (paramInt2 % 4 != 0) {
            /* 22957 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 22960 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 22961 */
            paramInt2--;
            /*       */
        }
        /* 22963 */
        int i = paramInt2 * 3 / 4;
        /* 22964 */
        byte[] arrayOfByte = new byte[i];
        /* 22965 */
        int j = paramInt1;
        /* 22966 */
        int k = paramInt1 + paramInt2;
        /* 22967 */
        byte b = 0;
        /* 22968 */
        while (j < k) {
            /* 22969 */
            char c1 = paramArrayOfchar[j++];
            /* 22970 */
            char c2 = paramArrayOfchar[j++];
            /* 22971 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 22972 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 22974 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 22975 */
                return new byte[0];
                /*       */
            }
            /* 22977 */
            byte b3 = au[c1];
            /* 22978 */
            byte b4 = au[c2];
            /* 22979 */
            byte b5 = au[b1];
            /* 22980 */
            byte b6 = au[b2];
            /* 22981 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 22982 */
                return new byte[0];
                /*       */
            }
            /* 22984 */
            int m = b3 << 2 | b4 >>> 4;
            /* 22985 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 22986 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 22987 */
            arrayOfByte[b++] = (byte) m;
            /* 22988 */
            if (b < i) {
                /* 22989 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 22991 */
            if (b < i) {
                /* 22992 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 22995 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hD(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 22999 */
        if (paramInt2 % 4 != 0) {
            /* 23000 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23003 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23004 */
            paramInt2--;
            /*       */
        }
        /* 23006 */
        int i = paramInt2 * 3 / 4;
        /* 23007 */
        byte[] arrayOfByte = new byte[i];
        /* 23008 */
        int j = paramInt1;
        /* 23009 */
        int k = paramInt1 + paramInt2;
        /* 23010 */
        byte b = 0;
        /* 23011 */
        while (j < k) {
            /* 23012 */
            char c1 = paramArrayOfchar[j++];
            /* 23013 */
            char c2 = paramArrayOfchar[j++];
            /* 23014 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23015 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23017 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23018 */
                return new byte[0];
                /*       */
            }
            /* 23020 */
            byte b3 = au[c1];
            /* 23021 */
            byte b4 = au[c2];
            /* 23022 */
            byte b5 = au[b1];
            /* 23023 */
            byte b6 = au[b2];
            /* 23024 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23025 */
                return new byte[0];
                /*       */
            }
            /* 23027 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23028 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23029 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23030 */
            arrayOfByte[b++] = (byte) m;
            /* 23031 */
            if (b < i) {
                /* 23032 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23034 */
            if (b < i) {
                /* 23035 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23038 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hE(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23042 */
        if (paramInt2 % 4 != 0) {
            /* 23043 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23046 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23047 */
            paramInt2--;
            /*       */
        }
        /* 23049 */
        int i = paramInt2 * 3 / 4;
        /* 23050 */
        byte[] arrayOfByte = new byte[i];
        /* 23051 */
        int j = paramInt1;
        /* 23052 */
        int k = paramInt1 + paramInt2;
        /* 23053 */
        byte b = 0;
        /* 23054 */
        while (j < k) {
            /* 23055 */
            char c1 = paramArrayOfchar[j++];
            /* 23056 */
            char c2 = paramArrayOfchar[j++];
            /* 23057 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23058 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23060 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23061 */
                return new byte[0];
                /*       */
            }
            /* 23063 */
            byte b3 = au[c1];
            /* 23064 */
            byte b4 = au[c2];
            /* 23065 */
            byte b5 = au[b1];
            /* 23066 */
            byte b6 = au[b2];
            /* 23067 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23068 */
                return new byte[0];
                /*       */
            }
            /* 23070 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23071 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23072 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23073 */
            arrayOfByte[b++] = (byte) m;
            /* 23074 */
            if (b < i) {
                /* 23075 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23077 */
            if (b < i) {
                /* 23078 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23081 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hF(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23085 */
        if (paramInt2 % 4 != 0) {
            /* 23086 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23089 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23090 */
            paramInt2--;
            /*       */
        }
        /* 23092 */
        int i = paramInt2 * 3 / 4;
        /* 23093 */
        byte[] arrayOfByte = new byte[i];
        /* 23094 */
        int j = paramInt1;
        /* 23095 */
        int k = paramInt1 + paramInt2;
        /* 23096 */
        byte b = 0;
        /* 23097 */
        while (j < k) {
            /* 23098 */
            char c1 = paramArrayOfchar[j++];
            /* 23099 */
            char c2 = paramArrayOfchar[j++];
            /* 23100 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23101 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23103 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23104 */
                return new byte[0];
                /*       */
            }
            /* 23106 */
            byte b3 = au[c1];
            /* 23107 */
            byte b4 = au[c2];
            /* 23108 */
            byte b5 = au[b1];
            /* 23109 */
            byte b6 = au[b2];
            /* 23110 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23111 */
                return new byte[0];
                /*       */
            }
            /* 23113 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23114 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23115 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23116 */
            arrayOfByte[b++] = (byte) m;
            /* 23117 */
            if (b < i) {
                /* 23118 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23120 */
            if (b < i) {
                /* 23121 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23124 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hG(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23128 */
        if (paramInt2 % 4 != 0) {
            /* 23129 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23132 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23133 */
            paramInt2--;
            /*       */
        }
        /* 23135 */
        int i = paramInt2 * 3 / 4;
        /* 23136 */
        byte[] arrayOfByte = new byte[i];
        /* 23137 */
        int j = paramInt1;
        /* 23138 */
        int k = paramInt1 + paramInt2;
        /* 23139 */
        byte b = 0;
        /* 23140 */
        while (j < k) {
            /* 23141 */
            char c1 = paramArrayOfchar[j++];
            /* 23142 */
            char c2 = paramArrayOfchar[j++];
            /* 23143 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23144 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23146 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23147 */
                return new byte[0];
                /*       */
            }
            /* 23149 */
            byte b3 = au[c1];
            /* 23150 */
            byte b4 = au[c2];
            /* 23151 */
            byte b5 = au[b1];
            /* 23152 */
            byte b6 = au[b2];
            /* 23153 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23154 */
                return new byte[0];
                /*       */
            }
            /* 23156 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23157 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23158 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23159 */
            arrayOfByte[b++] = (byte) m;
            /* 23160 */
            if (b < i) {
                /* 23161 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23163 */
            if (b < i) {
                /* 23164 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23167 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hH(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23171 */
        if (paramInt2 % 4 != 0) {
            /* 23172 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23175 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23176 */
            paramInt2--;
            /*       */
        }
        /* 23178 */
        int i = paramInt2 * 3 / 4;
        /* 23179 */
        byte[] arrayOfByte = new byte[i];
        /* 23180 */
        int j = paramInt1;
        /* 23181 */
        int k = paramInt1 + paramInt2;
        /* 23182 */
        byte b = 0;
        /* 23183 */
        while (j < k) {
            /* 23184 */
            char c1 = paramArrayOfchar[j++];
            /* 23185 */
            char c2 = paramArrayOfchar[j++];
            /* 23186 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23187 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23189 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23190 */
                return new byte[0];
                /*       */
            }
            /* 23192 */
            byte b3 = au[c1];
            /* 23193 */
            byte b4 = au[c2];
            /* 23194 */
            byte b5 = au[b1];
            /* 23195 */
            byte b6 = au[b2];
            /* 23196 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23197 */
                return new byte[0];
                /*       */
            }
            /* 23199 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23200 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23201 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23202 */
            arrayOfByte[b++] = (byte) m;
            /* 23203 */
            if (b < i) {
                /* 23204 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23206 */
            if (b < i) {
                /* 23207 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23210 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hI(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23214 */
        if (paramInt2 % 4 != 0) {
            /* 23215 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23218 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23219 */
            paramInt2--;
            /*       */
        }
        /* 23221 */
        int i = paramInt2 * 3 / 4;
        /* 23222 */
        byte[] arrayOfByte = new byte[i];
        /* 23223 */
        int j = paramInt1;
        /* 23224 */
        int k = paramInt1 + paramInt2;
        /* 23225 */
        byte b = 0;
        /* 23226 */
        while (j < k) {
            /* 23227 */
            char c1 = paramArrayOfchar[j++];
            /* 23228 */
            char c2 = paramArrayOfchar[j++];
            /* 23229 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23230 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23232 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23233 */
                return new byte[0];
                /*       */
            }
            /* 23235 */
            byte b3 = au[c1];
            /* 23236 */
            byte b4 = au[c2];
            /* 23237 */
            byte b5 = au[b1];
            /* 23238 */
            byte b6 = au[b2];
            /* 23239 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23240 */
                return new byte[0];
                /*       */
            }
            /* 23242 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23243 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23244 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23245 */
            arrayOfByte[b++] = (byte) m;
            /* 23246 */
            if (b < i) {
                /* 23247 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23249 */
            if (b < i) {
                /* 23250 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23253 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hJ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23257 */
        if (paramInt2 % 4 != 0) {
            /* 23258 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23261 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23262 */
            paramInt2--;
            /*       */
        }
        /* 23264 */
        int i = paramInt2 * 3 / 4;
        /* 23265 */
        byte[] arrayOfByte = new byte[i];
        /* 23266 */
        int j = paramInt1;
        /* 23267 */
        int k = paramInt1 + paramInt2;
        /* 23268 */
        byte b = 0;
        /* 23269 */
        while (j < k) {
            /* 23270 */
            char c1 = paramArrayOfchar[j++];
            /* 23271 */
            char c2 = paramArrayOfchar[j++];
            /* 23272 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23273 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23275 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23276 */
                return new byte[0];
                /*       */
            }
            /* 23278 */
            byte b3 = au[c1];
            /* 23279 */
            byte b4 = au[c2];
            /* 23280 */
            byte b5 = au[b1];
            /* 23281 */
            byte b6 = au[b2];
            /* 23282 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23283 */
                return new byte[0];
                /*       */
            }
            /* 23285 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23286 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23287 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23288 */
            arrayOfByte[b++] = (byte) m;
            /* 23289 */
            if (b < i) {
                /* 23290 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23292 */
            if (b < i) {
                /* 23293 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23296 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hK(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23300 */
        if (paramInt2 % 4 != 0) {
            /* 23301 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23304 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23305 */
            paramInt2--;
            /*       */
        }
        /* 23307 */
        int i = paramInt2 * 3 / 4;
        /* 23308 */
        byte[] arrayOfByte = new byte[i];
        /* 23309 */
        int j = paramInt1;
        /* 23310 */
        int k = paramInt1 + paramInt2;
        /* 23311 */
        byte b = 0;
        /* 23312 */
        while (j < k) {
            /* 23313 */
            char c1 = paramArrayOfchar[j++];
            /* 23314 */
            char c2 = paramArrayOfchar[j++];
            /* 23315 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23316 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23318 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23319 */
                return new byte[0];
                /*       */
            }
            /* 23321 */
            byte b3 = au[c1];
            /* 23322 */
            byte b4 = au[c2];
            /* 23323 */
            byte b5 = au[b1];
            /* 23324 */
            byte b6 = au[b2];
            /* 23325 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23326 */
                return new byte[0];
                /*       */
            }
            /* 23328 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23329 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23330 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23331 */
            arrayOfByte[b++] = (byte) m;
            /* 23332 */
            if (b < i) {
                /* 23333 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23335 */
            if (b < i) {
                /* 23336 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23339 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hL(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23343 */
        if (paramInt2 % 4 != 0) {
            /* 23344 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23347 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23348 */
            paramInt2--;
            /*       */
        }
        /* 23350 */
        int i = paramInt2 * 3 / 4;
        /* 23351 */
        byte[] arrayOfByte = new byte[i];
        /* 23352 */
        int j = paramInt1;
        /* 23353 */
        int k = paramInt1 + paramInt2;
        /* 23354 */
        byte b = 0;
        /* 23355 */
        while (j < k) {
            /* 23356 */
            char c1 = paramArrayOfchar[j++];
            /* 23357 */
            char c2 = paramArrayOfchar[j++];
            /* 23358 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23359 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23361 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23362 */
                return new byte[0];
                /*       */
            }
            /* 23364 */
            byte b3 = au[c1];
            /* 23365 */
            byte b4 = au[c2];
            /* 23366 */
            byte b5 = au[b1];
            /* 23367 */
            byte b6 = au[b2];
            /* 23368 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23369 */
                return new byte[0];
                /*       */
            }
            /* 23371 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23372 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23373 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23374 */
            arrayOfByte[b++] = (byte) m;
            /* 23375 */
            if (b < i) {
                /* 23376 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23378 */
            if (b < i) {
                /* 23379 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23382 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hM(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23386 */
        if (paramInt2 % 4 != 0) {
            /* 23387 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23390 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23391 */
            paramInt2--;
            /*       */
        }
        /* 23393 */
        int i = paramInt2 * 3 / 4;
        /* 23394 */
        byte[] arrayOfByte = new byte[i];
        /* 23395 */
        int j = paramInt1;
        /* 23396 */
        int k = paramInt1 + paramInt2;
        /* 23397 */
        byte b = 0;
        /* 23398 */
        while (j < k) {
            /* 23399 */
            char c1 = paramArrayOfchar[j++];
            /* 23400 */
            char c2 = paramArrayOfchar[j++];
            /* 23401 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23402 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23404 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23405 */
                return new byte[0];
                /*       */
            }
            /* 23407 */
            byte b3 = au[c1];
            /* 23408 */
            byte b4 = au[c2];
            /* 23409 */
            byte b5 = au[b1];
            /* 23410 */
            byte b6 = au[b2];
            /* 23411 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23412 */
                return new byte[0];
                /*       */
            }
            /* 23414 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23415 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23416 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23417 */
            arrayOfByte[b++] = (byte) m;
            /* 23418 */
            if (b < i) {
                /* 23419 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23421 */
            if (b < i) {
                /* 23422 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23425 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hN(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23429 */
        if (paramInt2 % 4 != 0) {
            /* 23430 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23433 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23434 */
            paramInt2--;
            /*       */
        }
        /* 23436 */
        int i = paramInt2 * 3 / 4;
        /* 23437 */
        byte[] arrayOfByte = new byte[i];
        /* 23438 */
        int j = paramInt1;
        /* 23439 */
        int k = paramInt1 + paramInt2;
        /* 23440 */
        byte b = 0;
        /* 23441 */
        while (j < k) {
            /* 23442 */
            char c1 = paramArrayOfchar[j++];
            /* 23443 */
            char c2 = paramArrayOfchar[j++];
            /* 23444 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23445 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23447 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23448 */
                return new byte[0];
                /*       */
            }
            /* 23450 */
            byte b3 = au[c1];
            /* 23451 */
            byte b4 = au[c2];
            /* 23452 */
            byte b5 = au[b1];
            /* 23453 */
            byte b6 = au[b2];
            /* 23454 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23455 */
                return new byte[0];
                /*       */
            }
            /* 23457 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23458 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23459 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23460 */
            arrayOfByte[b++] = (byte) m;
            /* 23461 */
            if (b < i) {
                /* 23462 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23464 */
            if (b < i) {
                /* 23465 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23468 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hO(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23472 */
        if (paramInt2 % 4 != 0) {
            /* 23473 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23476 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23477 */
            paramInt2--;
            /*       */
        }
        /* 23479 */
        int i = paramInt2 * 3 / 4;
        /* 23480 */
        byte[] arrayOfByte = new byte[i];
        /* 23481 */
        int j = paramInt1;
        /* 23482 */
        int k = paramInt1 + paramInt2;
        /* 23483 */
        byte b = 0;
        /* 23484 */
        while (j < k) {
            /* 23485 */
            char c1 = paramArrayOfchar[j++];
            /* 23486 */
            char c2 = paramArrayOfchar[j++];
            /* 23487 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23488 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23490 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23491 */
                return new byte[0];
                /*       */
            }
            /* 23493 */
            byte b3 = au[c1];
            /* 23494 */
            byte b4 = au[c2];
            /* 23495 */
            byte b5 = au[b1];
            /* 23496 */
            byte b6 = au[b2];
            /* 23497 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23498 */
                return new byte[0];
                /*       */
            }
            /* 23500 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23501 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23502 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23503 */
            arrayOfByte[b++] = (byte) m;
            /* 23504 */
            if (b < i) {
                /* 23505 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23507 */
            if (b < i) {
                /* 23508 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23511 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hP(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23515 */
        if (paramInt2 % 4 != 0) {
            /* 23516 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23519 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23520 */
            paramInt2--;
            /*       */
        }
        /* 23522 */
        int i = paramInt2 * 3 / 4;
        /* 23523 */
        byte[] arrayOfByte = new byte[i];
        /* 23524 */
        int j = paramInt1;
        /* 23525 */
        int k = paramInt1 + paramInt2;
        /* 23526 */
        byte b = 0;
        /* 23527 */
        while (j < k) {
            /* 23528 */
            char c1 = paramArrayOfchar[j++];
            /* 23529 */
            char c2 = paramArrayOfchar[j++];
            /* 23530 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23531 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23533 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23534 */
                return new byte[0];
                /*       */
            }
            /* 23536 */
            byte b3 = au[c1];
            /* 23537 */
            byte b4 = au[c2];
            /* 23538 */
            byte b5 = au[b1];
            /* 23539 */
            byte b6 = au[b2];
            /* 23540 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23541 */
                return new byte[0];
                /*       */
            }
            /* 23543 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23544 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23545 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23546 */
            arrayOfByte[b++] = (byte) m;
            /* 23547 */
            if (b < i) {
                /* 23548 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23550 */
            if (b < i) {
                /* 23551 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23554 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hQ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23558 */
        if (paramInt2 % 4 != 0) {
            /* 23559 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23562 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23563 */
            paramInt2--;
            /*       */
        }
        /* 23565 */
        int i = paramInt2 * 3 / 4;
        /* 23566 */
        byte[] arrayOfByte = new byte[i];
        /* 23567 */
        int j = paramInt1;
        /* 23568 */
        int k = paramInt1 + paramInt2;
        /* 23569 */
        byte b = 0;
        /* 23570 */
        while (j < k) {
            /* 23571 */
            char c1 = paramArrayOfchar[j++];
            /* 23572 */
            char c2 = paramArrayOfchar[j++];
            /* 23573 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23574 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23576 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23577 */
                return new byte[0];
                /*       */
            }
            /* 23579 */
            byte b3 = au[c1];
            /* 23580 */
            byte b4 = au[c2];
            /* 23581 */
            byte b5 = au[b1];
            /* 23582 */
            byte b6 = au[b2];
            /* 23583 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23584 */
                return new byte[0];
                /*       */
            }
            /* 23586 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23587 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23588 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23589 */
            arrayOfByte[b++] = (byte) m;
            /* 23590 */
            if (b < i) {
                /* 23591 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23593 */
            if (b < i) {
                /* 23594 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23597 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hR(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23601 */
        if (paramInt2 % 4 != 0) {
            /* 23602 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23605 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23606 */
            paramInt2--;
            /*       */
        }
        /* 23608 */
        int i = paramInt2 * 3 / 4;
        /* 23609 */
        byte[] arrayOfByte = new byte[i];
        /* 23610 */
        int j = paramInt1;
        /* 23611 */
        int k = paramInt1 + paramInt2;
        /* 23612 */
        byte b = 0;
        /* 23613 */
        while (j < k) {
            /* 23614 */
            char c1 = paramArrayOfchar[j++];
            /* 23615 */
            char c2 = paramArrayOfchar[j++];
            /* 23616 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23617 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23619 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23620 */
                return new byte[0];
                /*       */
            }
            /* 23622 */
            byte b3 = au[c1];
            /* 23623 */
            byte b4 = au[c2];
            /* 23624 */
            byte b5 = au[b1];
            /* 23625 */
            byte b6 = au[b2];
            /* 23626 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23627 */
                return new byte[0];
                /*       */
            }
            /* 23629 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23630 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23631 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23632 */
            arrayOfByte[b++] = (byte) m;
            /* 23633 */
            if (b < i) {
                /* 23634 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23636 */
            if (b < i) {
                /* 23637 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23640 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hS(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23644 */
        if (paramInt2 % 4 != 0) {
            /* 23645 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23648 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23649 */
            paramInt2--;
            /*       */
        }
        /* 23651 */
        int i = paramInt2 * 3 / 4;
        /* 23652 */
        byte[] arrayOfByte = new byte[i];
        /* 23653 */
        int j = paramInt1;
        /* 23654 */
        int k = paramInt1 + paramInt2;
        /* 23655 */
        byte b = 0;
        /* 23656 */
        while (j < k) {
            /* 23657 */
            char c1 = paramArrayOfchar[j++];
            /* 23658 */
            char c2 = paramArrayOfchar[j++];
            /* 23659 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23660 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23662 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23663 */
                return new byte[0];
                /*       */
            }
            /* 23665 */
            byte b3 = au[c1];
            /* 23666 */
            byte b4 = au[c2];
            /* 23667 */
            byte b5 = au[b1];
            /* 23668 */
            byte b6 = au[b2];
            /* 23669 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23670 */
                return new byte[0];
                /*       */
            }
            /* 23672 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23673 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23674 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23675 */
            arrayOfByte[b++] = (byte) m;
            /* 23676 */
            if (b < i) {
                /* 23677 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23679 */
            if (b < i) {
                /* 23680 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23683 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hT(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23687 */
        if (paramInt2 % 4 != 0) {
            /* 23688 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23691 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23692 */
            paramInt2--;
            /*       */
        }
        /* 23694 */
        int i = paramInt2 * 3 / 4;
        /* 23695 */
        byte[] arrayOfByte = new byte[i];
        /* 23696 */
        int j = paramInt1;
        /* 23697 */
        int k = paramInt1 + paramInt2;
        /* 23698 */
        byte b = 0;
        /* 23699 */
        while (j < k) {
            /* 23700 */
            char c1 = paramArrayOfchar[j++];
            /* 23701 */
            char c2 = paramArrayOfchar[j++];
            /* 23702 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23703 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23705 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23706 */
                return new byte[0];
                /*       */
            }
            /* 23708 */
            byte b3 = au[c1];
            /* 23709 */
            byte b4 = au[c2];
            /* 23710 */
            byte b5 = au[b1];
            /* 23711 */
            byte b6 = au[b2];
            /* 23712 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23713 */
                return new byte[0];
                /*       */
            }
            /* 23715 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23716 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23717 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23718 */
            arrayOfByte[b++] = (byte) m;
            /* 23719 */
            if (b < i) {
                /* 23720 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23722 */
            if (b < i) {
                /* 23723 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23726 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] hU(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 23730 */
        if (paramInt2 % 4 != 0) {
            /* 23731 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 23734 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 23735 */
            paramInt2--;
            /*       */
        }
        /* 23737 */
        int i = paramInt2 * 3 / 4;
        /* 23738 */
        byte[] arrayOfByte = new byte[i];
        /* 23739 */
        int j = paramInt1;
        /* 23740 */
        int k = paramInt1 + paramInt2;
        /* 23741 */
        byte b = 0;
        /* 23742 */
        while (j < k) {
            /* 23743 */
            char c1 = paramArrayOfchar[j++];
            /* 23744 */
            char c2 = paramArrayOfchar[j++];
            /* 23745 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 23746 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 23748 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 23749 */
                return new byte[0];
                /*       */
            }
            /* 23751 */
            byte b3 = au[c1];
            /* 23752 */
            byte b4 = au[c2];
            /* 23753 */
            byte b5 = au[b1];
            /* 23754 */
            byte b6 = au[b2];
            /* 23755 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 23756 */
                return new byte[0];
                /*       */
            }
            /* 23758 */
            int m = b3 << 2 | b4 >>> 4;
            /* 23759 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 23760 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 23761 */
            arrayOfByte[b++] = (byte) m;
            /* 23762 */
            if (b < i) {
                /* 23763 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 23765 */
            if (b < i) {
                /* 23766 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 23769 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */   static {
        /* 23773 */
        b = 0;
        /* 23774 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 23775 */
            v[b++] = c;
            /*       */
        }
        /* 23777 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 23778 */
            v[b++] = c;
            /*       */
        }
        /* 23780 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 23781 */
            v[b++] = c;
            /*       */
        }
        /* 23783 */
        v[b++] = '+';
        /* 23784 */
        v[b++] = '/';
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /* 25509 */
        b = 0;
        /* 25510 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 25511 */
            w[b++] = c;
            /*       */
        }
        /* 25513 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 25514 */
            w[b++] = c;
            /*       */
        }
        /* 25516 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 25517 */
            w[b++] = c;
            /*       */
        }
        /* 25519 */
        w[b++] = '+';
        /* 25520 */
        w[b++] = '/';
        /*       */
    }

    private static byte[] hV(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] hW(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] hX(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] hY(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] hZ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ia(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ib(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ic(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] id(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ie(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ifz(
    char[] paramArrayOfchar, int paramInt1, int paramInt2)

    {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ig(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ih(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ii(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ij(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ik(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] il(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] im(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] in(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] io(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ip(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] iq(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ir(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] is(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] it(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] iu(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] iv(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] iw(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ix(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] iy(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] iz(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] iA(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] iB(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] iC(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] iD(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] iE(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] iF(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] iG(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    /*       */
    private static byte[] iH(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    /*       */
    private static byte[] iI(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    /* 25524 */
    private static byte[] iJ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) {
            /* 25525 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 25528 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 25529 */
            paramInt2--;
            /*       */
        }
        /* 25531 */
        int i = paramInt2 * 3 / 4;
        /* 25532 */
        byte[] arrayOfByte = new byte[i];
        /* 25533 */
        int j = paramInt1;
        /* 25534 */
        int k = paramInt1 + paramInt2;
        /* 25535 */
        byte b = 0;
        /* 25536 */
        while (j < k) {
            /* 25537 */
            char c1 = paramArrayOfchar[j++];
            /* 25538 */
            char c2 = paramArrayOfchar[j++];
            /* 25539 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 25540 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 25542 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 25543 */
                return new byte[0];
                /*       */
            }
            /* 25545 */
            byte b3 = au[c1];
            /* 25546 */
            byte b4 = au[c2];
            /* 25547 */
            byte b5 = au[b1];
            /* 25548 */
            byte b6 = au[b2];
            /* 25549 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 25550 */
                return new byte[0];
                /*       */
            }
            /* 25552 */
            int m = b3 << 2 | b4 >>> 4;
            /* 25553 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 25554 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 25555 */
            arrayOfByte[b++] = (byte) m;
            /* 25556 */
            if (b < i) {
                /* 25557 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 25559 */
            if (b < i) {
                /* 25560 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 25563 */
        return arrayOfByte;
    }

    /*       */
    /*       */
    /*       */
    private static byte[] iK(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 25567 */
        if (paramInt2 % 4 != 0) {
            /* 25568 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 25571 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 25572 */
            paramInt2--;
            /*       */
        }
        /* 25574 */
        int i = paramInt2 * 3 / 4;
        /* 25575 */
        byte[] arrayOfByte = new byte[i];
        /* 25576 */
        int j = paramInt1;
        /* 25577 */
        int k = paramInt1 + paramInt2;
        /* 25578 */
        byte b = 0;
        /* 25579 */
        while (j < k) {
            /* 25580 */
            char c1 = paramArrayOfchar[j++];
            /* 25581 */
            char c2 = paramArrayOfchar[j++];
            /* 25582 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 25583 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 25585 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 25586 */
                return new byte[0];
                /*       */
            }
            /* 25588 */
            byte b3 = au[c1];
            /* 25589 */
            byte b4 = au[c2];
            /* 25590 */
            byte b5 = au[b1];
            /* 25591 */
            byte b6 = au[b2];
            /* 25592 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 25593 */
                return new byte[0];
                /*       */
            }
            /* 25595 */
            int m = b3 << 2 | b4 >>> 4;
            /* 25596 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 25597 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 25598 */
            arrayOfByte[b++] = (byte) m;
            /* 25599 */
            if (b < i) {
                /* 25600 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 25602 */
            if (b < i) {
                /* 25603 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 25606 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] iL(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 25610 */
        if (paramInt2 % 4 != 0) {
            /* 25611 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 25614 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 25615 */
            paramInt2--;
            /*       */
        }
        /* 25617 */
        int i = paramInt2 * 3 / 4;
        /* 25618 */
        byte[] arrayOfByte = new byte[i];
        /* 25619 */
        int j = paramInt1;
        /* 25620 */
        int k = paramInt1 + paramInt2;
        /* 25621 */
        byte b = 0;
        /* 25622 */
        while (j < k) {
            /* 25623 */
            char c1 = paramArrayOfchar[j++];
            /* 25624 */
            char c2 = paramArrayOfchar[j++];
            /* 25625 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 25626 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 25628 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 25629 */
                return new byte[0];
                /*       */
            }
            /* 25631 */
            byte b3 = au[c1];
            /* 25632 */
            byte b4 = au[c2];
            /* 25633 */
            byte b5 = au[b1];
            /* 25634 */
            byte b6 = au[b2];
            /* 25635 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 25636 */
                return new byte[0];
                /*       */
            }
            /* 25638 */
            int m = b3 << 2 | b4 >>> 4;
            /* 25639 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 25640 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 25641 */
            arrayOfByte[b++] = (byte) m;
            /* 25642 */
            if (b < i) {
                /* 25643 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 25645 */
            if (b < i) {
                /* 25646 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 25649 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] iM(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 25653 */
        if (paramInt2 % 4 != 0) {
            /* 25654 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 25657 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 25658 */
            paramInt2--;
            /*       */
        }
        /* 25660 */
        int i = paramInt2 * 3 / 4;
        /* 25661 */
        byte[] arrayOfByte = new byte[i];
        /* 25662 */
        int j = paramInt1;
        /* 25663 */
        int k = paramInt1 + paramInt2;
        /* 25664 */
        byte b = 0;
        /* 25665 */
        while (j < k) {
            /* 25666 */
            char c1 = paramArrayOfchar[j++];
            /* 25667 */
            char c2 = paramArrayOfchar[j++];
            /* 25668 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 25669 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 25671 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 25672 */
                return new byte[0];
                /*       */
            }
            /* 25674 */
            byte b3 = au[c1];
            /* 25675 */
            byte b4 = au[c2];
            /* 25676 */
            byte b5 = au[b1];
            /* 25677 */
            byte b6 = au[b2];
            /* 25678 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 25679 */
                return new byte[0];
                /*       */
            }
            /* 25681 */
            int m = b3 << 2 | b4 >>> 4;
            /* 25682 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 25683 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 25684 */
            arrayOfByte[b++] = (byte) m;
            /* 25685 */
            if (b < i) {
                /* 25686 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 25688 */
            if (b < i) {
                /* 25689 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 25692 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] iN(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 25696 */
        if (paramInt2 % 4 != 0) {
            /* 25697 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 25700 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 25701 */
            paramInt2--;
            /*       */
        }
        /* 25703 */
        int i = paramInt2 * 3 / 4;
        /* 25704 */
        byte[] arrayOfByte = new byte[i];
        /* 25705 */
        int j = paramInt1;
        /* 25706 */
        int k = paramInt1 + paramInt2;
        /* 25707 */
        byte b = 0;
        /* 25708 */
        while (j < k) {
            /* 25709 */
            char c1 = paramArrayOfchar[j++];
            /* 25710 */
            char c2 = paramArrayOfchar[j++];
            /* 25711 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 25712 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 25714 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 25715 */
                return new byte[0];
                /*       */
            }
            /* 25717 */
            byte b3 = au[c1];
            /* 25718 */
            byte b4 = au[c2];
            /* 25719 */
            byte b5 = au[b1];
            /* 25720 */
            byte b6 = au[b2];
            /* 25721 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 25722 */
                return new byte[0];
                /*       */
            }
            /* 25724 */
            int m = b3 << 2 | b4 >>> 4;
            /* 25725 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 25726 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 25727 */
            arrayOfByte[b++] = (byte) m;
            /* 25728 */
            if (b < i) {
                /* 25729 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 25731 */
            if (b < i) {
                /* 25732 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 25735 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] iO(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 25739 */
        if (paramInt2 % 4 != 0) {
            /* 25740 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 25743 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 25744 */
            paramInt2--;
            /*       */
        }
        /* 25746 */
        int i = paramInt2 * 3 / 4;
        /* 25747 */
        byte[] arrayOfByte = new byte[i];
        /* 25748 */
        int j = paramInt1;
        /* 25749 */
        int k = paramInt1 + paramInt2;
        /* 25750 */
        byte b = 0;
        /* 25751 */
        while (j < k) {
            /* 25752 */
            char c1 = paramArrayOfchar[j++];
            /* 25753 */
            char c2 = paramArrayOfchar[j++];
            /* 25754 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 25755 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 25757 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 25758 */
                return new byte[0];
                /*       */
            }
            /* 25760 */
            byte b3 = au[c1];
            /* 25761 */
            byte b4 = au[c2];
            /* 25762 */
            byte b5 = au[b1];
            /* 25763 */
            byte b6 = au[b2];
            /* 25764 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 25765 */
                return new byte[0];
                /*       */
            }
            /* 25767 */
            int m = b3 << 2 | b4 >>> 4;
            /* 25768 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 25769 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 25770 */
            arrayOfByte[b++] = (byte) m;
            /* 25771 */
            if (b < i) {
                /* 25772 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 25774 */
            if (b < i) {
                /* 25775 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 25778 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] iP(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 25782 */
        if (paramInt2 % 4 != 0) {
            /* 25783 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 25786 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 25787 */
            paramInt2--;
            /*       */
        }
        /* 25789 */
        int i = paramInt2 * 3 / 4;
        /* 25790 */
        byte[] arrayOfByte = new byte[i];
        /* 25791 */
        int j = paramInt1;
        /* 25792 */
        int k = paramInt1 + paramInt2;
        /* 25793 */
        byte b = 0;
        /* 25794 */
        while (j < k) {
            /* 25795 */
            char c1 = paramArrayOfchar[j++];
            /* 25796 */
            char c2 = paramArrayOfchar[j++];
            /* 25797 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 25798 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 25800 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 25801 */
                return new byte[0];
                /*       */
            }
            /* 25803 */
            byte b3 = au[c1];
            /* 25804 */
            byte b4 = au[c2];
            /* 25805 */
            byte b5 = au[b1];
            /* 25806 */
            byte b6 = au[b2];
            /* 25807 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 25808 */
                return new byte[0];
                /*       */
            }
            /* 25810 */
            int m = b3 << 2 | b4 >>> 4;
            /* 25811 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 25812 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 25813 */
            arrayOfByte[b++] = (byte) m;
            /* 25814 */
            if (b < i) {
                /* 25815 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 25817 */
            if (b < i) {
                /* 25818 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 25821 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] iQ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 25825 */
        if (paramInt2 % 4 != 0) {
            /* 25826 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 25829 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 25830 */
            paramInt2--;
            /*       */
        }
        /* 25832 */
        int i = paramInt2 * 3 / 4;
        /* 25833 */
        byte[] arrayOfByte = new byte[i];
        /* 25834 */
        int j = paramInt1;
        /* 25835 */
        int k = paramInt1 + paramInt2;
        /* 25836 */
        byte b = 0;
        /* 25837 */
        while (j < k) {
            /* 25838 */
            char c1 = paramArrayOfchar[j++];
            /* 25839 */
            char c2 = paramArrayOfchar[j++];
            /* 25840 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 25841 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 25843 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 25844 */
                return new byte[0];
                /*       */
            }
            /* 25846 */
            byte b3 = au[c1];
            /* 25847 */
            byte b4 = au[c2];
            /* 25848 */
            byte b5 = au[b1];
            /* 25849 */
            byte b6 = au[b2];
            /* 25850 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 25851 */
                return new byte[0];
                /*       */
            }
            /* 25853 */
            int m = b3 << 2 | b4 >>> 4;
            /* 25854 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 25855 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 25856 */
            arrayOfByte[b++] = (byte) m;
            /* 25857 */
            if (b < i) {
                /* 25858 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 25860 */
            if (b < i) {
                /* 25861 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 25864 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] iR(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 25868 */
        if (paramInt2 % 4 != 0) {
            /* 25869 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 25872 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 25873 */
            paramInt2--;
            /*       */
        }
        /* 25875 */
        int i = paramInt2 * 3 / 4;
        /* 25876 */
        byte[] arrayOfByte = new byte[i];
        /* 25877 */
        int j = paramInt1;
        /* 25878 */
        int k = paramInt1 + paramInt2;
        /* 25879 */
        byte b = 0;
        /* 25880 */
        while (j < k) {
            /* 25881 */
            char c1 = paramArrayOfchar[j++];
            /* 25882 */
            char c2 = paramArrayOfchar[j++];
            /* 25883 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 25884 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 25886 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 25887 */
                return new byte[0];
                /*       */
            }
            /* 25889 */
            byte b3 = au[c1];
            /* 25890 */
            byte b4 = au[c2];
            /* 25891 */
            byte b5 = au[b1];
            /* 25892 */
            byte b6 = au[b2];
            /* 25893 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 25894 */
                return new byte[0];
                /*       */
            }
            /* 25896 */
            int m = b3 << 2 | b4 >>> 4;
            /* 25897 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 25898 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 25899 */
            arrayOfByte[b++] = (byte) m;
            /* 25900 */
            if (b < i) {
                /* 25901 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 25903 */
            if (b < i) {
                /* 25904 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 25907 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] iS(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 25911 */
        if (paramInt2 % 4 != 0) {
            /* 25912 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 25915 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 25916 */
            paramInt2--;
            /*       */
        }
        /* 25918 */
        int i = paramInt2 * 3 / 4;
        /* 25919 */
        byte[] arrayOfByte = new byte[i];
        /* 25920 */
        int j = paramInt1;
        /* 25921 */
        int k = paramInt1 + paramInt2;
        /* 25922 */
        byte b = 0;
        /* 25923 */
        while (j < k) {
            /* 25924 */
            char c1 = paramArrayOfchar[j++];
            /* 25925 */
            char c2 = paramArrayOfchar[j++];
            /* 25926 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 25927 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 25929 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 25930 */
                return new byte[0];
                /*       */
            }
            /* 25932 */
            byte b3 = au[c1];
            /* 25933 */
            byte b4 = au[c2];
            /* 25934 */
            byte b5 = au[b1];
            /* 25935 */
            byte b6 = au[b2];
            /* 25936 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 25937 */
                return new byte[0];
                /*       */
            }
            /* 25939 */
            int m = b3 << 2 | b4 >>> 4;
            /* 25940 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 25941 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 25942 */
            arrayOfByte[b++] = (byte) m;
            /* 25943 */
            if (b < i) {
                /* 25944 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 25946 */
            if (b < i) {
                /* 25947 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 25950 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] iT(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 25954 */
        if (paramInt2 % 4 != 0) {
            /* 25955 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 25958 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 25959 */
            paramInt2--;
            /*       */
        }
        /* 25961 */
        int i = paramInt2 * 3 / 4;
        /* 25962 */
        byte[] arrayOfByte = new byte[i];
        /* 25963 */
        int j = paramInt1;
        /* 25964 */
        int k = paramInt1 + paramInt2;
        /* 25965 */
        byte b = 0;
        /* 25966 */
        while (j < k) {
            /* 25967 */
            char c1 = paramArrayOfchar[j++];
            /* 25968 */
            char c2 = paramArrayOfchar[j++];
            /* 25969 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 25970 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 25972 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 25973 */
                return new byte[0];
                /*       */
            }
            /* 25975 */
            byte b3 = au[c1];
            /* 25976 */
            byte b4 = au[c2];
            /* 25977 */
            byte b5 = au[b1];
            /* 25978 */
            byte b6 = au[b2];
            /* 25979 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 25980 */
                return new byte[0];
                /*       */
            }
            /* 25982 */
            int m = b3 << 2 | b4 >>> 4;
            /* 25983 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 25984 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 25985 */
            arrayOfByte[b++] = (byte) m;
            /* 25986 */
            if (b < i) {
                /* 25987 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 25989 */
            if (b < i) {
                /* 25990 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 25993 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] iU(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 25997 */
        if (paramInt2 % 4 != 0) {
            /* 25998 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26001 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26002 */
            paramInt2--;
            /*       */
        }
        /* 26004 */
        int i = paramInt2 * 3 / 4;
        /* 26005 */
        byte[] arrayOfByte = new byte[i];
        /* 26006 */
        int j = paramInt1;
        /* 26007 */
        int k = paramInt1 + paramInt2;
        /* 26008 */
        byte b = 0;
        /* 26009 */
        while (j < k) {
            /* 26010 */
            char c1 = paramArrayOfchar[j++];
            /* 26011 */
            char c2 = paramArrayOfchar[j++];
            /* 26012 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26013 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26015 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26016 */
                return new byte[0];
                /*       */
            }
            /* 26018 */
            byte b3 = au[c1];
            /* 26019 */
            byte b4 = au[c2];
            /* 26020 */
            byte b5 = au[b1];
            /* 26021 */
            byte b6 = au[b2];
            /* 26022 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26023 */
                return new byte[0];
                /*       */
            }
            /* 26025 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26026 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26027 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26028 */
            arrayOfByte[b++] = (byte) m;
            /* 26029 */
            if (b < i) {
                /* 26030 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26032 */
            if (b < i) {
                /* 26033 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26036 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] iV(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26040 */
        if (paramInt2 % 4 != 0) {
            /* 26041 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26044 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26045 */
            paramInt2--;
            /*       */
        }
        /* 26047 */
        int i = paramInt2 * 3 / 4;
        /* 26048 */
        byte[] arrayOfByte = new byte[i];
        /* 26049 */
        int j = paramInt1;
        /* 26050 */
        int k = paramInt1 + paramInt2;
        /* 26051 */
        byte b = 0;
        /* 26052 */
        while (j < k) {
            /* 26053 */
            char c1 = paramArrayOfchar[j++];
            /* 26054 */
            char c2 = paramArrayOfchar[j++];
            /* 26055 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26056 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26058 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26059 */
                return new byte[0];
                /*       */
            }
            /* 26061 */
            byte b3 = au[c1];
            /* 26062 */
            byte b4 = au[c2];
            /* 26063 */
            byte b5 = au[b1];
            /* 26064 */
            byte b6 = au[b2];
            /* 26065 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26066 */
                return new byte[0];
                /*       */
            }
            /* 26068 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26069 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26070 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26071 */
            arrayOfByte[b++] = (byte) m;
            /* 26072 */
            if (b < i) {
                /* 26073 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26075 */
            if (b < i) {
                /* 26076 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26079 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] iW(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26083 */
        if (paramInt2 % 4 != 0) {
            /* 26084 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26087 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26088 */
            paramInt2--;
            /*       */
        }
        /* 26090 */
        int i = paramInt2 * 3 / 4;
        /* 26091 */
        byte[] arrayOfByte = new byte[i];
        /* 26092 */
        int j = paramInt1;
        /* 26093 */
        int k = paramInt1 + paramInt2;
        /* 26094 */
        byte b = 0;
        /* 26095 */
        while (j < k) {
            /* 26096 */
            char c1 = paramArrayOfchar[j++];
            /* 26097 */
            char c2 = paramArrayOfchar[j++];
            /* 26098 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26099 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26101 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26102 */
                return new byte[0];
                /*       */
            }
            /* 26104 */
            byte b3 = au[c1];
            /* 26105 */
            byte b4 = au[c2];
            /* 26106 */
            byte b5 = au[b1];
            /* 26107 */
            byte b6 = au[b2];
            /* 26108 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26109 */
                return new byte[0];
                /*       */
            }
            /* 26111 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26112 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26113 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26114 */
            arrayOfByte[b++] = (byte) m;
            /* 26115 */
            if (b < i) {
                /* 26116 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26118 */
            if (b < i) {
                /* 26119 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26122 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] iX(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26126 */
        if (paramInt2 % 4 != 0) {
            /* 26127 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26130 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26131 */
            paramInt2--;
            /*       */
        }
        /* 26133 */
        int i = paramInt2 * 3 / 4;
        /* 26134 */
        byte[] arrayOfByte = new byte[i];
        /* 26135 */
        int j = paramInt1;
        /* 26136 */
        int k = paramInt1 + paramInt2;
        /* 26137 */
        byte b = 0;
        /* 26138 */
        while (j < k) {
            /* 26139 */
            char c1 = paramArrayOfchar[j++];
            /* 26140 */
            char c2 = paramArrayOfchar[j++];
            /* 26141 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26142 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26144 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26145 */
                return new byte[0];
                /*       */
            }
            /* 26147 */
            byte b3 = au[c1];
            /* 26148 */
            byte b4 = au[c2];
            /* 26149 */
            byte b5 = au[b1];
            /* 26150 */
            byte b6 = au[b2];
            /* 26151 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26152 */
                return new byte[0];
                /*       */
            }
            /* 26154 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26155 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26156 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26157 */
            arrayOfByte[b++] = (byte) m;
            /* 26158 */
            if (b < i) {
                /* 26159 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26161 */
            if (b < i) {
                /* 26162 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26165 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] iY(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26169 */
        if (paramInt2 % 4 != 0) {
            /* 26170 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26173 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26174 */
            paramInt2--;
            /*       */
        }
        /* 26176 */
        int i = paramInt2 * 3 / 4;
        /* 26177 */
        byte[] arrayOfByte = new byte[i];
        /* 26178 */
        int j = paramInt1;
        /* 26179 */
        int k = paramInt1 + paramInt2;
        /* 26180 */
        byte b = 0;
        /* 26181 */
        while (j < k) {
            /* 26182 */
            char c1 = paramArrayOfchar[j++];
            /* 26183 */
            char c2 = paramArrayOfchar[j++];
            /* 26184 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26185 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26187 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26188 */
                return new byte[0];
                /*       */
            }
            /* 26190 */
            byte b3 = au[c1];
            /* 26191 */
            byte b4 = au[c2];
            /* 26192 */
            byte b5 = au[b1];
            /* 26193 */
            byte b6 = au[b2];
            /* 26194 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26195 */
                return new byte[0];
                /*       */
            }
            /* 26197 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26198 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26199 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26200 */
            arrayOfByte[b++] = (byte) m;
            /* 26201 */
            if (b < i) {
                /* 26202 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26204 */
            if (b < i) {
                /* 26205 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26208 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] iZ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26212 */
        if (paramInt2 % 4 != 0) {
            /* 26213 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26216 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26217 */
            paramInt2--;
            /*       */
        }
        /* 26219 */
        int i = paramInt2 * 3 / 4;
        /* 26220 */
        byte[] arrayOfByte = new byte[i];
        /* 26221 */
        int j = paramInt1;
        /* 26222 */
        int k = paramInt1 + paramInt2;
        /* 26223 */
        byte b = 0;
        /* 26224 */
        while (j < k) {
            /* 26225 */
            char c1 = paramArrayOfchar[j++];
            /* 26226 */
            char c2 = paramArrayOfchar[j++];
            /* 26227 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26228 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26230 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26231 */
                return new byte[0];
                /*       */
            }
            /* 26233 */
            byte b3 = au[c1];
            /* 26234 */
            byte b4 = au[c2];
            /* 26235 */
            byte b5 = au[b1];
            /* 26236 */
            byte b6 = au[b2];
            /* 26237 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26238 */
                return new byte[0];
                /*       */
            }
            /* 26240 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26241 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26242 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26243 */
            arrayOfByte[b++] = (byte) m;
            /* 26244 */
            if (b < i) {
                /* 26245 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26247 */
            if (b < i) {
                /* 26248 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26251 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ja(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26255 */
        if (paramInt2 % 4 != 0) {
            /* 26256 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26259 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26260 */
            paramInt2--;
            /*       */
        }
        /* 26262 */
        int i = paramInt2 * 3 / 4;
        /* 26263 */
        byte[] arrayOfByte = new byte[i];
        /* 26264 */
        int j = paramInt1;
        /* 26265 */
        int k = paramInt1 + paramInt2;
        /* 26266 */
        byte b = 0;
        /* 26267 */
        while (j < k) {
            /* 26268 */
            char c1 = paramArrayOfchar[j++];
            /* 26269 */
            char c2 = paramArrayOfchar[j++];
            /* 26270 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26271 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26273 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26274 */
                return new byte[0];
                /*       */
            }
            /* 26276 */
            byte b3 = au[c1];
            /* 26277 */
            byte b4 = au[c2];
            /* 26278 */
            byte b5 = au[b1];
            /* 26279 */
            byte b6 = au[b2];
            /* 26280 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26281 */
                return new byte[0];
                /*       */
            }
            /* 26283 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26284 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26285 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26286 */
            arrayOfByte[b++] = (byte) m;
            /* 26287 */
            if (b < i) {
                /* 26288 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26290 */
            if (b < i) {
                /* 26291 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26294 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jb(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26298 */
        if (paramInt2 % 4 != 0) {
            /* 26299 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26302 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26303 */
            paramInt2--;
            /*       */
        }
        /* 26305 */
        int i = paramInt2 * 3 / 4;
        /* 26306 */
        byte[] arrayOfByte = new byte[i];
        /* 26307 */
        int j = paramInt1;
        /* 26308 */
        int k = paramInt1 + paramInt2;
        /* 26309 */
        byte b = 0;
        /* 26310 */
        while (j < k) {
            /* 26311 */
            char c1 = paramArrayOfchar[j++];
            /* 26312 */
            char c2 = paramArrayOfchar[j++];
            /* 26313 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26314 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26316 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26317 */
                return new byte[0];
                /*       */
            }
            /* 26319 */
            byte b3 = au[c1];
            /* 26320 */
            byte b4 = au[c2];
            /* 26321 */
            byte b5 = au[b1];
            /* 26322 */
            byte b6 = au[b2];
            /* 26323 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26324 */
                return new byte[0];
                /*       */
            }
            /* 26326 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26327 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26328 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26329 */
            arrayOfByte[b++] = (byte) m;
            /* 26330 */
            if (b < i) {
                /* 26331 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26333 */
            if (b < i) {
                /* 26334 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26337 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jc(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26341 */
        if (paramInt2 % 4 != 0) {
            /* 26342 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26345 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26346 */
            paramInt2--;
            /*       */
        }
        /* 26348 */
        int i = paramInt2 * 3 / 4;
        /* 26349 */
        byte[] arrayOfByte = new byte[i];
        /* 26350 */
        int j = paramInt1;
        /* 26351 */
        int k = paramInt1 + paramInt2;
        /* 26352 */
        byte b = 0;
        /* 26353 */
        while (j < k) {
            /* 26354 */
            char c1 = paramArrayOfchar[j++];
            /* 26355 */
            char c2 = paramArrayOfchar[j++];
            /* 26356 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26357 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26359 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26360 */
                return new byte[0];
                /*       */
            }
            /* 26362 */
            byte b3 = au[c1];
            /* 26363 */
            byte b4 = au[c2];
            /* 26364 */
            byte b5 = au[b1];
            /* 26365 */
            byte b6 = au[b2];
            /* 26366 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26367 */
                return new byte[0];
                /*       */
            }
            /* 26369 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26370 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26371 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26372 */
            arrayOfByte[b++] = (byte) m;
            /* 26373 */
            if (b < i) {
                /* 26374 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26376 */
            if (b < i) {
                /* 26377 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26380 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jd(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26384 */
        if (paramInt2 % 4 != 0) {
            /* 26385 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26388 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26389 */
            paramInt2--;
            /*       */
        }
        /* 26391 */
        int i = paramInt2 * 3 / 4;
        /* 26392 */
        byte[] arrayOfByte = new byte[i];
        /* 26393 */
        int j = paramInt1;
        /* 26394 */
        int k = paramInt1 + paramInt2;
        /* 26395 */
        byte b = 0;
        /* 26396 */
        while (j < k) {
            /* 26397 */
            char c1 = paramArrayOfchar[j++];
            /* 26398 */
            char c2 = paramArrayOfchar[j++];
            /* 26399 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26400 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26402 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26403 */
                return new byte[0];
                /*       */
            }
            /* 26405 */
            byte b3 = au[c1];
            /* 26406 */
            byte b4 = au[c2];
            /* 26407 */
            byte b5 = au[b1];
            /* 26408 */
            byte b6 = au[b2];
            /* 26409 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26410 */
                return new byte[0];
                /*       */
            }
            /* 26412 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26413 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26414 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26415 */
            arrayOfByte[b++] = (byte) m;
            /* 26416 */
            if (b < i) {
                /* 26417 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26419 */
            if (b < i) {
                /* 26420 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26423 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] je(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26427 */
        if (paramInt2 % 4 != 0) {
            /* 26428 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26431 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26432 */
            paramInt2--;
            /*       */
        }
        /* 26434 */
        int i = paramInt2 * 3 / 4;
        /* 26435 */
        byte[] arrayOfByte = new byte[i];
        /* 26436 */
        int j = paramInt1;
        /* 26437 */
        int k = paramInt1 + paramInt2;
        /* 26438 */
        byte b = 0;
        /* 26439 */
        while (j < k) {
            /* 26440 */
            char c1 = paramArrayOfchar[j++];
            /* 26441 */
            char c2 = paramArrayOfchar[j++];
            /* 26442 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26443 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26445 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26446 */
                return new byte[0];
                /*       */
            }
            /* 26448 */
            byte b3 = au[c1];
            /* 26449 */
            byte b4 = au[c2];
            /* 26450 */
            byte b5 = au[b1];
            /* 26451 */
            byte b6 = au[b2];
            /* 26452 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26453 */
                return new byte[0];
                /*       */
            }
            /* 26455 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26456 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26457 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26458 */
            arrayOfByte[b++] = (byte) m;
            /* 26459 */
            if (b < i) {
                /* 26460 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26462 */
            if (b < i) {
                /* 26463 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26466 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jf(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26470 */
        if (paramInt2 % 4 != 0) {
            /* 26471 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26474 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26475 */
            paramInt2--;
            /*       */
        }
        /* 26477 */
        int i = paramInt2 * 3 / 4;
        /* 26478 */
        byte[] arrayOfByte = new byte[i];
        /* 26479 */
        int j = paramInt1;
        /* 26480 */
        int k = paramInt1 + paramInt2;
        /* 26481 */
        byte b = 0;
        /* 26482 */
        while (j < k) {
            /* 26483 */
            char c1 = paramArrayOfchar[j++];
            /* 26484 */
            char c2 = paramArrayOfchar[j++];
            /* 26485 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26486 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26488 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26489 */
                return new byte[0];
                /*       */
            }
            /* 26491 */
            byte b3 = au[c1];
            /* 26492 */
            byte b4 = au[c2];
            /* 26493 */
            byte b5 = au[b1];
            /* 26494 */
            byte b6 = au[b2];
            /* 26495 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26496 */
                return new byte[0];
                /*       */
            }
            /* 26498 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26499 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26500 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26501 */
            arrayOfByte[b++] = (byte) m;
            /* 26502 */
            if (b < i) {
                /* 26503 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26505 */
            if (b < i) {
                /* 26506 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26509 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jg(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26513 */
        if (paramInt2 % 4 != 0) {
            /* 26514 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26517 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26518 */
            paramInt2--;
            /*       */
        }
        /* 26520 */
        int i = paramInt2 * 3 / 4;
        /* 26521 */
        byte[] arrayOfByte = new byte[i];
        /* 26522 */
        int j = paramInt1;
        /* 26523 */
        int k = paramInt1 + paramInt2;
        /* 26524 */
        byte b = 0;
        /* 26525 */
        while (j < k) {
            /* 26526 */
            char c1 = paramArrayOfchar[j++];
            /* 26527 */
            char c2 = paramArrayOfchar[j++];
            /* 26528 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26529 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26531 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26532 */
                return new byte[0];
                /*       */
            }
            /* 26534 */
            byte b3 = au[c1];
            /* 26535 */
            byte b4 = au[c2];
            /* 26536 */
            byte b5 = au[b1];
            /* 26537 */
            byte b6 = au[b2];
            /* 26538 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26539 */
                return new byte[0];
                /*       */
            }
            /* 26541 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26542 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26543 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26544 */
            arrayOfByte[b++] = (byte) m;
            /* 26545 */
            if (b < i) {
                /* 26546 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26548 */
            if (b < i) {
                /* 26549 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26552 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jh(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26556 */
        if (paramInt2 % 4 != 0) {
            /* 26557 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26560 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26561 */
            paramInt2--;
            /*       */
        }
        /* 26563 */
        int i = paramInt2 * 3 / 4;
        /* 26564 */
        byte[] arrayOfByte = new byte[i];
        /* 26565 */
        int j = paramInt1;
        /* 26566 */
        int k = paramInt1 + paramInt2;
        /* 26567 */
        byte b = 0;
        /* 26568 */
        while (j < k) {
            /* 26569 */
            char c1 = paramArrayOfchar[j++];
            /* 26570 */
            char c2 = paramArrayOfchar[j++];
            /* 26571 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26572 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26574 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26575 */
                return new byte[0];
                /*       */
            }
            /* 26577 */
            byte b3 = au[c1];
            /* 26578 */
            byte b4 = au[c2];
            /* 26579 */
            byte b5 = au[b1];
            /* 26580 */
            byte b6 = au[b2];
            /* 26581 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26582 */
                return new byte[0];
                /*       */
            }
            /* 26584 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26585 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26586 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26587 */
            arrayOfByte[b++] = (byte) m;
            /* 26588 */
            if (b < i) {
                /* 26589 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26591 */
            if (b < i) {
                /* 26592 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26595 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ji(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26599 */
        if (paramInt2 % 4 != 0) {
            /* 26600 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26603 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26604 */
            paramInt2--;
            /*       */
        }
        /* 26606 */
        int i = paramInt2 * 3 / 4;
        /* 26607 */
        byte[] arrayOfByte = new byte[i];
        /* 26608 */
        int j = paramInt1;
        /* 26609 */
        int k = paramInt1 + paramInt2;
        /* 26610 */
        byte b = 0;
        /* 26611 */
        while (j < k) {
            /* 26612 */
            char c1 = paramArrayOfchar[j++];
            /* 26613 */
            char c2 = paramArrayOfchar[j++];
            /* 26614 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26615 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26617 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26618 */
                return new byte[0];
                /*       */
            }
            /* 26620 */
            byte b3 = au[c1];
            /* 26621 */
            byte b4 = au[c2];
            /* 26622 */
            byte b5 = au[b1];
            /* 26623 */
            byte b6 = au[b2];
            /* 26624 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26625 */
                return new byte[0];
                /*       */
            }
            /* 26627 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26628 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26629 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26630 */
            arrayOfByte[b++] = (byte) m;
            /* 26631 */
            if (b < i) {
                /* 26632 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26634 */
            if (b < i) {
                /* 26635 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26638 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jj(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26642 */
        if (paramInt2 % 4 != 0) {
            /* 26643 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26646 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26647 */
            paramInt2--;
            /*       */
        }
        /* 26649 */
        int i = paramInt2 * 3 / 4;
        /* 26650 */
        byte[] arrayOfByte = new byte[i];
        /* 26651 */
        int j = paramInt1;
        /* 26652 */
        int k = paramInt1 + paramInt2;
        /* 26653 */
        byte b = 0;
        /* 26654 */
        while (j < k) {
            /* 26655 */
            char c1 = paramArrayOfchar[j++];
            /* 26656 */
            char c2 = paramArrayOfchar[j++];
            /* 26657 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26658 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26660 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26661 */
                return new byte[0];
                /*       */
            }
            /* 26663 */
            byte b3 = au[c1];
            /* 26664 */
            byte b4 = au[c2];
            /* 26665 */
            byte b5 = au[b1];
            /* 26666 */
            byte b6 = au[b2];
            /* 26667 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26668 */
                return new byte[0];
                /*       */
            }
            /* 26670 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26671 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26672 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26673 */
            arrayOfByte[b++] = (byte) m;
            /* 26674 */
            if (b < i) {
                /* 26675 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26677 */
            if (b < i) {
                /* 26678 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26681 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jk(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26685 */
        if (paramInt2 % 4 != 0) {
            /* 26686 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26689 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26690 */
            paramInt2--;
            /*       */
        }
        /* 26692 */
        int i = paramInt2 * 3 / 4;
        /* 26693 */
        byte[] arrayOfByte = new byte[i];
        /* 26694 */
        int j = paramInt1;
        /* 26695 */
        int k = paramInt1 + paramInt2;
        /* 26696 */
        byte b = 0;
        /* 26697 */
        while (j < k) {
            /* 26698 */
            char c1 = paramArrayOfchar[j++];
            /* 26699 */
            char c2 = paramArrayOfchar[j++];
            /* 26700 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26701 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26703 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26704 */
                return new byte[0];
                /*       */
            }
            /* 26706 */
            byte b3 = au[c1];
            /* 26707 */
            byte b4 = au[c2];
            /* 26708 */
            byte b5 = au[b1];
            /* 26709 */
            byte b6 = au[b2];
            /* 26710 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26711 */
                return new byte[0];
                /*       */
            }
            /* 26713 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26714 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26715 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26716 */
            arrayOfByte[b++] = (byte) m;
            /* 26717 */
            if (b < i) {
                /* 26718 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26720 */
            if (b < i) {
                /* 26721 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26724 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jl(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26728 */
        if (paramInt2 % 4 != 0) {
            /* 26729 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26732 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26733 */
            paramInt2--;
            /*       */
        }
        /* 26735 */
        int i = paramInt2 * 3 / 4;
        /* 26736 */
        byte[] arrayOfByte = new byte[i];
        /* 26737 */
        int j = paramInt1;
        /* 26738 */
        int k = paramInt1 + paramInt2;
        /* 26739 */
        byte b = 0;
        /* 26740 */
        while (j < k) {
            /* 26741 */
            char c1 = paramArrayOfchar[j++];
            /* 26742 */
            char c2 = paramArrayOfchar[j++];
            /* 26743 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26744 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26746 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26747 */
                return new byte[0];
                /*       */
            }
            /* 26749 */
            byte b3 = au[c1];
            /* 26750 */
            byte b4 = au[c2];
            /* 26751 */
            byte b5 = au[b1];
            /* 26752 */
            byte b6 = au[b2];
            /* 26753 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26754 */
                return new byte[0];
                /*       */
            }
            /* 26756 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26757 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26758 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26759 */
            arrayOfByte[b++] = (byte) m;
            /* 26760 */
            if (b < i) {
                /* 26761 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26763 */
            if (b < i) {
                /* 26764 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26767 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jm(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26771 */
        if (paramInt2 % 4 != 0) {
            /* 26772 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26775 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26776 */
            paramInt2--;
            /*       */
        }
        /* 26778 */
        int i = paramInt2 * 3 / 4;
        /* 26779 */
        byte[] arrayOfByte = new byte[i];
        /* 26780 */
        int j = paramInt1;
        /* 26781 */
        int k = paramInt1 + paramInt2;
        /* 26782 */
        byte b = 0;
        /* 26783 */
        while (j < k) {
            /* 26784 */
            char c1 = paramArrayOfchar[j++];
            /* 26785 */
            char c2 = paramArrayOfchar[j++];
            /* 26786 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26787 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26789 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26790 */
                return new byte[0];
                /*       */
            }
            /* 26792 */
            byte b3 = au[c1];
            /* 26793 */
            byte b4 = au[c2];
            /* 26794 */
            byte b5 = au[b1];
            /* 26795 */
            byte b6 = au[b2];
            /* 26796 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26797 */
                return new byte[0];
                /*       */
            }
            /* 26799 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26800 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26801 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26802 */
            arrayOfByte[b++] = (byte) m;
            /* 26803 */
            if (b < i) {
                /* 26804 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26806 */
            if (b < i) {
                /* 26807 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26810 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jn(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26814 */
        if (paramInt2 % 4 != 0) {
            /* 26815 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26818 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26819 */
            paramInt2--;
            /*       */
        }
        /* 26821 */
        int i = paramInt2 * 3 / 4;
        /* 26822 */
        byte[] arrayOfByte = new byte[i];
        /* 26823 */
        int j = paramInt1;
        /* 26824 */
        int k = paramInt1 + paramInt2;
        /* 26825 */
        byte b = 0;
        /* 26826 */
        while (j < k) {
            /* 26827 */
            char c1 = paramArrayOfchar[j++];
            /* 26828 */
            char c2 = paramArrayOfchar[j++];
            /* 26829 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26830 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26832 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26833 */
                return new byte[0];
                /*       */
            }
            /* 26835 */
            byte b3 = au[c1];
            /* 26836 */
            byte b4 = au[c2];
            /* 26837 */
            byte b5 = au[b1];
            /* 26838 */
            byte b6 = au[b2];
            /* 26839 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26840 */
                return new byte[0];
                /*       */
            }
            /* 26842 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26843 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26844 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26845 */
            arrayOfByte[b++] = (byte) m;
            /* 26846 */
            if (b < i) {
                /* 26847 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26849 */
            if (b < i) {
                /* 26850 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26853 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jo(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26857 */
        if (paramInt2 % 4 != 0) {
            /* 26858 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26861 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26862 */
            paramInt2--;
            /*       */
        }
        /* 26864 */
        int i = paramInt2 * 3 / 4;
        /* 26865 */
        byte[] arrayOfByte = new byte[i];
        /* 26866 */
        int j = paramInt1;
        /* 26867 */
        int k = paramInt1 + paramInt2;
        /* 26868 */
        byte b = 0;
        /* 26869 */
        while (j < k) {
            /* 26870 */
            char c1 = paramArrayOfchar[j++];
            /* 26871 */
            char c2 = paramArrayOfchar[j++];
            /* 26872 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26873 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26875 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26876 */
                return new byte[0];
                /*       */
            }
            /* 26878 */
            byte b3 = au[c1];
            /* 26879 */
            byte b4 = au[c2];
            /* 26880 */
            byte b5 = au[b1];
            /* 26881 */
            byte b6 = au[b2];
            /* 26882 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26883 */
                return new byte[0];
                /*       */
            }
            /* 26885 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26886 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26887 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26888 */
            arrayOfByte[b++] = (byte) m;
            /* 26889 */
            if (b < i) {
                /* 26890 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26892 */
            if (b < i) {
                /* 26893 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26896 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jp(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26900 */
        if (paramInt2 % 4 != 0) {
            /* 26901 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26904 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26905 */
            paramInt2--;
            /*       */
        }
        /* 26907 */
        int i = paramInt2 * 3 / 4;
        /* 26908 */
        byte[] arrayOfByte = new byte[i];
        /* 26909 */
        int j = paramInt1;
        /* 26910 */
        int k = paramInt1 + paramInt2;
        /* 26911 */
        byte b = 0;
        /* 26912 */
        while (j < k) {
            /* 26913 */
            char c1 = paramArrayOfchar[j++];
            /* 26914 */
            char c2 = paramArrayOfchar[j++];
            /* 26915 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26916 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26918 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26919 */
                return new byte[0];
                /*       */
            }
            /* 26921 */
            byte b3 = au[c1];
            /* 26922 */
            byte b4 = au[c2];
            /* 26923 */
            byte b5 = au[b1];
            /* 26924 */
            byte b6 = au[b2];
            /* 26925 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26926 */
                return new byte[0];
                /*       */
            }
            /* 26928 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26929 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26930 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26931 */
            arrayOfByte[b++] = (byte) m;
            /* 26932 */
            if (b < i) {
                /* 26933 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26935 */
            if (b < i) {
                /* 26936 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26939 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jq(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26943 */
        if (paramInt2 % 4 != 0) {
            /* 26944 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26947 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26948 */
            paramInt2--;
            /*       */
        }
        /* 26950 */
        int i = paramInt2 * 3 / 4;
        /* 26951 */
        byte[] arrayOfByte = new byte[i];
        /* 26952 */
        int j = paramInt1;
        /* 26953 */
        int k = paramInt1 + paramInt2;
        /* 26954 */
        byte b = 0;
        /* 26955 */
        while (j < k) {
            /* 26956 */
            char c1 = paramArrayOfchar[j++];
            /* 26957 */
            char c2 = paramArrayOfchar[j++];
            /* 26958 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 26959 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 26961 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 26962 */
                return new byte[0];
                /*       */
            }
            /* 26964 */
            byte b3 = au[c1];
            /* 26965 */
            byte b4 = au[c2];
            /* 26966 */
            byte b5 = au[b1];
            /* 26967 */
            byte b6 = au[b2];
            /* 26968 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 26969 */
                return new byte[0];
                /*       */
            }
            /* 26971 */
            int m = b3 << 2 | b4 >>> 4;
            /* 26972 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 26973 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 26974 */
            arrayOfByte[b++] = (byte) m;
            /* 26975 */
            if (b < i) {
                /* 26976 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 26978 */
            if (b < i) {
                /* 26979 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 26982 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jr(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 26986 */
        if (paramInt2 % 4 != 0) {
            /* 26987 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 26990 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 26991 */
            paramInt2--;
            /*       */
        }
        /* 26993 */
        int i = paramInt2 * 3 / 4;
        /* 26994 */
        byte[] arrayOfByte = new byte[i];
        /* 26995 */
        int j = paramInt1;
        /* 26996 */
        int k = paramInt1 + paramInt2;
        /* 26997 */
        byte b = 0;
        /* 26998 */
        while (j < k) {
            /* 26999 */
            char c1 = paramArrayOfchar[j++];
            /* 27000 */
            char c2 = paramArrayOfchar[j++];
            /* 27001 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 27002 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 27004 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 27005 */
                return new byte[0];
                /*       */
            }
            /* 27007 */
            byte b3 = au[c1];
            /* 27008 */
            byte b4 = au[c2];
            /* 27009 */
            byte b5 = au[b1];
            /* 27010 */
            byte b6 = au[b2];
            /* 27011 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 27012 */
                return new byte[0];
                /*       */
            }
            /* 27014 */
            int m = b3 << 2 | b4 >>> 4;
            /* 27015 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 27016 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 27017 */
            arrayOfByte[b++] = (byte) m;
            /* 27018 */
            if (b < i) {
                /* 27019 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 27021 */
            if (b < i) {
                /* 27022 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 27025 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] js(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 27029 */
        if (paramInt2 % 4 != 0) {
            /* 27030 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 27033 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 27034 */
            paramInt2--;
            /*       */
        }
        /* 27036 */
        int i = paramInt2 * 3 / 4;
        /* 27037 */
        byte[] arrayOfByte = new byte[i];
        /* 27038 */
        int j = paramInt1;
        /* 27039 */
        int k = paramInt1 + paramInt2;
        /* 27040 */
        byte b = 0;
        /* 27041 */
        while (j < k) {
            /* 27042 */
            char c1 = paramArrayOfchar[j++];
            /* 27043 */
            char c2 = paramArrayOfchar[j++];
            /* 27044 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 27045 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 27047 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 27048 */
                return new byte[0];
                /*       */
            }
            /* 27050 */
            byte b3 = au[c1];
            /* 27051 */
            byte b4 = au[c2];
            /* 27052 */
            byte b5 = au[b1];
            /* 27053 */
            byte b6 = au[b2];
            /* 27054 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 27055 */
                return new byte[0];
                /*       */
            }
            /* 27057 */
            int m = b3 << 2 | b4 >>> 4;
            /* 27058 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 27059 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 27060 */
            arrayOfByte[b++] = (byte) m;
            /* 27061 */
            if (b < i) {
                /* 27062 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 27064 */
            if (b < i) {
                /* 27065 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 27068 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jt(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 27072 */
        if (paramInt2 % 4 != 0) {
            /* 27073 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 27076 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 27077 */
            paramInt2--;
            /*       */
        }
        /* 27079 */
        int i = paramInt2 * 3 / 4;
        /* 27080 */
        byte[] arrayOfByte = new byte[i];
        /* 27081 */
        int j = paramInt1;
        /* 27082 */
        int k = paramInt1 + paramInt2;
        /* 27083 */
        byte b = 0;
        /* 27084 */
        while (j < k) {
            /* 27085 */
            char c1 = paramArrayOfchar[j++];
            /* 27086 */
            char c2 = paramArrayOfchar[j++];
            /* 27087 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 27088 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 27090 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 27091 */
                return new byte[0];
                /*       */
            }
            /* 27093 */
            byte b3 = au[c1];
            /* 27094 */
            byte b4 = au[c2];
            /* 27095 */
            byte b5 = au[b1];
            /* 27096 */
            byte b6 = au[b2];
            /* 27097 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 27098 */
                return new byte[0];
                /*       */
            }
            /* 27100 */
            int m = b3 << 2 | b4 >>> 4;
            /* 27101 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 27102 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 27103 */
            arrayOfByte[b++] = (byte) m;
            /* 27104 */
            if (b < i) {
                /* 27105 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 27107 */
            if (b < i) {
                /* 27108 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 27111 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ju(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 27115 */
        if (paramInt2 % 4 != 0) {
            /* 27116 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 27119 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 27120 */
            paramInt2--;
            /*       */
        }
        /* 27122 */
        int i = paramInt2 * 3 / 4;
        /* 27123 */
        byte[] arrayOfByte = new byte[i];
        /* 27124 */
        int j = paramInt1;
        /* 27125 */
        int k = paramInt1 + paramInt2;
        /* 27126 */
        byte b = 0;
        /* 27127 */
        while (j < k) {
            /* 27128 */
            char c1 = paramArrayOfchar[j++];
            /* 27129 */
            char c2 = paramArrayOfchar[j++];
            /* 27130 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 27131 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 27133 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 27134 */
                return new byte[0];
                /*       */
            }
            /* 27136 */
            byte b3 = au[c1];
            /* 27137 */
            byte b4 = au[c2];
            /* 27138 */
            byte b5 = au[b1];
            /* 27139 */
            byte b6 = au[b2];
            /* 27140 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 27141 */
                return new byte[0];
                /*       */
            }
            /* 27143 */
            int m = b3 << 2 | b4 >>> 4;
            /* 27144 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 27145 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 27146 */
            arrayOfByte[b++] = (byte) m;
            /* 27147 */
            if (b < i) {
                /* 27148 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 27150 */
            if (b < i) {
                /* 27151 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 27154 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jv(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 27158 */
        if (paramInt2 % 4 != 0) {
            /* 27159 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 27162 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 27163 */
            paramInt2--;
            /*       */
        }
        /* 27165 */
        int i = paramInt2 * 3 / 4;
        /* 27166 */
        byte[] arrayOfByte = new byte[i];
        /* 27167 */
        int j = paramInt1;
        /* 27168 */
        int k = paramInt1 + paramInt2;
        /* 27169 */
        byte b = 0;
        /* 27170 */
        while (j < k) {
            /* 27171 */
            char c1 = paramArrayOfchar[j++];
            /* 27172 */
            char c2 = paramArrayOfchar[j++];
            /* 27173 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 27174 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 27176 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 27177 */
                return new byte[0];
                /*       */
            }
            /* 27179 */
            byte b3 = au[c1];
            /* 27180 */
            byte b4 = au[c2];
            /* 27181 */
            byte b5 = au[b1];
            /* 27182 */
            byte b6 = au[b2];
            /* 27183 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 27184 */
                return new byte[0];
                /*       */
            }
            /* 27186 */
            int m = b3 << 2 | b4 >>> 4;
            /* 27187 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 27188 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 27189 */
            arrayOfByte[b++] = (byte) m;
            /* 27190 */
            if (b < i) {
                /* 27191 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 27193 */
            if (b < i) {
                /* 27194 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 27197 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] jw(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 27201 */
        if (paramInt2 % 4 != 0) {
            /* 27202 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 27205 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 27206 */
            paramInt2--;
            /*       */
        }
        /* 27208 */
        int i = paramInt2 * 3 / 4;
        /* 27209 */
        byte[] arrayOfByte = new byte[i];
        /* 27210 */
        int j = paramInt1;
        /* 27211 */
        int k = paramInt1 + paramInt2;
        /* 27212 */
        byte b = 0;
        /* 27213 */
        while (j < k) {
            /* 27214 */
            char c1 = paramArrayOfchar[j++];
            /* 27215 */
            char c2 = paramArrayOfchar[j++];
            /* 27216 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 27217 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 27219 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 27220 */
                return new byte[0];
                /*       */
            }
            /* 27222 */
            byte b3 = au[c1];
            /* 27223 */
            byte b4 = au[c2];
            /* 27224 */
            byte b5 = au[b1];
            /* 27225 */
            byte b6 = au[b2];
            /* 27226 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 27227 */
                return new byte[0];
                /*       */
            }
            /* 27229 */
            int m = b3 << 2 | b4 >>> 4;
            /* 27230 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 27231 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 27232 */
            arrayOfByte[b++] = (byte) m;
            /* 27233 */
            if (b < i) {
                /* 27234 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 27236 */
            if (b < i) {
                /* 27237 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 27240 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 27243 */   private static String aM = "5v8y/B";

    /*       */
    /*       */   static
        /*       */ {
        /* 27247 */
        b = 0;
        /* 27248 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 27249 */
            x[b++] = c;
            /*       */
        }
        /* 27251 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 27252 */
            x[b++] = c;
            /*       */
        }
        /* 27254 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 27255 */
            x[b++] = c;
            /*       */
        }
        /* 27257 */
        x[b++] = '+';
        /* 27258 */
        x[b++] = '/';
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /* 28123 */
        b = 0;
        /* 28124 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 28125 */
            y[b++] = c;
            /*       */
        }
        /* 28127 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 28128 */
            y[b++] = c;
            /*       */
        }
        /* 28130 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 28131 */
            y[b++] = c;
            /*       */
        }
        /* 28133 */
        y[b++] = '+';
        /* 28134 */
        y[b++] = '/';
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /* 28998 */
        b = 0;
        /* 28999 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 29000 */
            z[b++] = c;
            /*       */
        }
        /* 29002 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 29003 */
            z[b++] = c;
            /*       */
        }
        /* 29005 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 29006 */
            z[b++] = c;
            /*       */
        }
        /* 29008 */
        z[b++] = '+';
        /* 29009 */
        z[b++] = '/';
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /* 29873 */
        b = 0;
        /* 29874 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 29875 */
            A[b++] = c;
            /*       */
        }
        /* 29877 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 29878 */
            A[b++] = c;
            /*       */
        }
        /* 29880 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 29881 */
            A[b++] = c;
            /*       */
        }
        /* 29883 */
        A[b++] = '+';
        /* 29884 */
        A[b++] = '/';
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /* 29914 */
        b = 0;
        /* 29915 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 29916 */
            B[b++] = c;
            /*       */
        }
        /* 29918 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 29919 */
            B[b++] = c;
            /*       */
        }
        /* 29921 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 29922 */
            B[b++] = c;
            /*       */
        }
        /* 29924 */
        B[b++] = '+';
        /* 29925 */
        B[b++] = '/';
        /*       */
        /*       */
        /*       */
        /*       */
        /* 29930 */
        b = 0;
        /* 29931 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 29932 */
            C[b++] = c;
            /*       */
        }
        /* 29934 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 29935 */
            C[b++] = c;
            /*       */
        }
        /* 29937 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 29938 */
            C[b++] = c;
            /*       */
        }
        /* 29940 */
        C[b++] = '+';
        /* 29941 */
        C[b++] = '/';
        /*       */
    }

    private static byte[] jx(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jy(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jz(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jA(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jB(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jC(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jD(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jE(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jF(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jG(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jH(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jI(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jJ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jK(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jL(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jM(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jN(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jO(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jP(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jQ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jR(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jS(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jT(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jU(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jV(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jW(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jX(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jY(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] jZ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ka(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kb(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kc(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kd(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ke(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kf(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kg(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kh(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ki(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kj(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kk(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kl(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] km(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kn(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ko(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kp(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kq(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kr(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ks(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kt(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ku(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kv(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kw(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kx(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ky(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kz(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kA(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kB(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kC(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] kD(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    /*       */
    private static byte[] kE(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    /*       */
    private static char[] a(byte[] paramArrayOfbyte, int paramInt1, int paramInt2) {
        int i = (paramInt2 * 4 + 2) / 3;
        int j = (paramInt2 + 2) / 3 * 4;
        char[] arrayOfChar = new char[j];
        int k = paramInt1;
        int m = paramInt1 + paramInt2;
        byte b = 0;
        while (k < m) {
            int n = paramArrayOfbyte[k++] & 0xFF;
            byte b1 = (byte) ((k < m) ? (paramArrayOfbyte[k++] & 0xFF) : 0);
            byte b2 = (byte) ((k < m) ? (paramArrayOfbyte[k++] & 0xFF) : 0);
            int i1 = n >>> 2;
            int i2 = (n & 0x3) << 4 | b1 >>> 4;
            int i3 = (b1 & 0xF) << 2 | b2 >>> 6;
            int i4 = b2 & 0x3F;
            arrayOfChar[b++] = h[i1];
            arrayOfChar[b++] = h[i2];
            arrayOfChar[b] = (b < i) ? h[i3] : '=';
            b++;
            arrayOfChar[b] = (b < i) ? h[i4] : '=';
            b++;
        }
        return arrayOfChar;
    }

    /* 29945 */   private static String aN = "9357b5";
    /* 29946 */   private static String aO = "6784ee";
    /* 29947 */   private static String aP = "a3c6f4";
    /* 29948 */   private static String aQ = "87032e";
    /* 29949 */   private static String aR = "1d3008";

    /*       */
    /*       */
    /*       */   static {
        /* 29953 */
        b = 0;
        /* 29954 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 29955 */
            D[b++] = c;
            /*       */
        }
        /* 29957 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 29958 */
            D[b++] = c;
            /*       */
        }
        /* 29960 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 29961 */
            D[b++] = c;
            /*       */
        }
        /* 29963 */
        D[b++] = '+';
        /* 29964 */
        D[b++] = '/';
        /*       */
    }

    /*       */
    /*       */
    /*       */   class am
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 29971 */     private double c = 0.0D;
        /* 29972 */     private double d = 0.0D;
        /* 29973 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public am(a this$0) {
            /* 29978 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 29983 */
            if (param1Int == 0 || param1Int == 1)
                /* 29984 */ return 1;
            /* 29985 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 29994 */
            double d = param1Double;
            /* 29995 */
            if (this.f == true)
                /* 29996 */ d = Math.toRadians(param1Double);
            /* 29997 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 30002 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 30008 */
            byte b1 = 0;
            /* 30009 */
            byte b2 = 0;
            /* 30010 */
            byte b3 = 40;
            /* 30011 */
            byte b4 = 41;
            /* 30012 */
            String str = param1String;
            /* 30013 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 30014 */
                if (param1String.charAt(b5) == b3) {
                    /* 30015 */
                    b1++;
                    /* 30016 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 30017 */
                    b2++;
                    /*       */
                }
                /* 30019 */
            }
            while (b1 > 0) {
                /* 30020 */
                str = str + b4;
                /* 30021 */
                b1--;
                /*       */
            }
            /* 30023 */
            while (b2 > 0) {
                /* 30024 */
                str = b3 + str;
                /* 30025 */
                b2--;
                /*       */
            }
            /* 30027 */
            str = b(str);
            /* 30028 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 30033 */
            String str = "";
            /* 30034 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 30035 */
                str = str + param1String.charAt(b);
                /* 30036 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 30038 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 30039 */ str = str + '*';
                    /* 30040 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 30041 */ str = str + '1';
                    /*       */
                }
                /* 30043 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class an
            /*       */ {
        /*       */ Policy.Parameters a;
        /*       */
        /* 30052 */     private double c = 0.0D;
        /* 30053 */     private double d = 0.0D;
        /* 30054 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public an(a this$0) {
            /* 30059 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 30064 */
            if (param1Int == 0 || param1Int == 1)
                /* 30065 */ return 1;
            /* 30066 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 30075 */
            double d = param1Double;
            /* 30076 */
            if (this.f == true)
                /* 30077 */ d = Math.toRadians(param1Double);
            /* 30078 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 30083 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 30089 */
            byte b1 = 0;
            /* 30090 */
            byte b2 = 0;
            /* 30091 */
            byte b3 = 40;
            /* 30092 */
            byte b4 = 41;
            /* 30093 */
            String str = param1String;
            /* 30094 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 30095 */
                if (param1String.charAt(b5) == b3) {
                    /* 30096 */
                    b1++;
                    /* 30097 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 30098 */
                    b2++;
                    /*       */
                }
                /* 30100 */
            }
            while (b1 > 0) {
                /* 30101 */
                str = str + b4;
                /* 30102 */
                b1--;
                /*       */
            }
            /* 30104 */
            while (b2 > 0) {
                /* 30105 */
                str = b3 + str;
                /* 30106 */
                b2--;
                /*       */
            }
            /* 30108 */
            str = b(str);
            /* 30109 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 30114 */
            String str = "";
            /* 30115 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 30116 */
                str = str + param1String.charAt(b);
                /* 30117 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 30119 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 30120 */ str = str + '*';
                    /* 30121 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 30122 */ str = str + '1';
                    /*       */
                }
                /* 30124 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /* 30129 */   private static String aS = "b4284d3";
    /*       */
    /* 30131 */   private static String aT = "b150efa";
    /*       */
    /* 30133 */   private static String aU = "313e097";
    /*       */
    /* 30135 */   private static String aV = "bfa38";
    /*       */
    /* 30137 */   private static String aW = "332861";

    /*       */
    /*       */
    /*       */   class ao
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 30143 */     private double c = 0.0D;
        /* 30144 */     private double d = 0.0D;
        /* 30145 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public ao(a this$0) {
            /* 30150 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 30155 */
            if (param1Int == 0 || param1Int == 1)
                /* 30156 */ return 1;
            /* 30157 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 30166 */
            double d = param1Double;
            /* 30167 */
            if (this.f == true)
                /* 30168 */ d = Math.toRadians(param1Double);
            /* 30169 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 30174 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 30180 */
            byte b1 = 0;
            /* 30181 */
            byte b2 = 0;
            /* 30182 */
            byte b3 = 40;
            /* 30183 */
            byte b4 = 41;
            /* 30184 */
            String str = param1String;
            /* 30185 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 30186 */
                if (param1String.charAt(b5) == b3) {
                    /* 30187 */
                    b1++;
                    /* 30188 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 30189 */
                    b2++;
                    /*       */
                }
                /* 30191 */
            }
            while (b1 > 0) {
                /* 30192 */
                str = str + b4;
                /* 30193 */
                b1--;
                /*       */
            }
            /* 30195 */
            while (b2 > 0) {
                /* 30196 */
                str = b3 + str;
                /* 30197 */
                b2--;
                /*       */
            }
            /* 30199 */
            str = b(str);
            /* 30200 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 30205 */
            String str = "";
            /* 30206 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 30207 */
                str = str + param1String.charAt(b);
                /* 30208 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 30210 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 30211 */ str = str + '*';
                    /* 30212 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 30213 */ str = str + '1';
                    /*       */
                }
                /* 30215 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class ap
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 30223 */     private double c = 0.0D;
        /* 30224 */     private double d = 0.0D;
        /* 30225 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public ap(a this$0) {
            /* 30230 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 30235 */
            if (param1Int == 0 || param1Int == 1)
                /* 30236 */ return 1;
            /* 30237 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 30246 */
            double d = param1Double;
            /* 30247 */
            if (this.f == true)
                /* 30248 */ d = Math.toRadians(param1Double);
            /* 30249 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 30254 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 30260 */
            byte b1 = 0;
            /* 30261 */
            byte b2 = 0;
            /* 30262 */
            byte b3 = 40;
            /* 30263 */
            byte b4 = 41;
            /* 30264 */
            String str = param1String;
            /* 30265 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 30266 */
                if (param1String.charAt(b5) == b3) {
                    /* 30267 */
                    b1++;
                    /* 30268 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 30269 */
                    b2++;
                    /*       */
                }
                /* 30271 */
            }
            while (b1 > 0) {
                /* 30272 */
                str = str + b4;
                /* 30273 */
                b1--;
                /*       */
            }
            /* 30275 */
            while (b2 > 0) {
                /* 30276 */
                str = b3 + str;
                /* 30277 */
                b2--;
                /*       */
            }
            /* 30279 */
            str = b(str);
            /* 30280 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 30285 */
            String str = "";
            /* 30286 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 30287 */
                str = str + param1String.charAt(b);
                /* 30288 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 30290 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 30291 */ str = str + '*';
                    /* 30292 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 30293 */ str = str + '1';
                    /*       */
                }
                /* 30295 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */   static {
        /* 30300 */
        b = 0;
        /* 30301 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 30302 */
            E[b++] = c;
            /*       */
        }
        /* 30304 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 30305 */
            E[b++] = c;
            /*       */
        }
        /* 30307 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 30308 */
            E[b++] = c;
            /*       */
        }
        /* 30310 */
        E[b++] = '+';
        /* 30311 */
        E[b++] = '/';
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static String d(String paramString) {
        /* 30316 */
        return new String(f(paramString));
        /*       */
    }

    /*       */
    /* 30319 */   private static String aX = "Yq3t6w9";

    /*       */
    /*       */
    /*       */   static {
        /* 30323 */
        b = 0;
        /* 30324 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 30325 */
            F[b++] = c;
            /*       */
        }
        /* 30327 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 30328 */
            F[b++] = c;
            /*       */
        }
        /* 30330 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 30331 */
            F[b++] = c;
            /*       */
        }
        /* 30333 */
        F[b++] = '+';
        /* 30334 */
        F[b++] = '/';
        /*       */
        /*       */
        /*       */
        /*       */
        /* 30339 */
        b = 0;
        /* 30340 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 30341 */
            G[b++] = c;
            /*       */
        }
        /* 30343 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 30344 */
            G[b++] = c;
            /*       */
        }
        /* 30346 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 30347 */
            G[b++] = c;
            /*       */
        }
        /* 30349 */
        G[b++] = '+';
        /* 30350 */
        G[b++] = '/';
        /*       */
    }

    /*       */
    /*       */
    private static byte[] e(String paramString) {
        /* 30354 */
        char[] arrayOfChar = new char[paramString.length()];
        /* 30355 */
        byte b1 = 0;
        /* 30356 */
        for (byte b2 = 0; b2 < paramString.length(); b2++) {
            /* 30357 */
            char c = paramString.charAt(b2);
            /* 30358 */
            if (c != ' ' && c != '\r' && c != '\n' && c != '\t') {
                /* 30359 */
                arrayOfChar[b1++] = c;
                /*       */
            }
            /*       */
        }
        /* 30362 */
        return ls(arrayOfChar, 0, b1);
        /*       */
    }

    /*       */
    /* 30365 */   private static String aY = "V6bb8pQOZsC2z";

    /*       */
    /*       */   static {
        /* 30368 */
        b = 0;
        /* 30369 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 30370 */
            H[b++] = c;
            /*       */
        }
        /* 30372 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 30373 */
            H[b++] = c;
            /*       */
        }
        /* 30375 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 30376 */
            H[b++] = c;
            /*       */
        }
        /* 30378 */
        H[b++] = '+';
        /* 30379 */
        H[b++] = '/';
        /*       */
    }

    /*       */
    /*       */
    /* 30383 */   private static String aZ = "1c81f371";
    /*       */
    /* 30385 */   private static String ba = "8175b4f";
    /*       */
    /* 30387 */   private static String bb = "b9a35c";
    /*       */
    /* 30389 */   private static String bc = "ae16dd";
    /*       */
    /* 30391 */   private static String bd = "d91e3";

    /*       */
    /*       */   static {
        /* 30394 */
        b = 0;
        /* 30395 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 30396 */
            I[b++] = c;
            /*       */
        }
        /* 30398 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 30399 */
            I[b++] = c;
            /*       */
        }
        /* 30401 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 30402 */
            I[b++] = c;
            /*       */
        }
        /* 30404 */
        I[b++] = '+';
        /* 30405 */
        I[b++] = '/';
        /*       */
        /*       */
        /*       */
        /* 30409 */
        b = 0;
        /* 30410 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 30411 */
            L[b++] = c;
            /*       */
        }
        /* 30413 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 30414 */
            L[b++] = c;
            /*       */
        }
        /* 30416 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 30417 */
            L[b++] = c;
            /*       */
        }
        /* 30419 */
        L[b++] = '+';
        /* 30420 */
        L[b++] = '/';
        /*       */
        /*       */
        /*       */
        /*       */
        /* 30425 */
        b = 0;
        /* 30426 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 30427 */
            M[b++] = c;
            /*       */
        }
        /* 30429 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 30430 */
            M[b++] = c;
            /*       */
        }
        /* 30432 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 30433 */
            M[b++] = c;
            /*       */
        }
        /* 30435 */
        M[b++] = '+';
        /* 30436 */
        M[b++] = '/';
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kF(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 30440 */
        if (paramInt2 % 4 != 0) {
            /* 30441 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 30444 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 30445 */
            paramInt2--;
            /*       */
        }
        /* 30447 */
        int i = paramInt2 * 3 / 4;
        /* 30448 */
        byte[] arrayOfByte = new byte[i];
        /* 30449 */
        int j = paramInt1;
        /* 30450 */
        int k = paramInt1 + paramInt2;
        /* 30451 */
        byte b = 0;
        /* 30452 */
        while (j < k) {
            /* 30453 */
            char c1 = paramArrayOfchar[j++];
            /* 30454 */
            char c2 = paramArrayOfchar[j++];
            /* 30455 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 30456 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 30458 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 30459 */
                return new byte[0];
                /*       */
            }
            /* 30461 */
            byte b3 = au[c1];
            /* 30462 */
            byte b4 = au[c2];
            /* 30463 */
            byte b5 = au[b1];
            /* 30464 */
            byte b6 = au[b2];
            /* 30465 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 30466 */
                return new byte[0];
                /*       */
            }
            /* 30468 */
            int m = b3 << 2 | b4 >>> 4;
            /* 30469 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 30470 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 30471 */
            arrayOfByte[b++] = (byte) m;
            /* 30472 */
            if (b < i) {
                /* 30473 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 30475 */
            if (b < i) {
                /* 30476 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 30479 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kG(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 30483 */
        if (paramInt2 % 4 != 0) {
            /* 30484 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 30487 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 30488 */
            paramInt2--;
            /*       */
        }
        /* 30490 */
        int i = paramInt2 * 3 / 4;
        /* 30491 */
        byte[] arrayOfByte = new byte[i];
        /* 30492 */
        int j = paramInt1;
        /* 30493 */
        int k = paramInt1 + paramInt2;
        /* 30494 */
        byte b = 0;
        /* 30495 */
        while (j < k) {
            /* 30496 */
            char c1 = paramArrayOfchar[j++];
            /* 30497 */
            char c2 = paramArrayOfchar[j++];
            /* 30498 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 30499 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 30501 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 30502 */
                return new byte[0];
                /*       */
            }
            /* 30504 */
            byte b3 = au[c1];
            /* 30505 */
            byte b4 = au[c2];
            /* 30506 */
            byte b5 = au[b1];
            /* 30507 */
            byte b6 = au[b2];
            /* 30508 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 30509 */
                return new byte[0];
                /*       */
            }
            /* 30511 */
            int m = b3 << 2 | b4 >>> 4;
            /* 30512 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 30513 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 30514 */
            arrayOfByte[b++] = (byte) m;
            /* 30515 */
            if (b < i) {
                /* 30516 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 30518 */
            if (b < i) {
                /* 30519 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 30522 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kH(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 30526 */
        if (paramInt2 % 4 != 0) {
            /* 30527 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 30530 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 30531 */
            paramInt2--;
            /*       */
        }
        /* 30533 */
        int i = paramInt2 * 3 / 4;
        /* 30534 */
        byte[] arrayOfByte = new byte[i];
        /* 30535 */
        int j = paramInt1;
        /* 30536 */
        int k = paramInt1 + paramInt2;
        /* 30537 */
        byte b = 0;
        /* 30538 */
        while (j < k) {
            /* 30539 */
            char c1 = paramArrayOfchar[j++];
            /* 30540 */
            char c2 = paramArrayOfchar[j++];
            /* 30541 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 30542 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 30544 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 30545 */
                return new byte[0];
                /*       */
            }
            /* 30547 */
            byte b3 = au[c1];
            /* 30548 */
            byte b4 = au[c2];
            /* 30549 */
            byte b5 = au[b1];
            /* 30550 */
            byte b6 = au[b2];
            /* 30551 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 30552 */
                return new byte[0];
                /*       */
            }
            /* 30554 */
            int m = b3 << 2 | b4 >>> 4;
            /* 30555 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 30556 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 30557 */
            arrayOfByte[b++] = (byte) m;
            /* 30558 */
            if (b < i) {
                /* 30559 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 30561 */
            if (b < i) {
                /* 30562 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 30565 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kI(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 30569 */
        if (paramInt2 % 4 != 0) {
            /* 30570 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 30573 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 30574 */
            paramInt2--;
            /*       */
        }
        /* 30576 */
        int i = paramInt2 * 3 / 4;
        /* 30577 */
        byte[] arrayOfByte = new byte[i];
        /* 30578 */
        int j = paramInt1;
        /* 30579 */
        int k = paramInt1 + paramInt2;
        /* 30580 */
        byte b = 0;
        /* 30581 */
        while (j < k) {
            /* 30582 */
            char c1 = paramArrayOfchar[j++];
            /* 30583 */
            char c2 = paramArrayOfchar[j++];
            /* 30584 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 30585 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 30587 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 30588 */
                return new byte[0];
                /*       */
            }
            /* 30590 */
            byte b3 = au[c1];
            /* 30591 */
            byte b4 = au[c2];
            /* 30592 */
            byte b5 = au[b1];
            /* 30593 */
            byte b6 = au[b2];
            /* 30594 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 30595 */
                return new byte[0];
                /*       */
            }
            /* 30597 */
            int m = b3 << 2 | b4 >>> 4;
            /* 30598 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 30599 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 30600 */
            arrayOfByte[b++] = (byte) m;
            /* 30601 */
            if (b < i) {
                /* 30602 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 30604 */
            if (b < i) {
                /* 30605 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 30608 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kJ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 30612 */
        if (paramInt2 % 4 != 0) {
            /* 30613 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 30616 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 30617 */
            paramInt2--;
            /*       */
        }
        /* 30619 */
        int i = paramInt2 * 3 / 4;
        /* 30620 */
        byte[] arrayOfByte = new byte[i];
        /* 30621 */
        int j = paramInt1;
        /* 30622 */
        int k = paramInt1 + paramInt2;
        /* 30623 */
        byte b = 0;
        /* 30624 */
        while (j < k) {
            /* 30625 */
            char c1 = paramArrayOfchar[j++];
            /* 30626 */
            char c2 = paramArrayOfchar[j++];
            /* 30627 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 30628 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 30630 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 30631 */
                return new byte[0];
                /*       */
            }
            /* 30633 */
            byte b3 = au[c1];
            /* 30634 */
            byte b4 = au[c2];
            /* 30635 */
            byte b5 = au[b1];
            /* 30636 */
            byte b6 = au[b2];
            /* 30637 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 30638 */
                return new byte[0];
                /*       */
            }
            /* 30640 */
            int m = b3 << 2 | b4 >>> 4;
            /* 30641 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 30642 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 30643 */
            arrayOfByte[b++] = (byte) m;
            /* 30644 */
            if (b < i) {
                /* 30645 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 30647 */
            if (b < i) {
                /* 30648 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 30651 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kK(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 30655 */
        if (paramInt2 % 4 != 0) {
            /* 30656 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 30659 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 30660 */
            paramInt2--;
            /*       */
        }
        /* 30662 */
        int i = paramInt2 * 3 / 4;
        /* 30663 */
        byte[] arrayOfByte = new byte[i];
        /* 30664 */
        int j = paramInt1;
        /* 30665 */
        int k = paramInt1 + paramInt2;
        /* 30666 */
        byte b = 0;
        /* 30667 */
        while (j < k) {
            /* 30668 */
            char c1 = paramArrayOfchar[j++];
            /* 30669 */
            char c2 = paramArrayOfchar[j++];
            /* 30670 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 30671 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 30673 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 30674 */
                return new byte[0];
                /*       */
            }
            /* 30676 */
            byte b3 = au[c1];
            /* 30677 */
            byte b4 = au[c2];
            /* 30678 */
            byte b5 = au[b1];
            /* 30679 */
            byte b6 = au[b2];
            /* 30680 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 30681 */
                return new byte[0];
                /*       */
            }
            /* 30683 */
            int m = b3 << 2 | b4 >>> 4;
            /* 30684 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 30685 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 30686 */
            arrayOfByte[b++] = (byte) m;
            /* 30687 */
            if (b < i) {
                /* 30688 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 30690 */
            if (b < i) {
                /* 30691 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 30694 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kL(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 30698 */
        if (paramInt2 % 4 != 0) {
            /* 30699 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 30702 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 30703 */
            paramInt2--;
            /*       */
        }
        /* 30705 */
        int i = paramInt2 * 3 / 4;
        /* 30706 */
        byte[] arrayOfByte = new byte[i];
        /* 30707 */
        int j = paramInt1;
        /* 30708 */
        int k = paramInt1 + paramInt2;
        /* 30709 */
        byte b = 0;
        /* 30710 */
        while (j < k) {
            /* 30711 */
            char c1 = paramArrayOfchar[j++];
            /* 30712 */
            char c2 = paramArrayOfchar[j++];
            /* 30713 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 30714 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 30716 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 30717 */
                return new byte[0];
                /*       */
            }
            /* 30719 */
            byte b3 = au[c1];
            /* 30720 */
            byte b4 = au[c2];
            /* 30721 */
            byte b5 = au[b1];
            /* 30722 */
            byte b6 = au[b2];
            /* 30723 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 30724 */
                return new byte[0];
                /*       */
            }
            /* 30726 */
            int m = b3 << 2 | b4 >>> 4;
            /* 30727 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 30728 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 30729 */
            arrayOfByte[b++] = (byte) m;
            /* 30730 */
            if (b < i) {
                /* 30731 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 30733 */
            if (b < i) {
                /* 30734 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 30737 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 30740 */   private static String be = "5bff5e6";
    /* 30741 */   private static String bf = "92162e3";
    /*       */
    /* 30743 */   private static String bg = "82ce873";
    /* 30744 */   private static String bh = "dbe2a0f";
    /*       */
    /* 30746 */   private static String bi = "d62d72";
    /* 30747 */   private static String bj = "b9e1f6f1";
    /*       */
    /* 30749 */   private static String bk = "c1be6f";
    /* 30750 */   private static String bl = "2d93b";
    /*       */
    /* 30752 */   private static String bm = "63b37a";
    /* 30753 */   private static String bn = "1c7dc";

    /*       */
    /*       */
    private static byte[] kM(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 30756 */
        if (paramInt2 % 4 != 0) {
            /* 30757 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 30760 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 30761 */
            paramInt2--;
            /*       */
        }
        /* 30763 */
        int i = paramInt2 * 3 / 4;
        /* 30764 */
        byte[] arrayOfByte = new byte[i];
        /* 30765 */
        int j = paramInt1;
        /* 30766 */
        int k = paramInt1 + paramInt2;
        /* 30767 */
        byte b = 0;
        /* 30768 */
        while (j < k) {
            /* 30769 */
            char c1 = paramArrayOfchar[j++];
            /* 30770 */
            char c2 = paramArrayOfchar[j++];
            /* 30771 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 30772 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 30774 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 30775 */
                return new byte[0];
                /*       */
            }
            /* 30777 */
            byte b3 = au[c1];
            /* 30778 */
            byte b4 = au[c2];
            /* 30779 */
            byte b5 = au[b1];
            /* 30780 */
            byte b6 = au[b2];
            /* 30781 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 30782 */
                return new byte[0];
                /*       */
            }
            /* 30784 */
            int m = b3 << 2 | b4 >>> 4;
            /* 30785 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 30786 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 30787 */
            arrayOfByte[b++] = (byte) m;
            /* 30788 */
            if (b < i) {
                /* 30789 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 30791 */
            if (b < i) {
                /* 30792 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 30795 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kN(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 30799 */
        if (paramInt2 % 4 != 0) {
            /* 30800 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 30803 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 30804 */
            paramInt2--;
            /*       */
        }
        /* 30806 */
        int i = paramInt2 * 3 / 4;
        /* 30807 */
        byte[] arrayOfByte = new byte[i];
        /* 30808 */
        int j = paramInt1;
        /* 30809 */
        int k = paramInt1 + paramInt2;
        /* 30810 */
        byte b = 0;
        /* 30811 */
        while (j < k) {
            /* 30812 */
            char c1 = paramArrayOfchar[j++];
            /* 30813 */
            char c2 = paramArrayOfchar[j++];
            /* 30814 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 30815 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 30817 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 30818 */
                return new byte[0];
                /*       */
            }
            /* 30820 */
            byte b3 = au[c1];
            /* 30821 */
            byte b4 = au[c2];
            /* 30822 */
            byte b5 = au[b1];
            /* 30823 */
            byte b6 = au[b2];
            /* 30824 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 30825 */
                return new byte[0];
                /*       */
            }
            /* 30827 */
            int m = b3 << 2 | b4 >>> 4;
            /* 30828 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 30829 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 30830 */
            arrayOfByte[b++] = (byte) m;
            /* 30831 */
            if (b < i) {
                /* 30832 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 30834 */
            if (b < i) {
                /* 30835 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 30838 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kO(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 30842 */
        if (paramInt2 % 4 != 0) {
            /* 30843 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 30846 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 30847 */
            paramInt2--;
            /*       */
        }
        /* 30849 */
        int i = paramInt2 * 3 / 4;
        /* 30850 */
        byte[] arrayOfByte = new byte[i];
        /* 30851 */
        int j = paramInt1;
        /* 30852 */
        int k = paramInt1 + paramInt2;
        /* 30853 */
        byte b = 0;
        /* 30854 */
        while (j < k) {
            /* 30855 */
            char c1 = paramArrayOfchar[j++];
            /* 30856 */
            char c2 = paramArrayOfchar[j++];
            /* 30857 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 30858 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 30860 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 30861 */
                return new byte[0];
                /*       */
            }
            /* 30863 */
            byte b3 = au[c1];
            /* 30864 */
            byte b4 = au[c2];
            /* 30865 */
            byte b5 = au[b1];
            /* 30866 */
            byte b6 = au[b2];
            /* 30867 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 30868 */
                return new byte[0];
                /*       */
            }
            /* 30870 */
            int m = b3 << 2 | b4 >>> 4;
            /* 30871 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 30872 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 30873 */
            arrayOfByte[b++] = (byte) m;
            /* 30874 */
            if (b < i) {
                /* 30875 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 30877 */
            if (b < i) {
                /* 30878 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 30881 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kP(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 30885 */
        if (paramInt2 % 4 != 0) {
            /* 30886 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 30889 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 30890 */
            paramInt2--;
            /*       */
        }
        /* 30892 */
        int i = paramInt2 * 3 / 4;
        /* 30893 */
        byte[] arrayOfByte = new byte[i];
        /* 30894 */
        int j = paramInt1;
        /* 30895 */
        int k = paramInt1 + paramInt2;
        /* 30896 */
        byte b = 0;
        /* 30897 */
        while (j < k) {
            /* 30898 */
            char c1 = paramArrayOfchar[j++];
            /* 30899 */
            char c2 = paramArrayOfchar[j++];
            /* 30900 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 30901 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 30903 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 30904 */
                return new byte[0];
                /*       */
            }
            /* 30906 */
            byte b3 = au[c1];
            /* 30907 */
            byte b4 = au[c2];
            /* 30908 */
            byte b5 = au[b1];
            /* 30909 */
            byte b6 = au[b2];
            /* 30910 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 30911 */
                return new byte[0];
                /*       */
            }
            /* 30913 */
            int m = b3 << 2 | b4 >>> 4;
            /* 30914 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 30915 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 30916 */
            arrayOfByte[b++] = (byte) m;
            /* 30917 */
            if (b < i) {
                /* 30918 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 30920 */
            if (b < i) {
                /* 30921 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 30924 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kQ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 30928 */
        if (paramInt2 % 4 != 0) {
            /* 30929 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 30932 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 30933 */
            paramInt2--;
            /*       */
        }
        /* 30935 */
        int i = paramInt2 * 3 / 4;
        /* 30936 */
        byte[] arrayOfByte = new byte[i];
        /* 30937 */
        int j = paramInt1;
        /* 30938 */
        int k = paramInt1 + paramInt2;
        /* 30939 */
        byte b = 0;
        /* 30940 */
        while (j < k) {
            /* 30941 */
            char c1 = paramArrayOfchar[j++];
            /* 30942 */
            char c2 = paramArrayOfchar[j++];
            /* 30943 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 30944 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 30946 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 30947 */
                return new byte[0];
                /*       */
            }
            /* 30949 */
            byte b3 = au[c1];
            /* 30950 */
            byte b4 = au[c2];
            /* 30951 */
            byte b5 = au[b1];
            /* 30952 */
            byte b6 = au[b2];
            /* 30953 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 30954 */
                return new byte[0];
                /*       */
            }
            /* 30956 */
            int m = b3 << 2 | b4 >>> 4;
            /* 30957 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 30958 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 30959 */
            arrayOfByte[b++] = (byte) m;
            /* 30960 */
            if (b < i) {
                /* 30961 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 30963 */
            if (b < i) {
                /* 30964 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 30967 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kR(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 30971 */
        if (paramInt2 % 4 != 0) {
            /* 30972 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 30975 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 30976 */
            paramInt2--;
            /*       */
        }
        /* 30978 */
        int i = paramInt2 * 3 / 4;
        /* 30979 */
        byte[] arrayOfByte = new byte[i];
        /* 30980 */
        int j = paramInt1;
        /* 30981 */
        int k = paramInt1 + paramInt2;
        /* 30982 */
        byte b = 0;
        /* 30983 */
        while (j < k) {
            /* 30984 */
            char c1 = paramArrayOfchar[j++];
            /* 30985 */
            char c2 = paramArrayOfchar[j++];
            /* 30986 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 30987 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 30989 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 30990 */
                return new byte[0];
                /*       */
            }
            /* 30992 */
            byte b3 = au[c1];
            /* 30993 */
            byte b4 = au[c2];
            /* 30994 */
            byte b5 = au[b1];
            /* 30995 */
            byte b6 = au[b2];
            /* 30996 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 30997 */
                return new byte[0];
                /*       */
            }
            /* 30999 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31000 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31001 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31002 */
            arrayOfByte[b++] = (byte) m;
            /* 31003 */
            if (b < i) {
                /* 31004 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31006 */
            if (b < i) {
                /* 31007 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31010 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 31013 */   private static String bo = "fd1ed7";
    /* 31014 */   private static String bp = "obj_15_1_x";
    /* 31015 */   private static String bq = "obj_15_2_x";
    /* 31016 */   private static String br = "obj_15_3_x";
    /* 31017 */   private static String bs = "obj_15_4_x";
    /* 31018 */   private static String bt = "obj_15_5_x";
    /* 31019 */   private static String bu = "obj_15_6_x";
    /* 31020 */   private static String bv = "obj_15_7_x";
    /* 31021 */   private static String bw = "obj_15_8_x";
    /* 31022 */   private static String bx = "obj_15_9_x";
    /* 31023 */   private static String by = "obj_15_10_x";
    /* 31024 */   private static String bz = "obj_15_11_x";
    /* 31025 */   private static String bA = "obj_15_12_x";
    /* 31026 */   private static String bB = "obj_15_13_x";
    /* 31027 */   private static String bC = "obj_15_14_x";
    /* 31028 */   private static String bD = "obj_15_15_x";
    /* 31029 */   private static String bE = "obj_15_16_x";
    /* 31030 */   private static String bF = "obj_15_17_x";
    /* 31031 */   private static String bG = "obj_15_18_x";
    /* 31032 */   private static String bH = "obj_15_19_x";
    /*       */
    /* 31034 */   private static String bI = "8bc9fe";
    /* 31035 */   private static String bJ = "obj_16_1_x";
    /* 31036 */   private static String bK = "obj_16_2_x";
    /* 31037 */   private static String bL = "obj_16_3_x";
    /* 31038 */   private static String bM = "obj_16_4_x";
    /* 31039 */   private static String bN = "obj_16_5_x";
    /* 31040 */   private static String bO = "obj_16_6_x";
    /* 31041 */   private static String bP = "obj_16_7_x";
    /* 31042 */   private static String bQ = "obj_16_8_x";
    /* 31043 */   private static String bR = "obj_16_9_x";
    /* 31044 */   private static String bS = "obj_16_10_x";
    /* 31045 */   private static String bT = "obj_16_11_x";
    /* 31046 */   private static String bU = "obj_16_12_x";
    /* 31047 */   private static String bV = "obj_16_13_x";
    /* 31048 */   private static String bW = "obj_16_14_x";
    /* 31049 */   private static String bX = "obj_16_15_x";
    /* 31050 */   private static String bY = "obj_16_16_x";
    /* 31051 */   private static String bZ = "obj_16_17_x";
    /* 31052 */   private static String ca = "obj_16_18_x";
    /* 31053 */   private static String cb = "obj_16_19_x";
    /*       */
    /* 31055 */   private static String cc = "06b9ae";
    /* 31056 */   private static String cd = "obj_17_1_x";
    /* 31057 */   private static String ce = "obj_17_2_x";
    /* 31058 */   private static String cf = "obj_17_3_x";
    /* 31059 */   private static String cg = "obj_17_4_x";
    /* 31060 */   private static String ch = "obj_17_5_x";
    /* 31061 */   private static String ci = "obj_17_6_x";
    /* 31062 */   private static String cj = "obj_17_7_x";
    /* 31063 */   private static String ck = "obj_17_8_x";
    /* 31064 */   private static String cl = "obj_17_9_x";
    /* 31065 */   private static String cm = "obj_17_10_x";
    /* 31066 */   private static String cn = "obj_17_11_x";
    /* 31067 */   private static String co = "obj_17_12_x";
    /* 31068 */   private static String cp = "obj_17_13_x";
    /* 31069 */   private static String cq = "obj_17_14_x";
    /* 31070 */   private static String cr = "obj_17_15_x";
    /* 31071 */   private static String cs = "obj_17_16_x";
    /* 31072 */   private static String ct = "obj_17_17_x";
    /* 31073 */   private static String cu = "obj_17_18_x";
    /* 31074 */   private static String cv = "obj_17_19_x";
    /*       */
    /* 31076 */   private static String cw = "cba9cc";
    /* 31077 */   private static String cx = "obj_18_1_x";
    /* 31078 */   private static String cy = "obj_18_2_x";
    /* 31079 */   private static String cz = "obj_18_3_x";
    /* 31080 */   private static String cA = "obj_18_4_x";
    /* 31081 */   private static String cB = "obj_18_5_x";
    /* 31082 */   private static String cC = "obj_18_6_x";
    /* 31083 */   private static String cD = "obj_18_7_x";
    /* 31084 */   private static String cE = "obj_18_8_x";
    /* 31085 */   private static String cF = "obj_18_9_x";
    /* 31086 */   private static String cG = "obj_18_10_x";
    /* 31087 */   private static String cH = "obj_18_11_x";
    /* 31088 */   private static String cI = "obj_18_12_x";
    /* 31089 */   private static String cJ = "obj_18_13_x";
    /* 31090 */   private static String cK = "obj_18_14_x";
    /* 31091 */   private static String cL = "obj_18_15_x";
    /* 31092 */   private static String cM = "obj_18_16_x";
    /* 31093 */   private static String cN = "obj_18_17_x";
    /* 31094 */   private static String cO = "obj_18_18_x";
    /* 31095 */   private static String cP = "obj_18_19_x";
    /*       */
    /* 31097 */   private static String cQ = "a1ae75d5";
    /* 31098 */   private static String cR = "obj_19_1_x";
    /* 31099 */   private static String cS = "obj_19_2_x";
    /* 31100 */   private static String cT = "obj_19_3_x";
    /* 31101 */   private static String cU = "obj_19_4_x";
    /* 31102 */   private static String cV = "obj_19_5_x";
    /* 31103 */   private static String cW = "obj_19_6_x";
    /* 31104 */   private static String cX = "obj_19_7_x";
    /* 31105 */   private static String cY = "obj_19_8_x";
    /* 31106 */   private static String cZ = "obj_19_9_x";
    /* 31107 */   private static String da = "obj_19_10_x";
    /* 31108 */   private static String db = "obj_19_11_x";
    /* 31109 */   private static String dc = "obj_19_12_x";
    /* 31110 */   private static String dd = "obj_19_13_x";
    /* 31111 */   private static String de = "obj_19_14_x";
    /* 31112 */   private static String df = "obj_19_15_x";
    /* 31113 */   private static String dg = "obj_19_16_x";
    /* 31114 */   private static String dh = "obj_19_17_x";
    /* 31115 */   private static String di = "obj_19_18_x";
    /* 31116 */   private static String dj = "obj_19_19_x";

    /*       */
    /*       */
    /*       */   String b() {
        /* 31120 */
        StringBuilder stringBuilder = new StringBuilder(i.length + j.length + k.length + l.length + m.length + n.length + o.length + p.length + q.length + r.length + s.length + t.length + u.length + v.length + w.length + x.length + y.length + z.length + A.length + B.length + C.length + D.length + E.length + F.length + G.length + H.length + I.length + J.length + K.length + L.length + M.length + N.length + O.length + P.length + Q.length);
        /* 31121 */
        stringBuilder.append(i);
        /* 31122 */
        stringBuilder.append(j);
        /*       */
        /* 31124 */
        byte[] arrayOfByte = stringBuilder.toString().getBytes();
        /*       */
        /*       */
        try {
            /* 31127 */
            if (h().equalsIgnoreCase(d()) && b(i(), arrayOfByte, new byte[]{ak, al, ap, aq, am, aj, aj, ar, as, al, aq, ap, am, an, ak, ak}) != null && b(i(), arrayOfByte, new byte[]{ak, al, ap, aq, am, aj, aj, ar, as, al, aq, ap, am, an, ak, ak}).equalsIgnoreCase(e())) {
                /* 31128 */
                n();
                /*       */
            }
            /* 31130 */
        } catch (Exception exception) {
            /* 31131 */
            exception.printStackTrace();
            /*       */
        }
        /*       */
        /*       */
        try {
            /* 31135 */
            if (!(ae + aN + aH + av + aB).equalsIgnoreCase(g(i())) && !(af + aO + aI + aw + aC).equalsIgnoreCase(g(i())) && !(ag + aP + aJ + ax + aD).equalsIgnoreCase(g(i())) && !(ah + aQ + aK + ay + aE).equalsIgnoreCase(g(i())) && !(ai + aR + aL + az + aF).equalsIgnoreCase(g(i())) && !l())
                /*       */ {
                /* 31137 */
                if (!b(i(), c(), new byte[]{ak, al, ap, aq, am, aj, aj, ar, as, al, aq, ap, am, an, ak, ak}).equalsIgnoreCase(h())) {
                    /* 31138 */
                    n();
                    /*       */
                }
                /*       */
                /* 31141 */
                n();
                /*       */
            }
            /*       */
            /* 31144 */
        } catch (Exception exception) {
            /* 31145 */
            exception.printStackTrace();
            /* 31146 */
            n();
            /*       */
        }
        /*       */
        /*       */
        try {
            /* 31150 */
            if (!(bo + bI + cc + cw + cQ).equalsIgnoreCase(g(j())) &&
                    /* 31151 */         !(bp + bJ + cd + cx + cR).equalsIgnoreCase(g(j())) &&
                    /* 31152 */         !(bq + bK + ce + cy + cS).equalsIgnoreCase(g(j())) &&
                    /* 31153 */         !(br + bL + cf + cz + cT).equalsIgnoreCase(g(j())) &&
                    /* 31154 */         !(bs + bM + cg + cA + cU).equalsIgnoreCase(g(j())) &&
                    /* 31155 */         !(bt + bN + ch + cB + cV).equalsIgnoreCase(g(j())) &&
                    /* 31156 */         !(bu + bO + ci + cC + cW).equalsIgnoreCase(g(j())) &&
                    /* 31157 */         !(bv + bP + cj + cD + cX).equalsIgnoreCase(g(j())) &&
                    /* 31158 */         !(bw + bQ + ck + cE + cY).equalsIgnoreCase(g(j())) &&
                    /* 31159 */         !(bx + bR + cl + cF + cZ).equalsIgnoreCase(g(j())) &&
                    /* 31160 */         !(by + bS + cm + cG + da).equalsIgnoreCase(g(j())) &&
                    /* 31161 */         !(bz + bT + cn + cH + db).equalsIgnoreCase(g(j())) &&
                    /* 31162 */         !(bA + bU + co + cI + dc).equalsIgnoreCase(g(j())) &&
                    /* 31163 */         !(bB + bV + cp + cJ + dd).equalsIgnoreCase(g(j())) &&
                    /* 31164 */         !(bC + bW + cq + cK + de).equalsIgnoreCase(g(j())) &&
                    /* 31165 */         !(bD + bX + cr + cL + df).equalsIgnoreCase(g(j())) &&
                    /* 31166 */         !(bE + bY + cs + cM + dg).equalsIgnoreCase(g(j())) &&
                    /* 31167 */         !(bF + bZ + ct + cN + dh).equalsIgnoreCase(g(j())) &&
                    /* 31168 */         !(bG + ca + cu + cO + di).equalsIgnoreCase(g(j())) &&
                    /* 31169 */         !(bH + cb + cv + cP + dj).equalsIgnoreCase(g(j())))
                /*       */ {
                /* 31171 */
                if (!b(i(), c(), new byte[]{ak, al, ap, aq, am, aj, aj, ar, as, al, aq, ap, am, an, ak, ak}).equalsIgnoreCase(h())) {
                    /* 31172 */
                    m();
                    /*       */
                }
                /*       */
                /* 31175 */
                m();
                /*       */
            }
            /*       */
            /* 31178 */
        } catch (Exception exception) {
            /* 31179 */
            exception.printStackTrace();
            /* 31180 */
            m();
            /*       */
        }
        /*       */
        /* 31183 */
        return "";
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kS(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31187 */
        if (paramInt2 % 4 != 0) {
            /* 31188 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31191 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31192 */
            paramInt2--;
            /*       */
        }
        /* 31194 */
        int i = paramInt2 * 3 / 4;
        /* 31195 */
        byte[] arrayOfByte = new byte[i];
        /* 31196 */
        int j = paramInt1;
        /* 31197 */
        int k = paramInt1 + paramInt2;
        /* 31198 */
        byte b = 0;
        /* 31199 */
        while (j < k) {
            /* 31200 */
            char c1 = paramArrayOfchar[j++];
            /* 31201 */
            char c2 = paramArrayOfchar[j++];
            /* 31202 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31203 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31205 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31206 */
                return new byte[0];
                /*       */
            }
            /* 31208 */
            byte b3 = au[c1];
            /* 31209 */
            byte b4 = au[c2];
            /* 31210 */
            byte b5 = au[b1];
            /* 31211 */
            byte b6 = au[b2];
            /* 31212 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31213 */
                return new byte[0];
                /*       */
            }
            /* 31215 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31216 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31217 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31218 */
            arrayOfByte[b++] = (byte) m;
            /* 31219 */
            if (b < i) {
                /* 31220 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31222 */
            if (b < i) {
                /* 31223 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31226 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kT(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31230 */
        if (paramInt2 % 4 != 0) {
            /* 31231 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31234 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31235 */
            paramInt2--;
            /*       */
        }
        /* 31237 */
        int i = paramInt2 * 3 / 4;
        /* 31238 */
        byte[] arrayOfByte = new byte[i];
        /* 31239 */
        int j = paramInt1;
        /* 31240 */
        int k = paramInt1 + paramInt2;
        /* 31241 */
        byte b = 0;
        /* 31242 */
        while (j < k) {
            /* 31243 */
            char c1 = paramArrayOfchar[j++];
            /* 31244 */
            char c2 = paramArrayOfchar[j++];
            /* 31245 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31246 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31248 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31249 */
                return new byte[0];
                /*       */
            }
            /* 31251 */
            byte b3 = au[c1];
            /* 31252 */
            byte b4 = au[c2];
            /* 31253 */
            byte b5 = au[b1];
            /* 31254 */
            byte b6 = au[b2];
            /* 31255 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31256 */
                return new byte[0];
                /*       */
            }
            /* 31258 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31259 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31260 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31261 */
            arrayOfByte[b++] = (byte) m;
            /* 31262 */
            if (b < i) {
                /* 31263 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31265 */
            if (b < i) {
                /* 31266 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31269 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] kU(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31274 */
        if (paramInt2 % 4 != 0) {
            /* 31275 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31278 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31279 */
            paramInt2--;
            /*       */
        }
        /* 31281 */
        int i = paramInt2 * 3 / 4;
        /* 31282 */
        byte[] arrayOfByte = new byte[i];
        /* 31283 */
        int j = paramInt1;
        /* 31284 */
        int k = paramInt1 + paramInt2;
        /* 31285 */
        byte b = 0;
        /* 31286 */
        while (j < k) {
            /* 31287 */
            char c1 = paramArrayOfchar[j++];
            /* 31288 */
            char c2 = paramArrayOfchar[j++];
            /* 31289 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31290 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31292 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31293 */
                return new byte[0];
                /*       */
            }
            /* 31295 */
            byte b3 = au[c1];
            /* 31296 */
            byte b4 = au[c2];
            /* 31297 */
            byte b5 = au[b1];
            /* 31298 */
            byte b6 = au[b2];
            /* 31299 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31300 */
                return new byte[0];
                /*       */
            }
            /* 31302 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31303 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31304 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31305 */
            arrayOfByte[b++] = (byte) m;
            /* 31306 */
            if (b < i) {
                /* 31307 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31309 */
            if (b < i) {
                /* 31310 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31313 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kV(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31317 */
        if (paramInt2 % 4 != 0) {
            /* 31318 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31321 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31322 */
            paramInt2--;
            /*       */
        }
        /* 31324 */
        int i = paramInt2 * 3 / 4;
        /* 31325 */
        byte[] arrayOfByte = new byte[i];
        /* 31326 */
        int j = paramInt1;
        /* 31327 */
        int k = paramInt1 + paramInt2;
        /* 31328 */
        byte b = 0;
        /* 31329 */
        while (j < k) {
            /* 31330 */
            char c1 = paramArrayOfchar[j++];
            /* 31331 */
            char c2 = paramArrayOfchar[j++];
            /* 31332 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31333 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31335 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31336 */
                return new byte[0];
                /*       */
            }
            /* 31338 */
            byte b3 = au[c1];
            /* 31339 */
            byte b4 = au[c2];
            /* 31340 */
            byte b5 = au[b1];
            /* 31341 */
            byte b6 = au[b2];
            /* 31342 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31343 */
                return new byte[0];
                /*       */
            }
            /* 31345 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31346 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31347 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31348 */
            arrayOfByte[b++] = (byte) m;
            /* 31349 */
            if (b < i) {
                /* 31350 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31352 */
            if (b < i) {
                /* 31353 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31356 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kW(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31360 */
        if (paramInt2 % 4 != 0) {
            /* 31361 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31364 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31365 */
            paramInt2--;
            /*       */
        }
        /* 31367 */
        int i = paramInt2 * 3 / 4;
        /* 31368 */
        byte[] arrayOfByte = new byte[i];
        /* 31369 */
        int j = paramInt1;
        /* 31370 */
        int k = paramInt1 + paramInt2;
        /* 31371 */
        byte b = 0;
        /* 31372 */
        while (j < k) {
            /* 31373 */
            char c1 = paramArrayOfchar[j++];
            /* 31374 */
            char c2 = paramArrayOfchar[j++];
            /* 31375 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31376 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31378 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31379 */
                return new byte[0];
                /*       */
            }
            /* 31381 */
            byte b3 = au[c1];
            /* 31382 */
            byte b4 = au[c2];
            /* 31383 */
            byte b5 = au[b1];
            /* 31384 */
            byte b6 = au[b2];
            /* 31385 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31386 */
                return new byte[0];
                /*       */
            }
            /* 31388 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31389 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31390 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31391 */
            arrayOfByte[b++] = (byte) m;
            /* 31392 */
            if (b < i) {
                /* 31393 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31395 */
            if (b < i) {
                /* 31396 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31399 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kX(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31403 */
        if (paramInt2 % 4 != 0) {
            /* 31404 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31407 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31408 */
            paramInt2--;
            /*       */
        }
        /* 31410 */
        int i = paramInt2 * 3 / 4;
        /* 31411 */
        byte[] arrayOfByte = new byte[i];
        /* 31412 */
        int j = paramInt1;
        /* 31413 */
        int k = paramInt1 + paramInt2;
        /* 31414 */
        byte b = 0;
        /* 31415 */
        while (j < k) {
            /* 31416 */
            char c1 = paramArrayOfchar[j++];
            /* 31417 */
            char c2 = paramArrayOfchar[j++];
            /* 31418 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31419 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31421 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31422 */
                return new byte[0];
                /*       */
            }
            /* 31424 */
            byte b3 = au[c1];
            /* 31425 */
            byte b4 = au[c2];
            /* 31426 */
            byte b5 = au[b1];
            /* 31427 */
            byte b6 = au[b2];
            /* 31428 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31429 */
                return new byte[0];
                /*       */
            }
            /* 31431 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31432 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31433 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31434 */
            arrayOfByte[b++] = (byte) m;
            /* 31435 */
            if (b < i) {
                /* 31436 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31438 */
            if (b < i) {
                /* 31439 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31442 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kY(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31446 */
        if (paramInt2 % 4 != 0) {
            /* 31447 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31450 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31451 */
            paramInt2--;
            /*       */
        }
        /* 31453 */
        int i = paramInt2 * 3 / 4;
        /* 31454 */
        byte[] arrayOfByte = new byte[i];
        /* 31455 */
        int j = paramInt1;
        /* 31456 */
        int k = paramInt1 + paramInt2;
        /* 31457 */
        byte b = 0;
        /* 31458 */
        while (j < k) {
            /* 31459 */
            char c1 = paramArrayOfchar[j++];
            /* 31460 */
            char c2 = paramArrayOfchar[j++];
            /* 31461 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31462 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31464 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31465 */
                return new byte[0];
                /*       */
            }
            /* 31467 */
            byte b3 = au[c1];
            /* 31468 */
            byte b4 = au[c2];
            /* 31469 */
            byte b5 = au[b1];
            /* 31470 */
            byte b6 = au[b2];
            /* 31471 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31472 */
                return new byte[0];
                /*       */
            }
            /* 31474 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31475 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31476 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31477 */
            arrayOfByte[b++] = (byte) m;
            /* 31478 */
            if (b < i) {
                /* 31479 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31481 */
            if (b < i) {
                /* 31482 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31485 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] kZ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31489 */
        if (paramInt2 % 4 != 0) {
            /* 31490 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31493 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31494 */
            paramInt2--;
            /*       */
        }
        /* 31496 */
        int i = paramInt2 * 3 / 4;
        /* 31497 */
        byte[] arrayOfByte = new byte[i];
        /* 31498 */
        int j = paramInt1;
        /* 31499 */
        int k = paramInt1 + paramInt2;
        /* 31500 */
        byte b = 0;
        /* 31501 */
        while (j < k) {
            /* 31502 */
            char c1 = paramArrayOfchar[j++];
            /* 31503 */
            char c2 = paramArrayOfchar[j++];
            /* 31504 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31505 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31507 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31508 */
                return new byte[0];
                /*       */
            }
            /* 31510 */
            byte b3 = au[c1];
            /* 31511 */
            byte b4 = au[c2];
            /* 31512 */
            byte b5 = au[b1];
            /* 31513 */
            byte b6 = au[b2];
            /* 31514 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31515 */
                return new byte[0];
                /*       */
            }
            /* 31517 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31518 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31519 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31520 */
            arrayOfByte[b++] = (byte) m;
            /* 31521 */
            if (b < i) {
                /* 31522 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31524 */
            if (b < i) {
                /* 31525 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31528 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] la(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31532 */
        if (paramInt2 % 4 != 0) {
            /* 31533 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31536 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31537 */
            paramInt2--;
            /*       */
        }
        /* 31539 */
        int i = paramInt2 * 3 / 4;
        /* 31540 */
        byte[] arrayOfByte = new byte[i];
        /* 31541 */
        int j = paramInt1;
        /* 31542 */
        int k = paramInt1 + paramInt2;
        /* 31543 */
        byte b = 0;
        /* 31544 */
        while (j < k) {
            /* 31545 */
            char c1 = paramArrayOfchar[j++];
            /* 31546 */
            char c2 = paramArrayOfchar[j++];
            /* 31547 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31548 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31550 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31551 */
                return new byte[0];
                /*       */
            }
            /* 31553 */
            byte b3 = au[c1];
            /* 31554 */
            byte b4 = au[c2];
            /* 31555 */
            byte b5 = au[b1];
            /* 31556 */
            byte b6 = au[b2];
            /* 31557 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31558 */
                return new byte[0];
                /*       */
            }
            /* 31560 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31561 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31562 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31563 */
            arrayOfByte[b++] = (byte) m;
            /* 31564 */
            if (b < i) {
                /* 31565 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31567 */
            if (b < i) {
                /* 31568 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31571 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lb(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31575 */
        if (paramInt2 % 4 != 0) {
            /* 31576 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31579 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31580 */
            paramInt2--;
            /*       */
        }
        /* 31582 */
        int i = paramInt2 * 3 / 4;
        /* 31583 */
        byte[] arrayOfByte = new byte[i];
        /* 31584 */
        int j = paramInt1;
        /* 31585 */
        int k = paramInt1 + paramInt2;
        /* 31586 */
        byte b = 0;
        /* 31587 */
        while (j < k) {
            /* 31588 */
            char c1 = paramArrayOfchar[j++];
            /* 31589 */
            char c2 = paramArrayOfchar[j++];
            /* 31590 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31591 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31593 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31594 */
                return new byte[0];
                /*       */
            }
            /* 31596 */
            byte b3 = au[c1];
            /* 31597 */
            byte b4 = au[c2];
            /* 31598 */
            byte b5 = au[b1];
            /* 31599 */
            byte b6 = au[b2];
            /* 31600 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31601 */
                return new byte[0];
                /*       */
            }
            /* 31603 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31604 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31605 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31606 */
            arrayOfByte[b++] = (byte) m;
            /* 31607 */
            if (b < i) {
                /* 31608 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31610 */
            if (b < i) {
                /* 31611 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31614 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lc(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31618 */
        if (paramInt2 % 4 != 0) {
            /* 31619 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31622 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31623 */
            paramInt2--;
            /*       */
        }
        /* 31625 */
        int i = paramInt2 * 3 / 4;
        /* 31626 */
        byte[] arrayOfByte = new byte[i];
        /* 31627 */
        int j = paramInt1;
        /* 31628 */
        int k = paramInt1 + paramInt2;
        /* 31629 */
        byte b = 0;
        /* 31630 */
        while (j < k) {
            /* 31631 */
            char c1 = paramArrayOfchar[j++];
            /* 31632 */
            char c2 = paramArrayOfchar[j++];
            /* 31633 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31634 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31636 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31637 */
                return new byte[0];
                /*       */
            }
            /* 31639 */
            byte b3 = au[c1];
            /* 31640 */
            byte b4 = au[c2];
            /* 31641 */
            byte b5 = au[b1];
            /* 31642 */
            byte b6 = au[b2];
            /* 31643 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31644 */
                return new byte[0];
                /*       */
            }
            /* 31646 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31647 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31648 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31649 */
            arrayOfByte[b++] = (byte) m;
            /* 31650 */
            if (b < i) {
                /* 31651 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31653 */
            if (b < i) {
                /* 31654 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31657 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ld(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31661 */
        if (paramInt2 % 4 != 0) {
            /* 31662 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31665 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31666 */
            paramInt2--;
            /*       */
        }
        /* 31668 */
        int i = paramInt2 * 3 / 4;
        /* 31669 */
        byte[] arrayOfByte = new byte[i];
        /* 31670 */
        int j = paramInt1;
        /* 31671 */
        int k = paramInt1 + paramInt2;
        /* 31672 */
        byte b = 0;
        /* 31673 */
        while (j < k) {
            /* 31674 */
            char c1 = paramArrayOfchar[j++];
            /* 31675 */
            char c2 = paramArrayOfchar[j++];
            /* 31676 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31677 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31679 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31680 */
                return new byte[0];
                /*       */
            }
            /* 31682 */
            byte b3 = au[c1];
            /* 31683 */
            byte b4 = au[c2];
            /* 31684 */
            byte b5 = au[b1];
            /* 31685 */
            byte b6 = au[b2];
            /* 31686 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31687 */
                return new byte[0];
                /*       */
            }
            /* 31689 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31690 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31691 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31692 */
            arrayOfByte[b++] = (byte) m;
            /* 31693 */
            if (b < i) {
                /* 31694 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31696 */
            if (b < i) {
                /* 31697 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31700 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] le(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31704 */
        if (paramInt2 % 4 != 0) {
            /* 31705 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31708 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31709 */
            paramInt2--;
            /*       */
        }
        /* 31711 */
        int i = paramInt2 * 3 / 4;
        /* 31712 */
        byte[] arrayOfByte = new byte[i];
        /* 31713 */
        int j = paramInt1;
        /* 31714 */
        int k = paramInt1 + paramInt2;
        /* 31715 */
        byte b = 0;
        /* 31716 */
        while (j < k) {
            /* 31717 */
            char c1 = paramArrayOfchar[j++];
            /* 31718 */
            char c2 = paramArrayOfchar[j++];
            /* 31719 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31720 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31722 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31723 */
                return new byte[0];
                /*       */
            }
            /* 31725 */
            byte b3 = au[c1];
            /* 31726 */
            byte b4 = au[c2];
            /* 31727 */
            byte b5 = au[b1];
            /* 31728 */
            byte b6 = au[b2];
            /* 31729 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31730 */
                return new byte[0];
                /*       */
            }
            /* 31732 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31733 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31734 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31735 */
            arrayOfByte[b++] = (byte) m;
            /* 31736 */
            if (b < i) {
                /* 31737 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31739 */
            if (b < i) {
                /* 31740 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31743 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lf(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31747 */
        if (paramInt2 % 4 != 0) {
            /* 31748 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31751 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31752 */
            paramInt2--;
            /*       */
        }
        /* 31754 */
        int i = paramInt2 * 3 / 4;
        /* 31755 */
        byte[] arrayOfByte = new byte[i];
        /* 31756 */
        int j = paramInt1;
        /* 31757 */
        int k = paramInt1 + paramInt2;
        /* 31758 */
        byte b = 0;
        /* 31759 */
        while (j < k) {
            /* 31760 */
            char c1 = paramArrayOfchar[j++];
            /* 31761 */
            char c2 = paramArrayOfchar[j++];
            /* 31762 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31763 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31765 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31766 */
                return new byte[0];
                /*       */
            }
            /* 31768 */
            byte b3 = au[c1];
            /* 31769 */
            byte b4 = au[c2];
            /* 31770 */
            byte b5 = au[b1];
            /* 31771 */
            byte b6 = au[b2];
            /* 31772 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31773 */
                return new byte[0];
                /*       */
            }
            /* 31775 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31776 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31777 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31778 */
            arrayOfByte[b++] = (byte) m;
            /* 31779 */
            if (b < i) {
                /* 31780 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31782 */
            if (b < i) {
                /* 31783 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31786 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lg(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31790 */
        if (paramInt2 % 4 != 0) {
            /* 31791 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31794 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31795 */
            paramInt2--;
            /*       */
        }
        /* 31797 */
        int i = paramInt2 * 3 / 4;
        /* 31798 */
        byte[] arrayOfByte = new byte[i];
        /* 31799 */
        int j = paramInt1;
        /* 31800 */
        int k = paramInt1 + paramInt2;
        /* 31801 */
        byte b = 0;
        /* 31802 */
        while (j < k) {
            /* 31803 */
            char c1 = paramArrayOfchar[j++];
            /* 31804 */
            char c2 = paramArrayOfchar[j++];
            /* 31805 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31806 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31808 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31809 */
                return new byte[0];
                /*       */
            }
            /* 31811 */
            byte b3 = au[c1];
            /* 31812 */
            byte b4 = au[c2];
            /* 31813 */
            byte b5 = au[b1];
            /* 31814 */
            byte b6 = au[b2];
            /* 31815 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31816 */
                return new byte[0];
                /*       */
            }
            /* 31818 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31819 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31820 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31821 */
            arrayOfByte[b++] = (byte) m;
            /* 31822 */
            if (b < i) {
                /* 31823 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31825 */
            if (b < i) {
                /* 31826 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31829 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lh(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 31833 */
        if (paramInt2 % 4 != 0) {
            /* 31834 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 31837 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 31838 */
            paramInt2--;
            /*       */
        }
        /* 31840 */
        int i = paramInt2 * 3 / 4;
        /* 31841 */
        byte[] arrayOfByte = new byte[i];
        /* 31842 */
        int j = paramInt1;
        /* 31843 */
        int k = paramInt1 + paramInt2;
        /* 31844 */
        byte b = 0;
        /* 31845 */
        while (j < k) {
            /* 31846 */
            char c1 = paramArrayOfchar[j++];
            /* 31847 */
            char c2 = paramArrayOfchar[j++];
            /* 31848 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 31849 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 31851 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 31852 */
                return new byte[0];
                /*       */
            }
            /* 31854 */
            byte b3 = au[c1];
            /* 31855 */
            byte b4 = au[c2];
            /* 31856 */
            byte b5 = au[b1];
            /* 31857 */
            byte b6 = au[b2];
            /* 31858 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 31859 */
                return new byte[0];
                /*       */
            }
            /* 31861 */
            int m = b3 << 2 | b4 >>> 4;
            /* 31862 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 31863 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 31864 */
            arrayOfByte[b++] = (byte) m;
            /* 31865 */
            if (b < i) {
                /* 31866 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 31868 */
            if (b < i) {
                /* 31869 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 31872 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */   static {
        /* 31876 */
        b = 0;
        /* 31877 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 31878 */
            J[b++] = c;
            /*       */
        }
        /* 31880 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 31881 */
            J[b++] = c;
            /*       */
        }
        /* 31883 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 31884 */
            J[b++] = c;
            /*       */
        }
        /* 31886 */
        J[b++] = '+';
        /* 31887 */
        J[b++] = '/';
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /* 32149 */
        b = 0;
        /* 32150 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 32151 */
            K[b++] = c;
            /*       */
        }
        /* 32153 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 32154 */
            K[b++] = c;
            /*       */
        }
        /* 32156 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 32157 */
            K[b++] = c;
            /*       */
        }
        /* 32159 */
        K[b++] = '+';
        /* 32160 */
        K[b++] = '/';
        /*       */
    }

    private static byte[] li(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] lj(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] lk(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    /*       */
    private static byte[] ll(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    /*       */
    private static byte[] lm(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    /*       */
    private static byte[] ln(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    /* 32165 */
    private static byte[] lo(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) {
            /* 32166 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32169 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32170 */
            paramInt2--;
            /*       */
        }
        /* 32172 */
        int i = paramInt2 * 3 / 4;
        /* 32173 */
        byte[] arrayOfByte = new byte[i];
        /* 32174 */
        int j = paramInt1;
        /* 32175 */
        int k = paramInt1 + paramInt2;
        /* 32176 */
        byte b = 0;
        /* 32177 */
        while (j < k) {
            /* 32178 */
            char c1 = paramArrayOfchar[j++];
            /* 32179 */
            char c2 = paramArrayOfchar[j++];
            /* 32180 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32181 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32183 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32184 */
                return new byte[0];
                /*       */
            }
            /* 32186 */
            byte b3 = au[c1];
            /* 32187 */
            byte b4 = au[c2];
            /* 32188 */
            byte b5 = au[b1];
            /* 32189 */
            byte b6 = au[b2];
            /* 32190 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32191 */
                return new byte[0];
                /*       */
            }
            /* 32193 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32194 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32195 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32196 */
            arrayOfByte[b++] = (byte) m;
            /* 32197 */
            if (b < i) {
                /* 32198 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32200 */
            if (b < i) {
                /* 32201 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32204 */
        return arrayOfByte;
    }

    /*       */
    /*       */
    /*       */
    private static byte[] lp(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32208 */
        if (paramInt2 % 4 != 0) {
            /* 32209 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32212 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32213 */
            paramInt2--;
            /*       */
        }
        /* 32215 */
        int i = paramInt2 * 3 / 4;
        /* 32216 */
        byte[] arrayOfByte = new byte[i];
        /* 32217 */
        int j = paramInt1;
        /* 32218 */
        int k = paramInt1 + paramInt2;
        /* 32219 */
        byte b = 0;
        /* 32220 */
        while (j < k) {
            /* 32221 */
            char c1 = paramArrayOfchar[j++];
            /* 32222 */
            char c2 = paramArrayOfchar[j++];
            /* 32223 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32224 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32226 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32227 */
                return new byte[0];
                /*       */
            }
            /* 32229 */
            byte b3 = au[c1];
            /* 32230 */
            byte b4 = au[c2];
            /* 32231 */
            byte b5 = au[b1];
            /* 32232 */
            byte b6 = au[b2];
            /* 32233 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32234 */
                return new byte[0];
                /*       */
            }
            /* 32236 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32237 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32238 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32239 */
            arrayOfByte[b++] = (byte) m;
            /* 32240 */
            if (b < i) {
                /* 32241 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32243 */
            if (b < i) {
                /* 32244 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32247 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lq(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32251 */
        if (paramInt2 % 4 != 0) {
            /* 32252 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32255 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32256 */
            paramInt2--;
            /*       */
        }
        /* 32258 */
        int i = paramInt2 * 3 / 4;
        /* 32259 */
        byte[] arrayOfByte = new byte[i];
        /* 32260 */
        int j = paramInt1;
        /* 32261 */
        int k = paramInt1 + paramInt2;
        /* 32262 */
        byte b = 0;
        /* 32263 */
        while (j < k) {
            /* 32264 */
            char c1 = paramArrayOfchar[j++];
            /* 32265 */
            char c2 = paramArrayOfchar[j++];
            /* 32266 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32267 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32269 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32270 */
                return new byte[0];
                /*       */
            }
            /* 32272 */
            byte b3 = au[c1];
            /* 32273 */
            byte b4 = au[c2];
            /* 32274 */
            byte b5 = au[b1];
            /* 32275 */
            byte b6 = au[b2];
            /* 32276 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32277 */
                return new byte[0];
                /*       */
            }
            /* 32279 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32280 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32281 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32282 */
            arrayOfByte[b++] = (byte) m;
            /* 32283 */
            if (b < i) {
                /* 32284 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32286 */
            if (b < i) {
                /* 32287 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32290 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lr(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32294 */
        if (paramInt2 % 4 != 0) {
            /* 32295 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32298 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32299 */
            paramInt2--;
            /*       */
        }
        /* 32301 */
        int i = paramInt2 * 3 / 4;
        /* 32302 */
        byte[] arrayOfByte = new byte[i];
        /* 32303 */
        int j = paramInt1;
        /* 32304 */
        int k = paramInt1 + paramInt2;
        /* 32305 */
        byte b = 0;
        /* 32306 */
        while (j < k) {
            /* 32307 */
            char c1 = paramArrayOfchar[j++];
            /* 32308 */
            char c2 = paramArrayOfchar[j++];
            /* 32309 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32310 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32312 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32313 */
                return new byte[0];
                /*       */
            }
            /* 32315 */
            byte b3 = au[c1];
            /* 32316 */
            byte b4 = au[c2];
            /* 32317 */
            byte b5 = au[b1];
            /* 32318 */
            byte b6 = au[b2];
            /* 32319 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32320 */
                return new byte[0];
                /*       */
            }
            /* 32322 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32323 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32324 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32325 */
            arrayOfByte[b++] = (byte) m;
            /* 32326 */
            if (b < i) {
                /* 32327 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32329 */
            if (b < i) {
                /* 32330 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32333 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ls(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32337 */
        if (paramInt2 % 4 != 0) {
            /* 32338 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32341 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32342 */
            paramInt2--;
            /*       */
        }
        /* 32344 */
        int i = paramInt2 * 3 / 4;
        /* 32345 */
        byte[] arrayOfByte = new byte[i];
        /* 32346 */
        int j = paramInt1;
        /* 32347 */
        int k = paramInt1 + paramInt2;
        /* 32348 */
        byte b = 0;
        /* 32349 */
        while (j < k) {
            /* 32350 */
            char c1 = paramArrayOfchar[j++];
            /* 32351 */
            char c2 = paramArrayOfchar[j++];
            /* 32352 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32353 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32355 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32356 */
                return new byte[0];
                /*       */
            }
            /* 32358 */
            byte b3 = au[c1];
            /* 32359 */
            byte b4 = au[c2];
            /* 32360 */
            byte b5 = au[b1];
            /* 32361 */
            byte b6 = au[b2];
            /* 32362 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32363 */
                return new byte[0];
                /*       */
            }
            /* 32365 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32366 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32367 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32368 */
            arrayOfByte[b++] = (byte) m;
            /* 32369 */
            if (b < i) {
                /* 32370 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32372 */
            if (b < i) {
                /* 32373 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32376 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] f(String paramString) {
        /* 32380 */
        return a(paramString.toCharArray());
        /*       */
    }

    /*       */
    /*       */
    private static byte[] a(char[] paramArrayOfchar) {
        /* 32384 */
        return ls(paramArrayOfchar, 0, paramArrayOfchar.length);
        /*       */
    }

    /*       */
    /*       */
    private String h() {
        /* 32388 */
        return R + S + T + U + V + W + X;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lt(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32392 */
        if (paramInt2 % 4 != 0) {
            /* 32393 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32396 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32397 */
            paramInt2--;
            /*       */
        }
        /* 32399 */
        int i = paramInt2 * 3 / 4;
        /* 32400 */
        byte[] arrayOfByte = new byte[i];
        /* 32401 */
        int j = paramInt1;
        /* 32402 */
        int k = paramInt1 + paramInt2;
        /* 32403 */
        byte b = 0;
        /* 32404 */
        while (j < k) {
            /* 32405 */
            char c1 = paramArrayOfchar[j++];
            /* 32406 */
            char c2 = paramArrayOfchar[j++];
            /* 32407 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32408 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32410 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32411 */
                return new byte[0];
                /*       */
            }
            /* 32413 */
            byte b3 = au[c1];
            /* 32414 */
            byte b4 = au[c2];
            /* 32415 */
            byte b5 = au[b1];
            /* 32416 */
            byte b6 = au[b2];
            /* 32417 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32418 */
                return new byte[0];
                /*       */
            }
            /* 32420 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32421 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32422 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32423 */
            arrayOfByte[b++] = (byte) m;
            /* 32424 */
            if (b < i) {
                /* 32425 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32427 */
            if (b < i) {
                /* 32428 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32431 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lu(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32435 */
        if (paramInt2 % 4 != 0) {
            /* 32436 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32439 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32440 */
            paramInt2--;
            /*       */
        }
        /* 32442 */
        int i = paramInt2 * 3 / 4;
        /* 32443 */
        byte[] arrayOfByte = new byte[i];
        /* 32444 */
        int j = paramInt1;
        /* 32445 */
        int k = paramInt1 + paramInt2;
        /* 32446 */
        byte b = 0;
        /* 32447 */
        while (j < k) {
            /* 32448 */
            char c1 = paramArrayOfchar[j++];
            /* 32449 */
            char c2 = paramArrayOfchar[j++];
            /* 32450 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32451 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32453 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32454 */
                return new byte[0];
                /*       */
            }
            /* 32456 */
            byte b3 = au[c1];
            /* 32457 */
            byte b4 = au[c2];
            /* 32458 */
            byte b5 = au[b1];
            /* 32459 */
            byte b6 = au[b2];
            /* 32460 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32461 */
                return new byte[0];
                /*       */
            }
            /* 32463 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32464 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32465 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32466 */
            arrayOfByte[b++] = (byte) m;
            /* 32467 */
            if (b < i) {
                /* 32468 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32470 */
            if (b < i) {
                /* 32471 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32474 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lv(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32478 */
        if (paramInt2 % 4 != 0) {
            /* 32479 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32482 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32483 */
            paramInt2--;
            /*       */
        }
        /* 32485 */
        int i = paramInt2 * 3 / 4;
        /* 32486 */
        byte[] arrayOfByte = new byte[i];
        /* 32487 */
        int j = paramInt1;
        /* 32488 */
        int k = paramInt1 + paramInt2;
        /* 32489 */
        byte b = 0;
        /* 32490 */
        while (j < k) {
            /* 32491 */
            char c1 = paramArrayOfchar[j++];
            /* 32492 */
            char c2 = paramArrayOfchar[j++];
            /* 32493 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32494 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32496 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32497 */
                return new byte[0];
                /*       */
            }
            /* 32499 */
            byte b3 = au[c1];
            /* 32500 */
            byte b4 = au[c2];
            /* 32501 */
            byte b5 = au[b1];
            /* 32502 */
            byte b6 = au[b2];
            /* 32503 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32504 */
                return new byte[0];
                /*       */
            }
            /* 32506 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32507 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32508 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32509 */
            arrayOfByte[b++] = (byte) m;
            /* 32510 */
            if (b < i) {
                /* 32511 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32513 */
            if (b < i) {
                /* 32514 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32517 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lw(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32521 */
        if (paramInt2 % 4 != 0) {
            /* 32522 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32525 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32526 */
            paramInt2--;
            /*       */
        }
        /* 32528 */
        int i = paramInt2 * 3 / 4;
        /* 32529 */
        byte[] arrayOfByte = new byte[i];
        /* 32530 */
        int j = paramInt1;
        /* 32531 */
        int k = paramInt1 + paramInt2;
        /* 32532 */
        byte b = 0;
        /* 32533 */
        while (j < k) {
            /* 32534 */
            char c1 = paramArrayOfchar[j++];
            /* 32535 */
            char c2 = paramArrayOfchar[j++];
            /* 32536 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32537 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32539 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32540 */
                return new byte[0];
                /*       */
            }
            /* 32542 */
            byte b3 = au[c1];
            /* 32543 */
            byte b4 = au[c2];
            /* 32544 */
            byte b5 = au[b1];
            /* 32545 */
            byte b6 = au[b2];
            /* 32546 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32547 */
                return new byte[0];
                /*       */
            }
            /* 32549 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32550 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32551 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32552 */
            arrayOfByte[b++] = (byte) m;
            /* 32553 */
            if (b < i) {
                /* 32554 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32556 */
            if (b < i) {
                /* 32557 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32560 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lx(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32564 */
        if (paramInt2 % 4 != 0) {
            /* 32565 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32568 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32569 */
            paramInt2--;
            /*       */
        }
        /* 32571 */
        int i = paramInt2 * 3 / 4;
        /* 32572 */
        byte[] arrayOfByte = new byte[i];
        /* 32573 */
        int j = paramInt1;
        /* 32574 */
        int k = paramInt1 + paramInt2;
        /* 32575 */
        byte b = 0;
        /* 32576 */
        while (j < k) {
            /* 32577 */
            char c1 = paramArrayOfchar[j++];
            /* 32578 */
            char c2 = paramArrayOfchar[j++];
            /* 32579 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32580 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32582 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32583 */
                return new byte[0];
                /*       */
            }
            /* 32585 */
            byte b3 = au[c1];
            /* 32586 */
            byte b4 = au[c2];
            /* 32587 */
            byte b5 = au[b1];
            /* 32588 */
            byte b6 = au[b2];
            /* 32589 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32590 */
                return new byte[0];
                /*       */
            }
            /* 32592 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32593 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32594 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32595 */
            arrayOfByte[b++] = (byte) m;
            /* 32596 */
            if (b < i) {
                /* 32597 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32599 */
            if (b < i) {
                /* 32600 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32603 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ly(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32607 */
        if (paramInt2 % 4 != 0) {
            /* 32608 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32611 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32612 */
            paramInt2--;
            /*       */
        }
        /* 32614 */
        int i = paramInt2 * 3 / 4;
        /* 32615 */
        byte[] arrayOfByte = new byte[i];
        /* 32616 */
        int j = paramInt1;
        /* 32617 */
        int k = paramInt1 + paramInt2;
        /* 32618 */
        byte b = 0;
        /* 32619 */
        while (j < k) {
            /* 32620 */
            char c1 = paramArrayOfchar[j++];
            /* 32621 */
            char c2 = paramArrayOfchar[j++];
            /* 32622 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32623 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32625 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32626 */
                return new byte[0];
                /*       */
            }
            /* 32628 */
            byte b3 = au[c1];
            /* 32629 */
            byte b4 = au[c2];
            /* 32630 */
            byte b5 = au[b1];
            /* 32631 */
            byte b6 = au[b2];
            /* 32632 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32633 */
                return new byte[0];
                /*       */
            }
            /* 32635 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32636 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32637 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32638 */
            arrayOfByte[b++] = (byte) m;
            /* 32639 */
            if (b < i) {
                /* 32640 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32642 */
            if (b < i) {
                /* 32643 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32646 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lz(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32650 */
        if (paramInt2 % 4 != 0) {
            /* 32651 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32654 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32655 */
            paramInt2--;
            /*       */
        }
        /* 32657 */
        int i = paramInt2 * 3 / 4;
        /* 32658 */
        byte[] arrayOfByte = new byte[i];
        /* 32659 */
        int j = paramInt1;
        /* 32660 */
        int k = paramInt1 + paramInt2;
        /* 32661 */
        byte b = 0;
        /* 32662 */
        while (j < k) {
            /* 32663 */
            char c1 = paramArrayOfchar[j++];
            /* 32664 */
            char c2 = paramArrayOfchar[j++];
            /* 32665 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32666 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32668 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32669 */
                return new byte[0];
                /*       */
            }
            /* 32671 */
            byte b3 = au[c1];
            /* 32672 */
            byte b4 = au[c2];
            /* 32673 */
            byte b5 = au[b1];
            /* 32674 */
            byte b6 = au[b2];
            /* 32675 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32676 */
                return new byte[0];
                /*       */
            }
            /* 32678 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32679 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32680 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32681 */
            arrayOfByte[b++] = (byte) m;
            /* 32682 */
            if (b < i) {
                /* 32683 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32685 */
            if (b < i) {
                /* 32686 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32689 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lA(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32693 */
        if (paramInt2 % 4 != 0) {
            /* 32694 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32697 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32698 */
            paramInt2--;
            /*       */
        }
        /* 32700 */
        int i = paramInt2 * 3 / 4;
        /* 32701 */
        byte[] arrayOfByte = new byte[i];
        /* 32702 */
        int j = paramInt1;
        /* 32703 */
        int k = paramInt1 + paramInt2;
        /* 32704 */
        byte b = 0;
        /* 32705 */
        while (j < k) {
            /* 32706 */
            char c1 = paramArrayOfchar[j++];
            /* 32707 */
            char c2 = paramArrayOfchar[j++];
            /* 32708 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32709 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32711 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32712 */
                return new byte[0];
                /*       */
            }
            /* 32714 */
            byte b3 = au[c1];
            /* 32715 */
            byte b4 = au[c2];
            /* 32716 */
            byte b5 = au[b1];
            /* 32717 */
            byte b6 = au[b2];
            /* 32718 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32719 */
                return new byte[0];
                /*       */
            }
            /* 32721 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32722 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32723 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32724 */
            arrayOfByte[b++] = (byte) m;
            /* 32725 */
            if (b < i) {
                /* 32726 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32728 */
            if (b < i) {
                /* 32729 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32732 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static String g(String paramString) {
        /* 32736 */
        String str = paramString.replaceAll("\\s", "");
        /*       */
        try {
            /* 32738 */
            String[] arrayOfString = {"M", "D", "5"};
            /* 32739 */
            MessageDigest messageDigest = MessageDigest.getInstance(arrayOfString[0] + arrayOfString[1] + arrayOfString[2]);
            /* 32740 */
            messageDigest.update(str.getBytes());
            /*       */
            /* 32742 */
            byte[] arrayOfByte = messageDigest.digest();
            /*       */
            /*       */
            /* 32745 */
            StringBuffer stringBuffer1 = new StringBuffer();
            /* 32746 */
            for (byte b1 = 0; b1 < arrayOfByte.length; b1++) {
                /* 32747 */
                stringBuffer1.append(Integer.toString((arrayOfByte[b1] & 0xFF) + 256, 16).substring(1));
                /*       */
            }
            /*       */
            /*       */
            /* 32751 */
            StringBuffer stringBuffer2 = new StringBuffer();
            /* 32752 */
            for (byte b2 = 0; b2 < arrayOfByte.length; b2++) {
                /* 32753 */
                String str1 = Integer.toHexString(0xFF & arrayOfByte[b2]);
                /* 32754 */
                if (str1.length() == 1) stringBuffer2.append('0');
                /* 32755 */
                stringBuffer2.append(str1);
                /*       */
            }
            /*       */
            /* 32758 */
            return stringBuffer2.toString();
            /*       */
        }
        /* 32760 */ catch (Exception exception) {
            /*       */
            /*       */
            /*       */
            /* 32764 */
            return "";
            /*       */
        }
        /*       */
    }

    /*       */
    private static byte[] lB(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32768 */
        if (paramInt2 % 4 != 0) {
            /* 32769 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32772 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32773 */
            paramInt2--;
            /*       */
        }
        /* 32775 */
        int i = paramInt2 * 3 / 4;
        /* 32776 */
        byte[] arrayOfByte = new byte[i];
        /* 32777 */
        int j = paramInt1;
        /* 32778 */
        int k = paramInt1 + paramInt2;
        /* 32779 */
        byte b = 0;
        /* 32780 */
        while (j < k) {
            /* 32781 */
            char c1 = paramArrayOfchar[j++];
            /* 32782 */
            char c2 = paramArrayOfchar[j++];
            /* 32783 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32784 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32786 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32787 */
                return new byte[0];
                /*       */
            }
            /* 32789 */
            byte b3 = au[c1];
            /* 32790 */
            byte b4 = au[c2];
            /* 32791 */
            byte b5 = au[b1];
            /* 32792 */
            byte b6 = au[b2];
            /* 32793 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32794 */
                return new byte[0];
                /*       */
            }
            /* 32796 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32797 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32798 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32799 */
            arrayOfByte[b++] = (byte) m;
            /* 32800 */
            if (b < i) {
                /* 32801 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32803 */
            if (b < i) {
                /* 32804 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32807 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lC(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32811 */
        if (paramInt2 % 4 != 0) {
            /* 32812 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32815 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32816 */
            paramInt2--;
            /*       */
        }
        /* 32818 */
        int i = paramInt2 * 3 / 4;
        /* 32819 */
        byte[] arrayOfByte = new byte[i];
        /* 32820 */
        int j = paramInt1;
        /* 32821 */
        int k = paramInt1 + paramInt2;
        /* 32822 */
        byte b = 0;
        /* 32823 */
        while (j < k) {
            /* 32824 */
            char c1 = paramArrayOfchar[j++];
            /* 32825 */
            char c2 = paramArrayOfchar[j++];
            /* 32826 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32827 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32829 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32830 */
                return new byte[0];
                /*       */
            }
            /* 32832 */
            byte b3 = au[c1];
            /* 32833 */
            byte b4 = au[c2];
            /* 32834 */
            byte b5 = au[b1];
            /* 32835 */
            byte b6 = au[b2];
            /* 32836 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32837 */
                return new byte[0];
                /*       */
            }
            /* 32839 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32840 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32841 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32842 */
            arrayOfByte[b++] = (byte) m;
            /* 32843 */
            if (b < i) {
                /* 32844 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32846 */
            if (b < i) {
                /* 32847 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32850 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lD(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32854 */
        if (paramInt2 % 4 != 0) {
            /* 32855 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32858 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32859 */
            paramInt2--;
            /*       */
        }
        /* 32861 */
        int i = paramInt2 * 3 / 4;
        /* 32862 */
        byte[] arrayOfByte = new byte[i];
        /* 32863 */
        int j = paramInt1;
        /* 32864 */
        int k = paramInt1 + paramInt2;
        /* 32865 */
        byte b = 0;
        /* 32866 */
        while (j < k) {
            /* 32867 */
            char c1 = paramArrayOfchar[j++];
            /* 32868 */
            char c2 = paramArrayOfchar[j++];
            /* 32869 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32870 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32872 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32873 */
                return new byte[0];
                /*       */
            }
            /* 32875 */
            byte b3 = au[c1];
            /* 32876 */
            byte b4 = au[c2];
            /* 32877 */
            byte b5 = au[b1];
            /* 32878 */
            byte b6 = au[b2];
            /* 32879 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32880 */
                return new byte[0];
                /*       */
            }
            /* 32882 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32883 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32884 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32885 */
            arrayOfByte[b++] = (byte) m;
            /* 32886 */
            if (b < i) {
                /* 32887 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32889 */
            if (b < i) {
                /* 32890 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32893 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lE(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 32897 */
        if (paramInt2 % 4 != 0) {
            /* 32898 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 32901 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 32902 */
            paramInt2--;
            /*       */
        }
        /* 32904 */
        int i = paramInt2 * 3 / 4;
        /* 32905 */
        byte[] arrayOfByte = new byte[i];
        /* 32906 */
        int j = paramInt1;
        /* 32907 */
        int k = paramInt1 + paramInt2;
        /* 32908 */
        byte b = 0;
        /* 32909 */
        while (j < k) {
            /* 32910 */
            char c1 = paramArrayOfchar[j++];
            /* 32911 */
            char c2 = paramArrayOfchar[j++];
            /* 32912 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 32913 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 32915 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 32916 */
                return new byte[0];
                /*       */
            }
            /* 32918 */
            byte b3 = au[c1];
            /* 32919 */
            byte b4 = au[c2];
            /* 32920 */
            byte b5 = au[b1];
            /* 32921 */
            byte b6 = au[b2];
            /* 32922 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 32923 */
                return new byte[0];
                /*       */
            }
            /* 32925 */
            int m = b3 << 2 | b4 >>> 4;
            /* 32926 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 32927 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 32928 */
            arrayOfByte[b++] = (byte) m;
            /* 32929 */
            if (b < i) {
                /* 32930 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 32932 */
            if (b < i) {
                /* 32933 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 32936 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */   class aq
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 32943 */     private double c = 0.0D;
        /* 32944 */     private double d = 0.0D;
        /* 32945 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public aq(a this$0) {
            /* 32950 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 32955 */
            if (param1Int == 0 || param1Int == 1)
                /* 32956 */ return 1;
            /* 32957 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 32966 */
            double d = param1Double;
            /* 32967 */
            if (this.f == true)
                /* 32968 */ d = Math.toRadians(param1Double);
            /* 32969 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 32974 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 32980 */
            byte b1 = 0;
            /* 32981 */
            byte b2 = 0;
            /* 32982 */
            byte b3 = 40;
            /* 32983 */
            byte b4 = 41;
            /* 32984 */
            String str = param1String;
            /* 32985 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 32986 */
                if (param1String.charAt(b5) == b3) {
                    /* 32987 */
                    b1++;
                    /* 32988 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 32989 */
                    b2++;
                    /*       */
                }
                /* 32991 */
            }
            while (b1 > 0) {
                /* 32992 */
                str = str + b4;
                /* 32993 */
                b1--;
                /*       */
            }
            /* 32995 */
            while (b2 > 0) {
                /* 32996 */
                str = b3 + str;
                /* 32997 */
                b2--;
                /*       */
            }
            /* 32999 */
            str = b(str);
            /* 33000 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 33005 */
            String str = "";
            /* 33006 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 33007 */
                str = str + param1String.charAt(b);
                /* 33008 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 33010 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 33011 */ str = str + '*';
                    /* 33012 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 33013 */ str = str + '1';
                    /*       */
                }
                /* 33015 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lF(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33020 */
        if (paramInt2 % 4 != 0) {
            /* 33021 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33024 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33025 */
            paramInt2--;
            /*       */
        }
        /* 33027 */
        int i = paramInt2 * 3 / 4;
        /* 33028 */
        byte[] arrayOfByte = new byte[i];
        /* 33029 */
        int j = paramInt1;
        /* 33030 */
        int k = paramInt1 + paramInt2;
        /* 33031 */
        byte b = 0;
        /* 33032 */
        while (j < k) {
            /* 33033 */
            char c1 = paramArrayOfchar[j++];
            /* 33034 */
            char c2 = paramArrayOfchar[j++];
            /* 33035 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33036 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33038 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33039 */
                return new byte[0];
                /*       */
            }
            /* 33041 */
            byte b3 = au[c1];
            /* 33042 */
            byte b4 = au[c2];
            /* 33043 */
            byte b5 = au[b1];
            /* 33044 */
            byte b6 = au[b2];
            /* 33045 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33046 */
                return new byte[0];
                /*       */
            }
            /* 33048 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33049 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33050 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33051 */
            arrayOfByte[b++] = (byte) m;
            /* 33052 */
            if (b < i) {
                /* 33053 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33055 */
            if (b < i) {
                /* 33056 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33059 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lG(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33063 */
        if (paramInt2 % 4 != 0) {
            /* 33064 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33067 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33068 */
            paramInt2--;
            /*       */
        }
        /* 33070 */
        int i = paramInt2 * 3 / 4;
        /* 33071 */
        byte[] arrayOfByte = new byte[i];
        /* 33072 */
        int j = paramInt1;
        /* 33073 */
        int k = paramInt1 + paramInt2;
        /* 33074 */
        byte b = 0;
        /* 33075 */
        while (j < k) {
            /* 33076 */
            char c1 = paramArrayOfchar[j++];
            /* 33077 */
            char c2 = paramArrayOfchar[j++];
            /* 33078 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33079 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33081 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33082 */
                return new byte[0];
                /*       */
            }
            /* 33084 */
            byte b3 = au[c1];
            /* 33085 */
            byte b4 = au[c2];
            /* 33086 */
            byte b5 = au[b1];
            /* 33087 */
            byte b6 = au[b2];
            /* 33088 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33089 */
                return new byte[0];
                /*       */
            }
            /* 33091 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33092 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33093 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33094 */
            arrayOfByte[b++] = (byte) m;
            /* 33095 */
            if (b < i) {
                /* 33096 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33098 */
            if (b < i) {
                /* 33099 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33102 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lH(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33106 */
        if (paramInt2 % 4 != 0) {
            /* 33107 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33110 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33111 */
            paramInt2--;
            /*       */
        }
        /* 33113 */
        int i = paramInt2 * 3 / 4;
        /* 33114 */
        byte[] arrayOfByte = new byte[i];
        /* 33115 */
        int j = paramInt1;
        /* 33116 */
        int k = paramInt1 + paramInt2;
        /* 33117 */
        byte b = 0;
        /* 33118 */
        while (j < k) {
            /* 33119 */
            char c1 = paramArrayOfchar[j++];
            /* 33120 */
            char c2 = paramArrayOfchar[j++];
            /* 33121 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33122 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33124 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33125 */
                return new byte[0];
                /*       */
            }
            /* 33127 */
            byte b3 = au[c1];
            /* 33128 */
            byte b4 = au[c2];
            /* 33129 */
            byte b5 = au[b1];
            /* 33130 */
            byte b6 = au[b2];
            /* 33131 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33132 */
                return new byte[0];
                /*       */
            }
            /* 33134 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33135 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33136 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33137 */
            arrayOfByte[b++] = (byte) m;
            /* 33138 */
            if (b < i) {
                /* 33139 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33141 */
            if (b < i) {
                /* 33142 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33145 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lI(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33149 */
        if (paramInt2 % 4 != 0) {
            /* 33150 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33153 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33154 */
            paramInt2--;
            /*       */
        }
        /* 33156 */
        int i = paramInt2 * 3 / 4;
        /* 33157 */
        byte[] arrayOfByte = new byte[i];
        /* 33158 */
        int j = paramInt1;
        /* 33159 */
        int k = paramInt1 + paramInt2;
        /* 33160 */
        byte b = 0;
        /* 33161 */
        while (j < k) {
            /* 33162 */
            char c1 = paramArrayOfchar[j++];
            /* 33163 */
            char c2 = paramArrayOfchar[j++];
            /* 33164 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33165 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33167 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33168 */
                return new byte[0];
                /*       */
            }
            /* 33170 */
            byte b3 = au[c1];
            /* 33171 */
            byte b4 = au[c2];
            /* 33172 */
            byte b5 = au[b1];
            /* 33173 */
            byte b6 = au[b2];
            /* 33174 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33175 */
                return new byte[0];
                /*       */
            }
            /* 33177 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33178 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33179 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33180 */
            arrayOfByte[b++] = (byte) m;
            /* 33181 */
            if (b < i) {
                /* 33182 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33184 */
            if (b < i) {
                /* 33185 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33188 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private String i() {
        /* 33192 */
        return (this.a.getApplicationInfo()).packageName;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lJ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33196 */
        if (paramInt2 % 4 != 0) {
            /* 33197 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33200 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33201 */
            paramInt2--;
            /*       */
        }
        /* 33203 */
        int i = paramInt2 * 3 / 4;
        /* 33204 */
        byte[] arrayOfByte = new byte[i];
        /* 33205 */
        int j = paramInt1;
        /* 33206 */
        int k = paramInt1 + paramInt2;
        /* 33207 */
        byte b = 0;
        /* 33208 */
        while (j < k) {
            /* 33209 */
            char c1 = paramArrayOfchar[j++];
            /* 33210 */
            char c2 = paramArrayOfchar[j++];
            /* 33211 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33212 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33214 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33215 */
                return new byte[0];
                /*       */
            }
            /* 33217 */
            byte b3 = au[c1];
            /* 33218 */
            byte b4 = au[c2];
            /* 33219 */
            byte b5 = au[b1];
            /* 33220 */
            byte b6 = au[b2];
            /* 33221 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33222 */
                return new byte[0];
                /*       */
            }
            /* 33224 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33225 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33226 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33227 */
            arrayOfByte[b++] = (byte) m;
            /* 33228 */
            if (b < i) {
                /* 33229 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33231 */
            if (b < i) {
                /* 33232 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33235 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private String j() {
        /* 33240 */
        String str1 = "S";
        /* 33241 */
        String str2 = "ER";
        /* 33242 */
        String str3 = "V";
        /* 33243 */
        String str4 = "ER";
        /* 33244 */
        String str5 = "";
        /* 33245 */
        String str6 = "U";
        /* 33246 */
        String str7 = "R";
        /* 33247 */
        String str8 = "L";
        /*       */
        /*       */
        try {
            /* 33250 */
            return (new URL(GeneralFunctions.retrieveValue(str1 + str2 + str3 + str4 + str5 + str6 + str7 + str8, this.a))).getHost();
            /* 33251 */
        } catch (Exception exception) {
            /* 33252 */
            return "";
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */
    /*       */
    private String k() {
        /* 33259 */
        String str1 = "S";
        /* 33260 */
        String str2 = "ER";
        /* 33261 */
        String str3 = "V";
        /* 33262 */
        String str4 = "ER";
        /* 33263 */
        String str5 = "";
        /* 33264 */
        String str6 = "U";
        /* 33265 */
        String str7 = "R";
        /* 33266 */
        String str8 = "L";
        /*       */
        /*       */
        try {
            /* 33269 */
            return GeneralFunctions.retrieveValue(str1 + str2 + str3 + str4 + str5 + str6 + str7 + str8, this.a);
            /* 33270 */
        } catch (Exception exception) {
            /* 33271 */
            return "";
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] lK(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33277 */
        if (paramInt2 % 4 != 0) {
            /* 33278 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33281 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33282 */
            paramInt2--;
            /*       */
        }
        /* 33284 */
        int i = paramInt2 * 3 / 4;
        /* 33285 */
        byte[] arrayOfByte = new byte[i];
        /* 33286 */
        int j = paramInt1;
        /* 33287 */
        int k = paramInt1 + paramInt2;
        /* 33288 */
        byte b = 0;
        /* 33289 */
        while (j < k) {
            /* 33290 */
            char c1 = paramArrayOfchar[j++];
            /* 33291 */
            char c2 = paramArrayOfchar[j++];
            /* 33292 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33293 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33295 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33296 */
                return new byte[0];
                /*       */
            }
            /* 33298 */
            byte b3 = au[c1];
            /* 33299 */
            byte b4 = au[c2];
            /* 33300 */
            byte b5 = au[b1];
            /* 33301 */
            byte b6 = au[b2];
            /* 33302 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33303 */
                return new byte[0];
                /*       */
            }
            /* 33305 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33306 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33307 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33308 */
            arrayOfByte[b++] = (byte) m;
            /* 33309 */
            if (b < i) {
                /* 33310 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33312 */
            if (b < i) {
                /* 33313 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33316 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lL(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33320 */
        if (paramInt2 % 4 != 0) {
            /* 33321 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33324 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33325 */
            paramInt2--;
            /*       */
        }
        /* 33327 */
        int i = paramInt2 * 3 / 4;
        /* 33328 */
        byte[] arrayOfByte = new byte[i];
        /* 33329 */
        int j = paramInt1;
        /* 33330 */
        int k = paramInt1 + paramInt2;
        /* 33331 */
        byte b = 0;
        /* 33332 */
        while (j < k) {
            /* 33333 */
            char c1 = paramArrayOfchar[j++];
            /* 33334 */
            char c2 = paramArrayOfchar[j++];
            /* 33335 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33336 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33338 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33339 */
                return new byte[0];
                /*       */
            }
            /* 33341 */
            byte b3 = au[c1];
            /* 33342 */
            byte b4 = au[c2];
            /* 33343 */
            byte b5 = au[b1];
            /* 33344 */
            byte b6 = au[b2];
            /* 33345 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33346 */
                return new byte[0];
                /*       */
            }
            /* 33348 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33349 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33350 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33351 */
            arrayOfByte[b++] = (byte) m;
            /* 33352 */
            if (b < i) {
                /* 33353 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33355 */
            if (b < i) {
                /* 33356 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33359 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lM(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33363 */
        if (paramInt2 % 4 != 0) {
            /* 33364 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33367 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33368 */
            paramInt2--;
            /*       */
        }
        /* 33370 */
        int i = paramInt2 * 3 / 4;
        /* 33371 */
        byte[] arrayOfByte = new byte[i];
        /* 33372 */
        int j = paramInt1;
        /* 33373 */
        int k = paramInt1 + paramInt2;
        /* 33374 */
        byte b = 0;
        /* 33375 */
        while (j < k) {
            /* 33376 */
            char c1 = paramArrayOfchar[j++];
            /* 33377 */
            char c2 = paramArrayOfchar[j++];
            /* 33378 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33379 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33381 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33382 */
                return new byte[0];
                /*       */
            }
            /* 33384 */
            byte b3 = au[c1];
            /* 33385 */
            byte b4 = au[c2];
            /* 33386 */
            byte b5 = au[b1];
            /* 33387 */
            byte b6 = au[b2];
            /* 33388 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33389 */
                return new byte[0];
                /*       */
            }
            /* 33391 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33392 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33393 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33394 */
            arrayOfByte[b++] = (byte) m;
            /* 33395 */
            if (b < i) {
                /* 33396 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33398 */
            if (b < i) {
                /* 33399 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33402 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 33405 */   private static String dk = "z$C&";

    /*       */
    /*       */
    /*       */
    private final byte[] a(byte[] paramArrayOfbyte1, byte[] paramArrayOfbyte2, byte[] paramArrayOfbyte3) throws Exception {
        /* 33409 */
        Cipher cipher = Cipher.getInstance(d());
        /* 33410 */
        SecretKeySpec secretKeySpec = new SecretKeySpec(paramArrayOfbyte2, e());
        /* 33411 */
        IvParameterSpec ivParameterSpec = new IvParameterSpec(paramArrayOfbyte3);
        /* 33412 */
        cipher.init(1, secretKeySpec, ivParameterSpec);
        /* 33413 */
        return cipher.doFinal(paramArrayOfbyte1);
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] lN(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33418 */
        if (paramInt2 % 4 != 0) {
            /* 33419 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33422 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33423 */
            paramInt2--;
            /*       */
        }
        /* 33425 */
        int i = paramInt2 * 3 / 4;
        /* 33426 */
        byte[] arrayOfByte = new byte[i];
        /* 33427 */
        int j = paramInt1;
        /* 33428 */
        int k = paramInt1 + paramInt2;
        /* 33429 */
        byte b = 0;
        /* 33430 */
        while (j < k) {
            /* 33431 */
            char c1 = paramArrayOfchar[j++];
            /* 33432 */
            char c2 = paramArrayOfchar[j++];
            /* 33433 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33434 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33436 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33437 */
                return new byte[0];
                /*       */
            }
            /* 33439 */
            byte b3 = au[c1];
            /* 33440 */
            byte b4 = au[c2];
            /* 33441 */
            byte b5 = au[b1];
            /* 33442 */
            byte b6 = au[b2];
            /* 33443 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33444 */
                return new byte[0];
                /*       */
            }
            /* 33446 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33447 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33448 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33449 */
            arrayOfByte[b++] = (byte) m;
            /* 33450 */
            if (b < i) {
                /* 33451 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33453 */
            if (b < i) {
                /* 33454 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33457 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lO(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33461 */
        if (paramInt2 % 4 != 0) {
            /* 33462 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33465 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33466 */
            paramInt2--;
            /*       */
        }
        /* 33468 */
        int i = paramInt2 * 3 / 4;
        /* 33469 */
        byte[] arrayOfByte = new byte[i];
        /* 33470 */
        int j = paramInt1;
        /* 33471 */
        int k = paramInt1 + paramInt2;
        /* 33472 */
        byte b = 0;
        /* 33473 */
        while (j < k) {
            /* 33474 */
            char c1 = paramArrayOfchar[j++];
            /* 33475 */
            char c2 = paramArrayOfchar[j++];
            /* 33476 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33477 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33479 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33480 */
                return new byte[0];
                /*       */
            }
            /* 33482 */
            byte b3 = au[c1];
            /* 33483 */
            byte b4 = au[c2];
            /* 33484 */
            byte b5 = au[b1];
            /* 33485 */
            byte b6 = au[b2];
            /* 33486 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33487 */
                return new byte[0];
                /*       */
            }
            /* 33489 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33490 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33491 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33492 */
            arrayOfByte[b++] = (byte) m;
            /* 33493 */
            if (b < i) {
                /* 33494 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33496 */
            if (b < i) {
                /* 33497 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33500 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lP(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33504 */
        if (paramInt2 % 4 != 0) {
            /* 33505 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33508 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33509 */
            paramInt2--;
            /*       */
        }
        /* 33511 */
        int i = paramInt2 * 3 / 4;
        /* 33512 */
        byte[] arrayOfByte = new byte[i];
        /* 33513 */
        int j = paramInt1;
        /* 33514 */
        int k = paramInt1 + paramInt2;
        /* 33515 */
        byte b = 0;
        /* 33516 */
        while (j < k) {
            /* 33517 */
            char c1 = paramArrayOfchar[j++];
            /* 33518 */
            char c2 = paramArrayOfchar[j++];
            /* 33519 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33520 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33522 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33523 */
                return new byte[0];
                /*       */
            }
            /* 33525 */
            byte b3 = au[c1];
            /* 33526 */
            byte b4 = au[c2];
            /* 33527 */
            byte b5 = au[b1];
            /* 33528 */
            byte b6 = au[b2];
            /* 33529 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33530 */
                return new byte[0];
                /*       */
            }
            /* 33532 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33533 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33534 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33535 */
            arrayOfByte[b++] = (byte) m;
            /* 33536 */
            if (b < i) {
                /* 33537 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33539 */
            if (b < i) {
                /* 33540 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33543 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lQ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33547 */
        if (paramInt2 % 4 != 0) {
            /* 33548 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33551 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33552 */
            paramInt2--;
            /*       */
        }
        /* 33554 */
        int i = paramInt2 * 3 / 4;
        /* 33555 */
        byte[] arrayOfByte = new byte[i];
        /* 33556 */
        int j = paramInt1;
        /* 33557 */
        int k = paramInt1 + paramInt2;
        /* 33558 */
        byte b = 0;
        /* 33559 */
        while (j < k) {
            /* 33560 */
            char c1 = paramArrayOfchar[j++];
            /* 33561 */
            char c2 = paramArrayOfchar[j++];
            /* 33562 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33563 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33565 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33566 */
                return new byte[0];
                /*       */
            }
            /* 33568 */
            byte b3 = au[c1];
            /* 33569 */
            byte b4 = au[c2];
            /* 33570 */
            byte b5 = au[b1];
            /* 33571 */
            byte b6 = au[b2];
            /* 33572 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33573 */
                return new byte[0];
                /*       */
            }
            /* 33575 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33576 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33577 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33578 */
            arrayOfByte[b++] = (byte) m;
            /* 33579 */
            if (b < i) {
                /* 33580 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33582 */
            if (b < i) {
                /* 33583 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33586 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lR(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33590 */
        if (paramInt2 % 4 != 0) {
            /* 33591 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33594 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33595 */
            paramInt2--;
            /*       */
        }
        /* 33597 */
        int i = paramInt2 * 3 / 4;
        /* 33598 */
        byte[] arrayOfByte = new byte[i];
        /* 33599 */
        int j = paramInt1;
        /* 33600 */
        int k = paramInt1 + paramInt2;
        /* 33601 */
        byte b = 0;
        /* 33602 */
        while (j < k) {
            /* 33603 */
            char c1 = paramArrayOfchar[j++];
            /* 33604 */
            char c2 = paramArrayOfchar[j++];
            /* 33605 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33606 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33608 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33609 */
                return new byte[0];
                /*       */
            }
            /* 33611 */
            byte b3 = au[c1];
            /* 33612 */
            byte b4 = au[c2];
            /* 33613 */
            byte b5 = au[b1];
            /* 33614 */
            byte b6 = au[b2];
            /* 33615 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33616 */
                return new byte[0];
                /*       */
            }
            /* 33618 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33619 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33620 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33621 */
            arrayOfByte[b++] = (byte) m;
            /* 33622 */
            if (b < i) {
                /* 33623 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33625 */
            if (b < i) {
                /* 33626 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33629 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lS(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33633 */
        if (paramInt2 % 4 != 0) {
            /* 33634 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33637 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33638 */
            paramInt2--;
            /*       */
        }
        /* 33640 */
        int i = paramInt2 * 3 / 4;
        /* 33641 */
        byte[] arrayOfByte = new byte[i];
        /* 33642 */
        int j = paramInt1;
        /* 33643 */
        int k = paramInt1 + paramInt2;
        /* 33644 */
        byte b = 0;
        /* 33645 */
        while (j < k) {
            /* 33646 */
            char c1 = paramArrayOfchar[j++];
            /* 33647 */
            char c2 = paramArrayOfchar[j++];
            /* 33648 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33649 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33651 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33652 */
                return new byte[0];
                /*       */
            }
            /* 33654 */
            byte b3 = au[c1];
            /* 33655 */
            byte b4 = au[c2];
            /* 33656 */
            byte b5 = au[b1];
            /* 33657 */
            byte b6 = au[b2];
            /* 33658 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33659 */
                return new byte[0];
                /*       */
            }
            /* 33661 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33662 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33663 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33664 */
            arrayOfByte[b++] = (byte) m;
            /* 33665 */
            if (b < i) {
                /* 33666 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33668 */
            if (b < i) {
                /* 33669 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33672 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lT(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33676 */
        if (paramInt2 % 4 != 0) {
            /* 33677 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33680 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33681 */
            paramInt2--;
            /*       */
        }
        /* 33683 */
        int i = paramInt2 * 3 / 4;
        /* 33684 */
        byte[] arrayOfByte = new byte[i];
        /* 33685 */
        int j = paramInt1;
        /* 33686 */
        int k = paramInt1 + paramInt2;
        /* 33687 */
        byte b = 0;
        /* 33688 */
        while (j < k) {
            /* 33689 */
            char c1 = paramArrayOfchar[j++];
            /* 33690 */
            char c2 = paramArrayOfchar[j++];
            /* 33691 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33692 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33694 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33695 */
                return new byte[0];
                /*       */
            }
            /* 33697 */
            byte b3 = au[c1];
            /* 33698 */
            byte b4 = au[c2];
            /* 33699 */
            byte b5 = au[b1];
            /* 33700 */
            byte b6 = au[b2];
            /* 33701 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33702 */
                return new byte[0];
                /*       */
            }
            /* 33704 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33705 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33706 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33707 */
            arrayOfByte[b++] = (byte) m;
            /* 33708 */
            if (b < i) {
                /* 33709 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33711 */
            if (b < i) {
                /* 33712 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33715 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lU(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33719 */
        if (paramInt2 % 4 != 0) {
            /* 33720 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33723 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33724 */
            paramInt2--;
            /*       */
        }
        /* 33726 */
        int i = paramInt2 * 3 / 4;
        /* 33727 */
        byte[] arrayOfByte = new byte[i];
        /* 33728 */
        int j = paramInt1;
        /* 33729 */
        int k = paramInt1 + paramInt2;
        /* 33730 */
        byte b = 0;
        /* 33731 */
        while (j < k) {
            /* 33732 */
            char c1 = paramArrayOfchar[j++];
            /* 33733 */
            char c2 = paramArrayOfchar[j++];
            /* 33734 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33735 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33737 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33738 */
                return new byte[0];
                /*       */
            }
            /* 33740 */
            byte b3 = au[c1];
            /* 33741 */
            byte b4 = au[c2];
            /* 33742 */
            byte b5 = au[b1];
            /* 33743 */
            byte b6 = au[b2];
            /* 33744 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33745 */
                return new byte[0];
                /*       */
            }
            /* 33747 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33748 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33749 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33750 */
            arrayOfByte[b++] = (byte) m;
            /* 33751 */
            if (b < i) {
                /* 33752 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33754 */
            if (b < i) {
                /* 33755 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33758 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */
    /*       */
    private final String b(String paramString, byte[] paramArrayOfbyte1, byte[] paramArrayOfbyte2) throws Exception {
        /* 33764 */
        byte[] arrayOfByte = paramString.getBytes();
        /* 33765 */
        return arrayOfByte.toString();
        /*       */
    }

    /*       */
    /*       */
    /*       */
    /*       */
    private static byte[] lV(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33771 */
        if (paramInt2 % 4 != 0) {
            /* 33772 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33775 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33776 */
            paramInt2--;
            /*       */
        }
        /* 33778 */
        int i = paramInt2 * 3 / 4;
        /* 33779 */
        byte[] arrayOfByte = new byte[i];
        /* 33780 */
        int j = paramInt1;
        /* 33781 */
        int k = paramInt1 + paramInt2;
        /* 33782 */
        byte b = 0;
        /* 33783 */
        while (j < k) {
            /* 33784 */
            char c1 = paramArrayOfchar[j++];
            /* 33785 */
            char c2 = paramArrayOfchar[j++];
            /* 33786 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33787 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33789 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33790 */
                return new byte[0];
                /*       */
            }
            /* 33792 */
            byte b3 = au[c1];
            /* 33793 */
            byte b4 = au[c2];
            /* 33794 */
            byte b5 = au[b1];
            /* 33795 */
            byte b6 = au[b2];
            /* 33796 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33797 */
                return new byte[0];
                /*       */
            }
            /* 33799 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33800 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33801 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33802 */
            arrayOfByte[b++] = (byte) m;
            /* 33803 */
            if (b < i) {
                /* 33804 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33806 */
            if (b < i) {
                /* 33807 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33810 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lW(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33814 */
        if (paramInt2 % 4 != 0) {
            /* 33815 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33818 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33819 */
            paramInt2--;
            /*       */
        }
        /* 33821 */
        int i = paramInt2 * 3 / 4;
        /* 33822 */
        byte[] arrayOfByte = new byte[i];
        /* 33823 */
        int j = paramInt1;
        /* 33824 */
        int k = paramInt1 + paramInt2;
        /* 33825 */
        byte b = 0;
        /* 33826 */
        while (j < k) {
            /* 33827 */
            char c1 = paramArrayOfchar[j++];
            /* 33828 */
            char c2 = paramArrayOfchar[j++];
            /* 33829 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33830 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33832 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33833 */
                return new byte[0];
                /*       */
            }
            /* 33835 */
            byte b3 = au[c1];
            /* 33836 */
            byte b4 = au[c2];
            /* 33837 */
            byte b5 = au[b1];
            /* 33838 */
            byte b6 = au[b2];
            /* 33839 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33840 */
                return new byte[0];
                /*       */
            }
            /* 33842 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33843 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33844 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33845 */
            arrayOfByte[b++] = (byte) m;
            /* 33846 */
            if (b < i) {
                /* 33847 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33849 */
            if (b < i) {
                /* 33850 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33853 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lX(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33857 */
        if (paramInt2 % 4 != 0) {
            /* 33858 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33861 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33862 */
            paramInt2--;
            /*       */
        }
        /* 33864 */
        int i = paramInt2 * 3 / 4;
        /* 33865 */
        byte[] arrayOfByte = new byte[i];
        /* 33866 */
        int j = paramInt1;
        /* 33867 */
        int k = paramInt1 + paramInt2;
        /* 33868 */
        byte b = 0;
        /* 33869 */
        while (j < k) {
            /* 33870 */
            char c1 = paramArrayOfchar[j++];
            /* 33871 */
            char c2 = paramArrayOfchar[j++];
            /* 33872 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33873 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33875 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33876 */
                return new byte[0];
                /*       */
            }
            /* 33878 */
            byte b3 = au[c1];
            /* 33879 */
            byte b4 = au[c2];
            /* 33880 */
            byte b5 = au[b1];
            /* 33881 */
            byte b6 = au[b2];
            /* 33882 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33883 */
                return new byte[0];
                /*       */
            }
            /* 33885 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33886 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33887 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33888 */
            arrayOfByte[b++] = (byte) m;
            /* 33889 */
            if (b < i) {
                /* 33890 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33892 */
            if (b < i) {
                /* 33893 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33896 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lY(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33900 */
        if (paramInt2 % 4 != 0) {
            /* 33901 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33904 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33905 */
            paramInt2--;
            /*       */
        }
        /* 33907 */
        int i = paramInt2 * 3 / 4;
        /* 33908 */
        byte[] arrayOfByte = new byte[i];
        /* 33909 */
        int j = paramInt1;
        /* 33910 */
        int k = paramInt1 + paramInt2;
        /* 33911 */
        byte b = 0;
        /* 33912 */
        while (j < k) {
            /* 33913 */
            char c1 = paramArrayOfchar[j++];
            /* 33914 */
            char c2 = paramArrayOfchar[j++];
            /* 33915 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33916 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33918 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33919 */
                return new byte[0];
                /*       */
            }
            /* 33921 */
            byte b3 = au[c1];
            /* 33922 */
            byte b4 = au[c2];
            /* 33923 */
            byte b5 = au[b1];
            /* 33924 */
            byte b6 = au[b2];
            /* 33925 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33926 */
                return new byte[0];
                /*       */
            }
            /* 33928 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33929 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33930 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33931 */
            arrayOfByte[b++] = (byte) m;
            /* 33932 */
            if (b < i) {
                /* 33933 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33935 */
            if (b < i) {
                /* 33936 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33939 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] lZ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33943 */
        if (paramInt2 % 4 != 0) {
            /* 33944 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33947 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33948 */
            paramInt2--;
            /*       */
        }
        /* 33950 */
        int i = paramInt2 * 3 / 4;
        /* 33951 */
        byte[] arrayOfByte = new byte[i];
        /* 33952 */
        int j = paramInt1;
        /* 33953 */
        int k = paramInt1 + paramInt2;
        /* 33954 */
        byte b = 0;
        /* 33955 */
        while (j < k) {
            /* 33956 */
            char c1 = paramArrayOfchar[j++];
            /* 33957 */
            char c2 = paramArrayOfchar[j++];
            /* 33958 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 33959 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 33961 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 33962 */
                return new byte[0];
                /*       */
            }
            /* 33964 */
            byte b3 = au[c1];
            /* 33965 */
            byte b4 = au[c2];
            /* 33966 */
            byte b5 = au[b1];
            /* 33967 */
            byte b6 = au[b2];
            /* 33968 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 33969 */
                return new byte[0];
                /*       */
            }
            /* 33971 */
            int m = b3 << 2 | b4 >>> 4;
            /* 33972 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 33973 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 33974 */
            arrayOfByte[b++] = (byte) m;
            /* 33975 */
            if (b < i) {
                /* 33976 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 33978 */
            if (b < i) {
                /* 33979 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 33982 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ma(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 33986 */
        if (paramInt2 % 4 != 0) {
            /* 33987 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 33990 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 33991 */
            paramInt2--;
            /*       */
        }
        /* 33993 */
        int i = paramInt2 * 3 / 4;
        /* 33994 */
        byte[] arrayOfByte = new byte[i];
        /* 33995 */
        int j = paramInt1;
        /* 33996 */
        int k = paramInt1 + paramInt2;
        /* 33997 */
        byte b = 0;
        /* 33998 */
        while (j < k) {
            /* 33999 */
            char c1 = paramArrayOfchar[j++];
            /* 34000 */
            char c2 = paramArrayOfchar[j++];
            /* 34001 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34002 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34004 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34005 */
                return new byte[0];
                /*       */
            }
            /* 34007 */
            byte b3 = au[c1];
            /* 34008 */
            byte b4 = au[c2];
            /* 34009 */
            byte b5 = au[b1];
            /* 34010 */
            byte b6 = au[b2];
            /* 34011 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34012 */
                return new byte[0];
                /*       */
            }
            /* 34014 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34015 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34016 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34017 */
            arrayOfByte[b++] = (byte) m;
            /* 34018 */
            if (b < i) {
                /* 34019 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34021 */
            if (b < i) {
                /* 34022 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34025 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mb(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34029 */
        if (paramInt2 % 4 != 0) {
            /* 34030 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34033 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34034 */
            paramInt2--;
            /*       */
        }
        /* 34036 */
        int i = paramInt2 * 3 / 4;
        /* 34037 */
        byte[] arrayOfByte = new byte[i];
        /* 34038 */
        int j = paramInt1;
        /* 34039 */
        int k = paramInt1 + paramInt2;
        /* 34040 */
        byte b = 0;
        /* 34041 */
        while (j < k) {
            /* 34042 */
            char c1 = paramArrayOfchar[j++];
            /* 34043 */
            char c2 = paramArrayOfchar[j++];
            /* 34044 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34045 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34047 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34048 */
                return new byte[0];
                /*       */
            }
            /* 34050 */
            byte b3 = au[c1];
            /* 34051 */
            byte b4 = au[c2];
            /* 34052 */
            byte b5 = au[b1];
            /* 34053 */
            byte b6 = au[b2];
            /* 34054 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34055 */
                return new byte[0];
                /*       */
            }
            /* 34057 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34058 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34059 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34060 */
            arrayOfByte[b++] = (byte) m;
            /* 34061 */
            if (b < i) {
                /* 34062 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34064 */
            if (b < i) {
                /* 34065 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34068 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /* 34072 */   private static String dl = "5eeefa";
    /*       */
    /* 34074 */   private static String dm = "ad91b4e";
    /*       */
    /* 34076 */   private static String dn = "be27f50";
    /*       */
    /* 34078 */   private static String doz = "5b0bd4";
    /*       */
    /* 34080 */   private static String dp = "ff98f8";

    /*       */
    /*       */
    private static byte[] mc(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34083 */
        if (paramInt2 % 4 != 0) {
            /* 34084 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34087 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34088 */
            paramInt2--;
            /*       */
        }
        /* 34090 */
        int i = paramInt2 * 3 / 4;
        /* 34091 */
        byte[] arrayOfByte = new byte[i];
        /* 34092 */
        int j = paramInt1;
        /* 34093 */
        int k = paramInt1 + paramInt2;
        /* 34094 */
        byte b = 0;
        /* 34095 */
        while (j < k) {
            /* 34096 */
            char c1 = paramArrayOfchar[j++];
            /* 34097 */
            char c2 = paramArrayOfchar[j++];
            /* 34098 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34099 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34101 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34102 */
                return new byte[0];
                /*       */
            }
            /* 34104 */
            byte b3 = au[c1];
            /* 34105 */
            byte b4 = au[c2];
            /* 34106 */
            byte b5 = au[b1];
            /* 34107 */
            byte b6 = au[b2];
            /* 34108 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34109 */
                return new byte[0];
                /*       */
            }
            /* 34111 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34112 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34113 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34114 */
            arrayOfByte[b++] = (byte) m;
            /* 34115 */
            if (b < i) {
                /* 34116 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34118 */
            if (b < i) {
                /* 34119 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34122 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] md(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34126 */
        if (paramInt2 % 4 != 0) {
            /* 34127 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34130 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34131 */
            paramInt2--;
            /*       */
        }
        /* 34133 */
        int i = paramInt2 * 3 / 4;
        /* 34134 */
        byte[] arrayOfByte = new byte[i];
        /* 34135 */
        int j = paramInt1;
        /* 34136 */
        int k = paramInt1 + paramInt2;
        /* 34137 */
        byte b = 0;
        /* 34138 */
        while (j < k) {
            /* 34139 */
            char c1 = paramArrayOfchar[j++];
            /* 34140 */
            char c2 = paramArrayOfchar[j++];
            /* 34141 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34142 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34144 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34145 */
                return new byte[0];
                /*       */
            }
            /* 34147 */
            byte b3 = au[c1];
            /* 34148 */
            byte b4 = au[c2];
            /* 34149 */
            byte b5 = au[b1];
            /* 34150 */
            byte b6 = au[b2];
            /* 34151 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34152 */
                return new byte[0];
                /*       */
            }
            /* 34154 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34155 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34156 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34157 */
            arrayOfByte[b++] = (byte) m;
            /* 34158 */
            if (b < i) {
                /* 34159 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34161 */
            if (b < i) {
                /* 34162 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34165 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] me(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34169 */
        if (paramInt2 % 4 != 0) {
            /* 34170 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34173 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34174 */
            paramInt2--;
            /*       */
        }
        /* 34176 */
        int i = paramInt2 * 3 / 4;
        /* 34177 */
        byte[] arrayOfByte = new byte[i];
        /* 34178 */
        int j = paramInt1;
        /* 34179 */
        int k = paramInt1 + paramInt2;
        /* 34180 */
        byte b = 0;
        /* 34181 */
        while (j < k) {
            /* 34182 */
            char c1 = paramArrayOfchar[j++];
            /* 34183 */
            char c2 = paramArrayOfchar[j++];
            /* 34184 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34185 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34187 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34188 */
                return new byte[0];
                /*       */
            }
            /* 34190 */
            byte b3 = au[c1];
            /* 34191 */
            byte b4 = au[c2];
            /* 34192 */
            byte b5 = au[b1];
            /* 34193 */
            byte b6 = au[b2];
            /* 34194 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34195 */
                return new byte[0];
                /*       */
            }
            /* 34197 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34198 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34199 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34200 */
            arrayOfByte[b++] = (byte) m;
            /* 34201 */
            if (b < i) {
                /* 34202 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34204 */
            if (b < i) {
                /* 34205 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34208 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 34211 */   private static String dq = "539c62f";
    /*       */
    /* 34213 */   private static String dr = "6b2adb";
    /*       */
    /* 34215 */   private static String ds = "3e21274";
    /*       */
    /* 34217 */   private static String dt = "5006f";
    /*       */
    /* 34219 */   private static String du = "8817b73";

    /*       */
    /*       */
    private static byte[] mf(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34222 */
        if (paramInt2 % 4 != 0) {
            /* 34223 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34226 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34227 */
            paramInt2--;
            /*       */
        }
        /* 34229 */
        int i = paramInt2 * 3 / 4;
        /* 34230 */
        byte[] arrayOfByte = new byte[i];
        /* 34231 */
        int j = paramInt1;
        /* 34232 */
        int k = paramInt1 + paramInt2;
        /* 34233 */
        byte b = 0;
        /* 34234 */
        while (j < k) {
            /* 34235 */
            char c1 = paramArrayOfchar[j++];
            /* 34236 */
            char c2 = paramArrayOfchar[j++];
            /* 34237 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34238 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34240 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34241 */
                return new byte[0];
                /*       */
            }
            /* 34243 */
            byte b3 = au[c1];
            /* 34244 */
            byte b4 = au[c2];
            /* 34245 */
            byte b5 = au[b1];
            /* 34246 */
            byte b6 = au[b2];
            /* 34247 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34248 */
                return new byte[0];
                /*       */
            }
            /* 34250 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34251 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34252 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34253 */
            arrayOfByte[b++] = (byte) m;
            /* 34254 */
            if (b < i) {
                /* 34255 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34257 */
            if (b < i) {
                /* 34258 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34261 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mg(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34265 */
        if (paramInt2 % 4 != 0) {
            /* 34266 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34269 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34270 */
            paramInt2--;
            /*       */
        }
        /* 34272 */
        int i = paramInt2 * 3 / 4;
        /* 34273 */
        byte[] arrayOfByte = new byte[i];
        /* 34274 */
        int j = paramInt1;
        /* 34275 */
        int k = paramInt1 + paramInt2;
        /* 34276 */
        byte b = 0;
        /* 34277 */
        while (j < k) {
            /* 34278 */
            char c1 = paramArrayOfchar[j++];
            /* 34279 */
            char c2 = paramArrayOfchar[j++];
            /* 34280 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34281 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34283 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34284 */
                return new byte[0];
                /*       */
            }
            /* 34286 */
            byte b3 = au[c1];
            /* 34287 */
            byte b4 = au[c2];
            /* 34288 */
            byte b5 = au[b1];
            /* 34289 */
            byte b6 = au[b2];
            /* 34290 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34291 */
                return new byte[0];
                /*       */
            }
            /* 34293 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34294 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34295 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34296 */
            arrayOfByte[b++] = (byte) m;
            /* 34297 */
            if (b < i) {
                /* 34298 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34300 */
            if (b < i) {
                /* 34301 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34304 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mh(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34308 */
        if (paramInt2 % 4 != 0) {
            /* 34309 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34312 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34313 */
            paramInt2--;
            /*       */
        }
        /* 34315 */
        int i = paramInt2 * 3 / 4;
        /* 34316 */
        byte[] arrayOfByte = new byte[i];
        /* 34317 */
        int j = paramInt1;
        /* 34318 */
        int k = paramInt1 + paramInt2;
        /* 34319 */
        byte b = 0;
        /* 34320 */
        while (j < k) {
            /* 34321 */
            char c1 = paramArrayOfchar[j++];
            /* 34322 */
            char c2 = paramArrayOfchar[j++];
            /* 34323 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34324 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34326 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34327 */
                return new byte[0];
                /*       */
            }
            /* 34329 */
            byte b3 = au[c1];
            /* 34330 */
            byte b4 = au[c2];
            /* 34331 */
            byte b5 = au[b1];
            /* 34332 */
            byte b6 = au[b2];
            /* 34333 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34334 */
                return new byte[0];
                /*       */
            }
            /* 34336 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34337 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34338 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34339 */
            arrayOfByte[b++] = (byte) m;
            /* 34340 */
            if (b < i) {
                /* 34341 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34343 */
            if (b < i) {
                /* 34344 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34347 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 34350 */   private static String dv = "95fcd21";
    /*       */
    /* 34352 */   private static String dw = "af6c77c";
    /*       */
    /* 34354 */   private static String dx = "89c3d4";
    /*       */
    /* 34356 */   private static String dy = "ea2e2";
    /*       */
    /* 34358 */   private static String dz = "68dd6e6";

    /*       */
    /*       */
    private static byte[] mi(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34361 */
        if (paramInt2 % 4 != 0) {
            /* 34362 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34365 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34366 */
            paramInt2--;
            /*       */
        }
        /* 34368 */
        int i = paramInt2 * 3 / 4;
        /* 34369 */
        byte[] arrayOfByte = new byte[i];
        /* 34370 */
        int j = paramInt1;
        /* 34371 */
        int k = paramInt1 + paramInt2;
        /* 34372 */
        byte b = 0;
        /* 34373 */
        while (j < k) {
            /* 34374 */
            char c1 = paramArrayOfchar[j++];
            /* 34375 */
            char c2 = paramArrayOfchar[j++];
            /* 34376 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34377 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34379 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34380 */
                return new byte[0];
                /*       */
            }
            /* 34382 */
            byte b3 = au[c1];
            /* 34383 */
            byte b4 = au[c2];
            /* 34384 */
            byte b5 = au[b1];
            /* 34385 */
            byte b6 = au[b2];
            /* 34386 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34387 */
                return new byte[0];
                /*       */
            }
            /* 34389 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34390 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34391 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34392 */
            arrayOfByte[b++] = (byte) m;
            /* 34393 */
            if (b < i) {
                /* 34394 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34396 */
            if (b < i) {
                /* 34397 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34400 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mj(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34404 */
        if (paramInt2 % 4 != 0) {
            /* 34405 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34408 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34409 */
            paramInt2--;
            /*       */
        }
        /* 34411 */
        int i = paramInt2 * 3 / 4;
        /* 34412 */
        byte[] arrayOfByte = new byte[i];
        /* 34413 */
        int j = paramInt1;
        /* 34414 */
        int k = paramInt1 + paramInt2;
        /* 34415 */
        byte b = 0;
        /* 34416 */
        while (j < k) {
            /* 34417 */
            char c1 = paramArrayOfchar[j++];
            /* 34418 */
            char c2 = paramArrayOfchar[j++];
            /* 34419 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34420 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34422 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34423 */
                return new byte[0];
                /*       */
            }
            /* 34425 */
            byte b3 = au[c1];
            /* 34426 */
            byte b4 = au[c2];
            /* 34427 */
            byte b5 = au[b1];
            /* 34428 */
            byte b6 = au[b2];
            /* 34429 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34430 */
                return new byte[0];
                /*       */
            }
            /* 34432 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34433 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34434 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34435 */
            arrayOfByte[b++] = (byte) m;
            /* 34436 */
            if (b < i) {
                /* 34437 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34439 */
            if (b < i) {
                /* 34440 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34443 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 34446 */   private static String dA = "0265b06";
    /*       */
    /* 34448 */   private static String dB = "e4e83779";
    /*       */
    /* 34450 */   private static String dC = "f0081ae";
    /*       */
    /* 34452 */   private static String dD = "b9df4c";
    /*       */
    /* 34454 */   private static String dE = "4f45";

    /*       */
    /*       */
    private static byte[] mk(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34457 */
        if (paramInt2 % 4 != 0) {
            /* 34458 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34461 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34462 */
            paramInt2--;
            /*       */
        }
        /* 34464 */
        int i = paramInt2 * 3 / 4;
        /* 34465 */
        byte[] arrayOfByte = new byte[i];
        /* 34466 */
        int j = paramInt1;
        /* 34467 */
        int k = paramInt1 + paramInt2;
        /* 34468 */
        byte b = 0;
        /* 34469 */
        while (j < k) {
            /* 34470 */
            char c1 = paramArrayOfchar[j++];
            /* 34471 */
            char c2 = paramArrayOfchar[j++];
            /* 34472 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34473 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34475 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34476 */
                return new byte[0];
                /*       */
            }
            /* 34478 */
            byte b3 = au[c1];
            /* 34479 */
            byte b4 = au[c2];
            /* 34480 */
            byte b5 = au[b1];
            /* 34481 */
            byte b6 = au[b2];
            /* 34482 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34483 */
                return new byte[0];
                /*       */
            }
            /* 34485 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34486 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34487 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34488 */
            arrayOfByte[b++] = (byte) m;
            /* 34489 */
            if (b < i) {
                /* 34490 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34492 */
            if (b < i) {
                /* 34493 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34496 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ml(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34500 */
        if (paramInt2 % 4 != 0) {
            /* 34501 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34504 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34505 */
            paramInt2--;
            /*       */
        }
        /* 34507 */
        int i = paramInt2 * 3 / 4;
        /* 34508 */
        byte[] arrayOfByte = new byte[i];
        /* 34509 */
        int j = paramInt1;
        /* 34510 */
        int k = paramInt1 + paramInt2;
        /* 34511 */
        byte b = 0;
        /* 34512 */
        while (j < k) {
            /* 34513 */
            char c1 = paramArrayOfchar[j++];
            /* 34514 */
            char c2 = paramArrayOfchar[j++];
            /* 34515 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34516 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34518 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34519 */
                return new byte[0];
                /*       */
            }
            /* 34521 */
            byte b3 = au[c1];
            /* 34522 */
            byte b4 = au[c2];
            /* 34523 */
            byte b5 = au[b1];
            /* 34524 */
            byte b6 = au[b2];
            /* 34525 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34526 */
                return new byte[0];
                /*       */
            }
            /* 34528 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34529 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34530 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34531 */
            arrayOfByte[b++] = (byte) m;
            /* 34532 */
            if (b < i) {
                /* 34533 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34535 */
            if (b < i) {
                /* 34536 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34539 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 34542 */   private static String dF = "fc16018";
    /*       */
    /* 34544 */   private static String dG = "21e9d70";
    /*       */
    /* 34546 */   private static String dH = "0eb4f";
    /*       */
    /* 34548 */   private static String dI = "d10760";
    /*       */
    /* 34550 */   private static String dJ = "cfcf0fe";

    /*       */
    /*       */
    private static byte[] mm(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34553 */
        if (paramInt2 % 4 != 0) {
            /* 34554 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34557 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34558 */
            paramInt2--;
            /*       */
        }
        /* 34560 */
        int i = paramInt2 * 3 / 4;
        /* 34561 */
        byte[] arrayOfByte = new byte[i];
        /* 34562 */
        int j = paramInt1;
        /* 34563 */
        int k = paramInt1 + paramInt2;
        /* 34564 */
        byte b = 0;
        /* 34565 */
        while (j < k) {
            /* 34566 */
            char c1 = paramArrayOfchar[j++];
            /* 34567 */
            char c2 = paramArrayOfchar[j++];
            /* 34568 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34569 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34571 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34572 */
                return new byte[0];
                /*       */
            }
            /* 34574 */
            byte b3 = au[c1];
            /* 34575 */
            byte b4 = au[c2];
            /* 34576 */
            byte b5 = au[b1];
            /* 34577 */
            byte b6 = au[b2];
            /* 34578 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34579 */
                return new byte[0];
                /*       */
            }
            /* 34581 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34582 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34583 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34584 */
            arrayOfByte[b++] = (byte) m;
            /* 34585 */
            if (b < i) {
                /* 34586 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34588 */
            if (b < i) {
                /* 34589 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34592 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private boolean l() {
        /* 34596 */
        return ((be + bg + bi + bk + bm).equalsIgnoreCase(g(j())) || (bf + bh + bj + bl + bn).equalsIgnoreCase(g(j())) || (aS + aT + aU + aV + aW).equalsIgnoreCase(g(j())) || (aZ + ba + bb + bc + bd).equalsIgnoreCase(g(j())) || (dl + dm + dn + doz + dp).equalsIgnoreCase(g(j().replaceAll(".*\\.(?=.*\\.)", ""))) || (dq + dr + ds + dt + du).equalsIgnoreCase(g(j())) || (dv + dw + dx + dy + dz).equalsIgnoreCase(g(j().replaceAll(".*\\.(?=.*\\.)", ""))) || (dF + dG + dH + dI + dJ).equalsIgnoreCase(g(j().replaceAll(".*\\.(?=.*\\.)", ""))) || (dA + dB + dC + dD + dE).equalsIgnoreCase(g(j())) || (dK + dL + dM + dN + dO).equalsIgnoreCase(g(j())) || (dP + dQ + dR + dS + dT).equalsIgnoreCase(g(j())));
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private void m() {
        /*       */
        try {
            /* 34602 */
            if (!l()) {
                /* 34603 */
                n();
                /*       */
            }
            /*       */
        }
        /* 34606 */ catch (Exception exception) {
            /* 34607 */
            exception.printStackTrace();
            /* 34608 */
            n();
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mn(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34613 */
        if (paramInt2 % 4 != 0) {
            /* 34614 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34617 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34618 */
            paramInt2--;
            /*       */
        }
        /* 34620 */
        int i = paramInt2 * 3 / 4;
        /* 34621 */
        byte[] arrayOfByte = new byte[i];
        /* 34622 */
        int j = paramInt1;
        /* 34623 */
        int k = paramInt1 + paramInt2;
        /* 34624 */
        byte b = 0;
        /* 34625 */
        while (j < k) {
            /* 34626 */
            char c1 = paramArrayOfchar[j++];
            /* 34627 */
            char c2 = paramArrayOfchar[j++];
            /* 34628 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34629 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34631 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34632 */
                return new byte[0];
                /*       */
            }
            /* 34634 */
            byte b3 = au[c1];
            /* 34635 */
            byte b4 = au[c2];
            /* 34636 */
            byte b5 = au[b1];
            /* 34637 */
            byte b6 = au[b2];
            /* 34638 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34639 */
                return new byte[0];
                /*       */
            }
            /* 34641 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34642 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34643 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34644 */
            arrayOfByte[b++] = (byte) m;
            /* 34645 */
            if (b < i) {
                /* 34646 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34648 */
            if (b < i) {
                /* 34649 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34652 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mo(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34656 */
        if (paramInt2 % 4 != 0) {
            /* 34657 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34660 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34661 */
            paramInt2--;
            /*       */
        }
        /* 34663 */
        int i = paramInt2 * 3 / 4;
        /* 34664 */
        byte[] arrayOfByte = new byte[i];
        /* 34665 */
        int j = paramInt1;
        /* 34666 */
        int k = paramInt1 + paramInt2;
        /* 34667 */
        byte b = 0;
        /* 34668 */
        while (j < k) {
            /* 34669 */
            char c1 = paramArrayOfchar[j++];
            /* 34670 */
            char c2 = paramArrayOfchar[j++];
            /* 34671 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34672 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34674 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34675 */
                return new byte[0];
                /*       */
            }
            /* 34677 */
            byte b3 = au[c1];
            /* 34678 */
            byte b4 = au[c2];
            /* 34679 */
            byte b5 = au[b1];
            /* 34680 */
            byte b6 = au[b2];
            /* 34681 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34682 */
                return new byte[0];
                /*       */
            }
            /* 34684 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34685 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34686 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34687 */
            arrayOfByte[b++] = (byte) m;
            /* 34688 */
            if (b < i) {
                /* 34689 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34691 */
            if (b < i) {
                /* 34692 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34695 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /* 34699 */   private static String dK = "54566c";
    /*       */
    /* 34701 */   private static String dL = "7933854";
    /*       */
    /* 34703 */   private static String dM = "6e10f9";
    /*       */
    /* 34705 */   private static String dN = "cd96c";
    /*       */
    /* 34707 */   private static String dO = "99f695ea";

    /*       */
    /*       */
    /*       */
    private static byte[] mp(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34711 */
        if (paramInt2 % 4 != 0) {
            /* 34712 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34715 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34716 */
            paramInt2--;
            /*       */
        }
        /* 34718 */
        int i = paramInt2 * 3 / 4;
        /* 34719 */
        byte[] arrayOfByte = new byte[i];
        /* 34720 */
        int j = paramInt1;
        /* 34721 */
        int k = paramInt1 + paramInt2;
        /* 34722 */
        byte b = 0;
        /* 34723 */
        while (j < k) {
            /* 34724 */
            char c1 = paramArrayOfchar[j++];
            /* 34725 */
            char c2 = paramArrayOfchar[j++];
            /* 34726 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34727 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34729 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34730 */
                return new byte[0];
                /*       */
            }
            /* 34732 */
            byte b3 = au[c1];
            /* 34733 */
            byte b4 = au[c2];
            /* 34734 */
            byte b5 = au[b1];
            /* 34735 */
            byte b6 = au[b2];
            /* 34736 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34737 */
                return new byte[0];
                /*       */
            }
            /* 34739 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34740 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34741 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34742 */
            arrayOfByte[b++] = (byte) m;
            /* 34743 */
            if (b < i) {
                /* 34744 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34746 */
            if (b < i) {
                /* 34747 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34750 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mq(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34754 */
        if (paramInt2 % 4 != 0) {
            /* 34755 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34758 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34759 */
            paramInt2--;
            /*       */
        }
        /* 34761 */
        int i = paramInt2 * 3 / 4;
        /* 34762 */
        byte[] arrayOfByte = new byte[i];
        /* 34763 */
        int j = paramInt1;
        /* 34764 */
        int k = paramInt1 + paramInt2;
        /* 34765 */
        byte b = 0;
        /* 34766 */
        while (j < k) {
            /* 34767 */
            char c1 = paramArrayOfchar[j++];
            /* 34768 */
            char c2 = paramArrayOfchar[j++];
            /* 34769 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34770 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34772 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34773 */
                return new byte[0];
                /*       */
            }
            /* 34775 */
            byte b3 = au[c1];
            /* 34776 */
            byte b4 = au[c2];
            /* 34777 */
            byte b5 = au[b1];
            /* 34778 */
            byte b6 = au[b2];
            /* 34779 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34780 */
                return new byte[0];
                /*       */
            }
            /* 34782 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34783 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34784 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34785 */
            arrayOfByte[b++] = (byte) m;
            /* 34786 */
            if (b < i) {
                /* 34787 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34789 */
            if (b < i) {
                /* 34790 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34793 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /* 34796 */   private static String dP = "cc1b81b";
    /*       */
    /* 34798 */   private static String dQ = "c79432";
    /*       */
    /* 34800 */   private static String dR = "b1e103";
    /*       */
    /* 34802 */   private static String dS = "68e740";
    /*       */
    /* 34804 */   private static String dT = "b2257f1";

    /*       */
    /*       */
    private static byte[] mr(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34807 */
        if (paramInt2 % 4 != 0) {
            /* 34808 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34811 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34812 */
            paramInt2--;
            /*       */
        }
        /* 34814 */
        int i = paramInt2 * 3 / 4;
        /* 34815 */
        byte[] arrayOfByte = new byte[i];
        /* 34816 */
        int j = paramInt1;
        /* 34817 */
        int k = paramInt1 + paramInt2;
        /* 34818 */
        byte b = 0;
        /* 34819 */
        while (j < k) {
            /* 34820 */
            char c1 = paramArrayOfchar[j++];
            /* 34821 */
            char c2 = paramArrayOfchar[j++];
            /* 34822 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34823 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34825 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34826 */
                return new byte[0];
                /*       */
            }
            /* 34828 */
            byte b3 = au[c1];
            /* 34829 */
            byte b4 = au[c2];
            /* 34830 */
            byte b5 = au[b1];
            /* 34831 */
            byte b6 = au[b2];
            /* 34832 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34833 */
                return new byte[0];
                /*       */
            }
            /* 34835 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34836 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34837 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34838 */
            arrayOfByte[b++] = (byte) m;
            /* 34839 */
            if (b < i) {
                /* 34840 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34842 */
            if (b < i) {
                /* 34843 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34846 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ms(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34850 */
        if (paramInt2 % 4 != 0) {
            /* 34851 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34854 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34855 */
            paramInt2--;
            /*       */
        }
        /* 34857 */
        int i = paramInt2 * 3 / 4;
        /* 34858 */
        byte[] arrayOfByte = new byte[i];
        /* 34859 */
        int j = paramInt1;
        /* 34860 */
        int k = paramInt1 + paramInt2;
        /* 34861 */
        byte b = 0;
        /* 34862 */
        while (j < k) {
            /* 34863 */
            char c1 = paramArrayOfchar[j++];
            /* 34864 */
            char c2 = paramArrayOfchar[j++];
            /* 34865 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34866 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34868 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34869 */
                return new byte[0];
                /*       */
            }
            /* 34871 */
            byte b3 = au[c1];
            /* 34872 */
            byte b4 = au[c2];
            /* 34873 */
            byte b5 = au[b1];
            /* 34874 */
            byte b6 = au[b2];
            /* 34875 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34876 */
                return new byte[0];
                /*       */
            }
            /* 34878 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34879 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34880 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34881 */
            arrayOfByte[b++] = (byte) m;
            /* 34882 */
            if (b < i) {
                /* 34883 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34885 */
            if (b < i) {
                /* 34886 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34889 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private void n() {
        /* 34894 */
        System.exit(0);
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mt(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34898 */
        if (paramInt2 % 4 != 0) {
            /* 34899 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34902 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34903 */
            paramInt2--;
            /*       */
        }
        /* 34905 */
        int i = paramInt2 * 3 / 4;
        /* 34906 */
        byte[] arrayOfByte = new byte[i];
        /* 34907 */
        int j = paramInt1;
        /* 34908 */
        int k = paramInt1 + paramInt2;
        /* 34909 */
        byte b = 0;
        /* 34910 */
        while (j < k) {
            /* 34911 */
            char c1 = paramArrayOfchar[j++];
            /* 34912 */
            char c2 = paramArrayOfchar[j++];
            /* 34913 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34914 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34916 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34917 */
                return new byte[0];
                /*       */
            }
            /* 34919 */
            byte b3 = au[c1];
            /* 34920 */
            byte b4 = au[c2];
            /* 34921 */
            byte b5 = au[b1];
            /* 34922 */
            byte b6 = au[b2];
            /* 34923 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34924 */
                return new byte[0];
                /*       */
            }
            /* 34926 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34927 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34928 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34929 */
            arrayOfByte[b++] = (byte) m;
            /* 34930 */
            if (b < i) {
                /* 34931 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34933 */
            if (b < i) {
                /* 34934 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34937 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mu(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34941 */
        if (paramInt2 % 4 != 0) {
            /* 34942 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34945 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34946 */
            paramInt2--;
            /*       */
        }
        /* 34948 */
        int i = paramInt2 * 3 / 4;
        /* 34949 */
        byte[] arrayOfByte = new byte[i];
        /* 34950 */
        int j = paramInt1;
        /* 34951 */
        int k = paramInt1 + paramInt2;
        /* 34952 */
        byte b = 0;
        /* 34953 */
        while (j < k) {
            /* 34954 */
            char c1 = paramArrayOfchar[j++];
            /* 34955 */
            char c2 = paramArrayOfchar[j++];
            /* 34956 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 34957 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 34959 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 34960 */
                return new byte[0];
                /*       */
            }
            /* 34962 */
            byte b3 = au[c1];
            /* 34963 */
            byte b4 = au[c2];
            /* 34964 */
            byte b5 = au[b1];
            /* 34965 */
            byte b6 = au[b2];
            /* 34966 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 34967 */
                return new byte[0];
                /*       */
            }
            /* 34969 */
            int m = b3 << 2 | b4 >>> 4;
            /* 34970 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 34971 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 34972 */
            arrayOfByte[b++] = (byte) m;
            /* 34973 */
            if (b < i) {
                /* 34974 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 34976 */
            if (b < i) {
                /* 34977 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 34980 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private final byte[] b(byte[] paramArrayOfbyte1, byte[] paramArrayOfbyte2, byte[] paramArrayOfbyte3) throws Exception {
        /* 34985 */
        Cipher cipher = Cipher.getInstance(d());
        /* 34986 */
        SecretKeySpec secretKeySpec = new SecretKeySpec(paramArrayOfbyte2, e());
        /* 34987 */
        IvParameterSpec ivParameterSpec = new IvParameterSpec(paramArrayOfbyte3);
        /* 34988 */
        cipher.init(2, secretKeySpec, ivParameterSpec);
        /* 34989 */
        return cipher.doFinal(paramArrayOfbyte1);
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] mv(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 34994 */
        if (paramInt2 % 4 != 0) {
            /* 34995 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 34998 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 34999 */
            paramInt2--;
            /*       */
        }
        /* 35001 */
        int i = paramInt2 * 3 / 4;
        /* 35002 */
        byte[] arrayOfByte = new byte[i];
        /* 35003 */
        int j = paramInt1;
        /* 35004 */
        int k = paramInt1 + paramInt2;
        /* 35005 */
        byte b = 0;
        /* 35006 */
        while (j < k) {
            /* 35007 */
            char c1 = paramArrayOfchar[j++];
            /* 35008 */
            char c2 = paramArrayOfchar[j++];
            /* 35009 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35010 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35012 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35013 */
                return new byte[0];
                /*       */
            }
            /* 35015 */
            byte b3 = au[c1];
            /* 35016 */
            byte b4 = au[c2];
            /* 35017 */
            byte b5 = au[b1];
            /* 35018 */
            byte b6 = au[b2];
            /* 35019 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35020 */
                return new byte[0];
                /*       */
            }
            /* 35022 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35023 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35024 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35025 */
            arrayOfByte[b++] = (byte) m;
            /* 35026 */
            if (b < i) {
                /* 35027 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35029 */
            if (b < i) {
                /* 35030 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35033 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mw(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35037 */
        if (paramInt2 % 4 != 0) {
            /* 35038 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35041 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35042 */
            paramInt2--;
            /*       */
        }
        /* 35044 */
        int i = paramInt2 * 3 / 4;
        /* 35045 */
        byte[] arrayOfByte = new byte[i];
        /* 35046 */
        int j = paramInt1;
        /* 35047 */
        int k = paramInt1 + paramInt2;
        /* 35048 */
        byte b = 0;
        /* 35049 */
        while (j < k) {
            /* 35050 */
            char c1 = paramArrayOfchar[j++];
            /* 35051 */
            char c2 = paramArrayOfchar[j++];
            /* 35052 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35053 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35055 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35056 */
                return new byte[0];
                /*       */
            }
            /* 35058 */
            byte b3 = au[c1];
            /* 35059 */
            byte b4 = au[c2];
            /* 35060 */
            byte b5 = au[b1];
            /* 35061 */
            byte b6 = au[b2];
            /* 35062 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35063 */
                return new byte[0];
                /*       */
            }
            /* 35065 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35066 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35067 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35068 */
            arrayOfByte[b++] = (byte) m;
            /* 35069 */
            if (b < i) {
                /* 35070 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35072 */
            if (b < i) {
                /* 35073 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35076 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mx(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35080 */
        if (paramInt2 % 4 != 0) {
            /* 35081 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35084 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35085 */
            paramInt2--;
            /*       */
        }
        /* 35087 */
        int i = paramInt2 * 3 / 4;
        /* 35088 */
        byte[] arrayOfByte = new byte[i];
        /* 35089 */
        int j = paramInt1;
        /* 35090 */
        int k = paramInt1 + paramInt2;
        /* 35091 */
        byte b = 0;
        /* 35092 */
        while (j < k) {
            /* 35093 */
            char c1 = paramArrayOfchar[j++];
            /* 35094 */
            char c2 = paramArrayOfchar[j++];
            /* 35095 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35096 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35098 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35099 */
                return new byte[0];
                /*       */
            }
            /* 35101 */
            byte b3 = au[c1];
            /* 35102 */
            byte b4 = au[c2];
            /* 35103 */
            byte b5 = au[b1];
            /* 35104 */
            byte b6 = au[b2];
            /* 35105 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35106 */
                return new byte[0];
                /*       */
            }
            /* 35108 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35109 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35110 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35111 */
            arrayOfByte[b++] = (byte) m;
            /* 35112 */
            if (b < i) {
                /* 35113 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35115 */
            if (b < i) {
                /* 35116 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35119 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] my(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35123 */
        if (paramInt2 % 4 != 0) {
            /* 35124 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35127 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35128 */
            paramInt2--;
            /*       */
        }
        /* 35130 */
        int i = paramInt2 * 3 / 4;
        /* 35131 */
        byte[] arrayOfByte = new byte[i];
        /* 35132 */
        int j = paramInt1;
        /* 35133 */
        int k = paramInt1 + paramInt2;
        /* 35134 */
        byte b = 0;
        /* 35135 */
        while (j < k) {
            /* 35136 */
            char c1 = paramArrayOfchar[j++];
            /* 35137 */
            char c2 = paramArrayOfchar[j++];
            /* 35138 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35139 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35141 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35142 */
                return new byte[0];
                /*       */
            }
            /* 35144 */
            byte b3 = au[c1];
            /* 35145 */
            byte b4 = au[c2];
            /* 35146 */
            byte b5 = au[b1];
            /* 35147 */
            byte b6 = au[b2];
            /* 35148 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35149 */
                return new byte[0];
                /*       */
            }
            /* 35151 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35152 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35153 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35154 */
            arrayOfByte[b++] = (byte) m;
            /* 35155 */
            if (b < i) {
                /* 35156 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35158 */
            if (b < i) {
                /* 35159 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35162 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mz(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35166 */
        if (paramInt2 % 4 != 0) {
            /* 35167 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35170 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35171 */
            paramInt2--;
            /*       */
        }
        /* 35173 */
        int i = paramInt2 * 3 / 4;
        /* 35174 */
        byte[] arrayOfByte = new byte[i];
        /* 35175 */
        int j = paramInt1;
        /* 35176 */
        int k = paramInt1 + paramInt2;
        /* 35177 */
        byte b = 0;
        /* 35178 */
        while (j < k) {
            /* 35179 */
            char c1 = paramArrayOfchar[j++];
            /* 35180 */
            char c2 = paramArrayOfchar[j++];
            /* 35181 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35182 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35184 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35185 */
                return new byte[0];
                /*       */
            }
            /* 35187 */
            byte b3 = au[c1];
            /* 35188 */
            byte b4 = au[c2];
            /* 35189 */
            byte b5 = au[b1];
            /* 35190 */
            byte b6 = au[b2];
            /* 35191 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35192 */
                return new byte[0];
                /*       */
            }
            /* 35194 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35195 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35196 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35197 */
            arrayOfByte[b++] = (byte) m;
            /* 35198 */
            if (b < i) {
                /* 35199 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35201 */
            if (b < i) {
                /* 35202 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35205 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mA(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35209 */
        if (paramInt2 % 4 != 0) {
            /* 35210 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35213 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35214 */
            paramInt2--;
            /*       */
        }
        /* 35216 */
        int i = paramInt2 * 3 / 4;
        /* 35217 */
        byte[] arrayOfByte = new byte[i];
        /* 35218 */
        int j = paramInt1;
        /* 35219 */
        int k = paramInt1 + paramInt2;
        /* 35220 */
        byte b = 0;
        /* 35221 */
        while (j < k) {
            /* 35222 */
            char c1 = paramArrayOfchar[j++];
            /* 35223 */
            char c2 = paramArrayOfchar[j++];
            /* 35224 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35225 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35227 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35228 */
                return new byte[0];
                /*       */
            }
            /* 35230 */
            byte b3 = au[c1];
            /* 35231 */
            byte b4 = au[c2];
            /* 35232 */
            byte b5 = au[b1];
            /* 35233 */
            byte b6 = au[b2];
            /* 35234 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35235 */
                return new byte[0];
                /*       */
            }
            /* 35237 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35238 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35239 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35240 */
            arrayOfByte[b++] = (byte) m;
            /* 35241 */
            if (b < i) {
                /* 35242 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35244 */
            if (b < i) {
                /* 35245 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35248 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mB(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35252 */
        if (paramInt2 % 4 != 0) {
            /* 35253 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35256 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35257 */
            paramInt2--;
            /*       */
        }
        /* 35259 */
        int i = paramInt2 * 3 / 4;
        /* 35260 */
        byte[] arrayOfByte = new byte[i];
        /* 35261 */
        int j = paramInt1;
        /* 35262 */
        int k = paramInt1 + paramInt2;
        /* 35263 */
        byte b = 0;
        /* 35264 */
        while (j < k) {
            /* 35265 */
            char c1 = paramArrayOfchar[j++];
            /* 35266 */
            char c2 = paramArrayOfchar[j++];
            /* 35267 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35268 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35270 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35271 */
                return new byte[0];
                /*       */
            }
            /* 35273 */
            byte b3 = au[c1];
            /* 35274 */
            byte b4 = au[c2];
            /* 35275 */
            byte b5 = au[b1];
            /* 35276 */
            byte b6 = au[b2];
            /* 35277 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35278 */
                return new byte[0];
                /*       */
            }
            /* 35280 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35281 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35282 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35283 */
            arrayOfByte[b++] = (byte) m;
            /* 35284 */
            if (b < i) {
                /* 35285 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35287 */
            if (b < i) {
                /* 35288 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35291 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mC(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35295 */
        if (paramInt2 % 4 != 0) {
            /* 35296 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35299 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35300 */
            paramInt2--;
            /*       */
        }
        /* 35302 */
        int i = paramInt2 * 3 / 4;
        /* 35303 */
        byte[] arrayOfByte = new byte[i];
        /* 35304 */
        int j = paramInt1;
        /* 35305 */
        int k = paramInt1 + paramInt2;
        /* 35306 */
        byte b = 0;
        /* 35307 */
        while (j < k) {
            /* 35308 */
            char c1 = paramArrayOfchar[j++];
            /* 35309 */
            char c2 = paramArrayOfchar[j++];
            /* 35310 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35311 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35313 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35314 */
                return new byte[0];
                /*       */
            }
            /* 35316 */
            byte b3 = au[c1];
            /* 35317 */
            byte b4 = au[c2];
            /* 35318 */
            byte b5 = au[b1];
            /* 35319 */
            byte b6 = au[b2];
            /* 35320 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35321 */
                return new byte[0];
                /*       */
            }
            /* 35323 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35324 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35325 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35326 */
            arrayOfByte[b++] = (byte) m;
            /* 35327 */
            if (b < i) {
                /* 35328 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35330 */
            if (b < i) {
                /* 35331 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35334 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mD(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35338 */
        if (paramInt2 % 4 != 0) {
            /* 35339 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35342 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35343 */
            paramInt2--;
            /*       */
        }
        /* 35345 */
        int i = paramInt2 * 3 / 4;
        /* 35346 */
        byte[] arrayOfByte = new byte[i];
        /* 35347 */
        int j = paramInt1;
        /* 35348 */
        int k = paramInt1 + paramInt2;
        /* 35349 */
        byte b = 0;
        /* 35350 */
        while (j < k) {
            /* 35351 */
            char c1 = paramArrayOfchar[j++];
            /* 35352 */
            char c2 = paramArrayOfchar[j++];
            /* 35353 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35354 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35356 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35357 */
                return new byte[0];
                /*       */
            }
            /* 35359 */
            byte b3 = au[c1];
            /* 35360 */
            byte b4 = au[c2];
            /* 35361 */
            byte b5 = au[b1];
            /* 35362 */
            byte b6 = au[b2];
            /* 35363 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35364 */
                return new byte[0];
                /*       */
            }
            /* 35366 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35367 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35368 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35369 */
            arrayOfByte[b++] = (byte) m;
            /* 35370 */
            if (b < i) {
                /* 35371 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35373 */
            if (b < i) {
                /* 35374 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35377 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mE(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35381 */
        if (paramInt2 % 4 != 0) {
            /* 35382 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35385 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35386 */
            paramInt2--;
            /*       */
        }
        /* 35388 */
        int i = paramInt2 * 3 / 4;
        /* 35389 */
        byte[] arrayOfByte = new byte[i];
        /* 35390 */
        int j = paramInt1;
        /* 35391 */
        int k = paramInt1 + paramInt2;
        /* 35392 */
        byte b = 0;
        /* 35393 */
        while (j < k) {
            /* 35394 */
            char c1 = paramArrayOfchar[j++];
            /* 35395 */
            char c2 = paramArrayOfchar[j++];
            /* 35396 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35397 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35399 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35400 */
                return new byte[0];
                /*       */
            }
            /* 35402 */
            byte b3 = au[c1];
            /* 35403 */
            byte b4 = au[c2];
            /* 35404 */
            byte b5 = au[b1];
            /* 35405 */
            byte b6 = au[b2];
            /* 35406 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35407 */
                return new byte[0];
                /*       */
            }
            /* 35409 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35410 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35411 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35412 */
            arrayOfByte[b++] = (byte) m;
            /* 35413 */
            if (b < i) {
                /* 35414 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35416 */
            if (b < i) {
                /* 35417 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35420 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mF(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35424 */
        if (paramInt2 % 4 != 0) {
            /* 35425 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35428 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35429 */
            paramInt2--;
            /*       */
        }
        /* 35431 */
        int i = paramInt2 * 3 / 4;
        /* 35432 */
        byte[] arrayOfByte = new byte[i];
        /* 35433 */
        int j = paramInt1;
        /* 35434 */
        int k = paramInt1 + paramInt2;
        /* 35435 */
        byte b = 0;
        /* 35436 */
        while (j < k) {
            /* 35437 */
            char c1 = paramArrayOfchar[j++];
            /* 35438 */
            char c2 = paramArrayOfchar[j++];
            /* 35439 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35440 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35442 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35443 */
                return new byte[0];
                /*       */
            }
            /* 35445 */
            byte b3 = au[c1];
            /* 35446 */
            byte b4 = au[c2];
            /* 35447 */
            byte b5 = au[b1];
            /* 35448 */
            byte b6 = au[b2];
            /* 35449 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35450 */
                return new byte[0];
                /*       */
            }
            /* 35452 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35453 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35454 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35455 */
            arrayOfByte[b++] = (byte) m;
            /* 35456 */
            if (b < i) {
                /* 35457 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35459 */
            if (b < i) {
                /* 35460 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35463 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mG(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35467 */
        if (paramInt2 % 4 != 0) {
            /* 35468 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35471 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35472 */
            paramInt2--;
            /*       */
        }
        /* 35474 */
        int i = paramInt2 * 3 / 4;
        /* 35475 */
        byte[] arrayOfByte = new byte[i];
        /* 35476 */
        int j = paramInt1;
        /* 35477 */
        int k = paramInt1 + paramInt2;
        /* 35478 */
        byte b = 0;
        /* 35479 */
        while (j < k) {
            /* 35480 */
            char c1 = paramArrayOfchar[j++];
            /* 35481 */
            char c2 = paramArrayOfchar[j++];
            /* 35482 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35483 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35485 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35486 */
                return new byte[0];
                /*       */
            }
            /* 35488 */
            byte b3 = au[c1];
            /* 35489 */
            byte b4 = au[c2];
            /* 35490 */
            byte b5 = au[b1];
            /* 35491 */
            byte b6 = au[b2];
            /* 35492 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35493 */
                return new byte[0];
                /*       */
            }
            /* 35495 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35496 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35497 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35498 */
            arrayOfByte[b++] = (byte) m;
            /* 35499 */
            if (b < i) {
                /* 35500 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35502 */
            if (b < i) {
                /* 35503 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35506 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mH(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35510 */
        if (paramInt2 % 4 != 0) {
            /* 35511 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35514 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35515 */
            paramInt2--;
            /*       */
        }
        /* 35517 */
        int i = paramInt2 * 3 / 4;
        /* 35518 */
        byte[] arrayOfByte = new byte[i];
        /* 35519 */
        int j = paramInt1;
        /* 35520 */
        int k = paramInt1 + paramInt2;
        /* 35521 */
        byte b = 0;
        /* 35522 */
        while (j < k) {
            /* 35523 */
            char c1 = paramArrayOfchar[j++];
            /* 35524 */
            char c2 = paramArrayOfchar[j++];
            /* 35525 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35526 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35528 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35529 */
                return new byte[0];
                /*       */
            }
            /* 35531 */
            byte b3 = au[c1];
            /* 35532 */
            byte b4 = au[c2];
            /* 35533 */
            byte b5 = au[b1];
            /* 35534 */
            byte b6 = au[b2];
            /* 35535 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35536 */
                return new byte[0];
                /*       */
            }
            /* 35538 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35539 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35540 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35541 */
            arrayOfByte[b++] = (byte) m;
            /* 35542 */
            if (b < i) {
                /* 35543 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35545 */
            if (b < i) {
                /* 35546 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35549 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mI(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35553 */
        if (paramInt2 % 4 != 0) {
            /* 35554 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35557 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35558 */
            paramInt2--;
            /*       */
        }
        /* 35560 */
        int i = paramInt2 * 3 / 4;
        /* 35561 */
        byte[] arrayOfByte = new byte[i];
        /* 35562 */
        int j = paramInt1;
        /* 35563 */
        int k = paramInt1 + paramInt2;
        /* 35564 */
        byte b = 0;
        /* 35565 */
        while (j < k) {
            /* 35566 */
            char c1 = paramArrayOfchar[j++];
            /* 35567 */
            char c2 = paramArrayOfchar[j++];
            /* 35568 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35569 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35571 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35572 */
                return new byte[0];
                /*       */
            }
            /* 35574 */
            byte b3 = au[c1];
            /* 35575 */
            byte b4 = au[c2];
            /* 35576 */
            byte b5 = au[b1];
            /* 35577 */
            byte b6 = au[b2];
            /* 35578 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35579 */
                return new byte[0];
                /*       */
            }
            /* 35581 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35582 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35583 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35584 */
            arrayOfByte[b++] = (byte) m;
            /* 35585 */
            if (b < i) {
                /* 35586 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35588 */
            if (b < i) {
                /* 35589 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35592 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mJ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35596 */
        if (paramInt2 % 4 != 0) {
            /* 35597 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35600 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35601 */
            paramInt2--;
            /*       */
        }
        /* 35603 */
        int i = paramInt2 * 3 / 4;
        /* 35604 */
        byte[] arrayOfByte = new byte[i];
        /* 35605 */
        int j = paramInt1;
        /* 35606 */
        int k = paramInt1 + paramInt2;
        /* 35607 */
        byte b = 0;
        /* 35608 */
        while (j < k) {
            /* 35609 */
            char c1 = paramArrayOfchar[j++];
            /* 35610 */
            char c2 = paramArrayOfchar[j++];
            /* 35611 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35612 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35614 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35615 */
                return new byte[0];
                /*       */
            }
            /* 35617 */
            byte b3 = au[c1];
            /* 35618 */
            byte b4 = au[c2];
            /* 35619 */
            byte b5 = au[b1];
            /* 35620 */
            byte b6 = au[b2];
            /* 35621 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35622 */
                return new byte[0];
                /*       */
            }
            /* 35624 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35625 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35626 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35627 */
            arrayOfByte[b++] = (byte) m;
            /* 35628 */
            if (b < i) {
                /* 35629 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35631 */
            if (b < i) {
                /* 35632 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35635 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mK(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35639 */
        if (paramInt2 % 4 != 0) {
            /* 35640 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35643 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35644 */
            paramInt2--;
            /*       */
        }
        /* 35646 */
        int i = paramInt2 * 3 / 4;
        /* 35647 */
        byte[] arrayOfByte = new byte[i];
        /* 35648 */
        int j = paramInt1;
        /* 35649 */
        int k = paramInt1 + paramInt2;
        /* 35650 */
        byte b = 0;
        /* 35651 */
        while (j < k) {
            /* 35652 */
            char c1 = paramArrayOfchar[j++];
            /* 35653 */
            char c2 = paramArrayOfchar[j++];
            /* 35654 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35655 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35657 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35658 */
                return new byte[0];
                /*       */
            }
            /* 35660 */
            byte b3 = au[c1];
            /* 35661 */
            byte b4 = au[c2];
            /* 35662 */
            byte b5 = au[b1];
            /* 35663 */
            byte b6 = au[b2];
            /* 35664 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35665 */
                return new byte[0];
                /*       */
            }
            /* 35667 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35668 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35669 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35670 */
            arrayOfByte[b++] = (byte) m;
            /* 35671 */
            if (b < i) {
                /* 35672 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35674 */
            if (b < i) {
                /* 35675 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35678 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mL(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35682 */
        if (paramInt2 % 4 != 0) {
            /* 35683 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35686 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35687 */
            paramInt2--;
            /*       */
        }
        /* 35689 */
        int i = paramInt2 * 3 / 4;
        /* 35690 */
        byte[] arrayOfByte = new byte[i];
        /* 35691 */
        int j = paramInt1;
        /* 35692 */
        int k = paramInt1 + paramInt2;
        /* 35693 */
        byte b = 0;
        /* 35694 */
        while (j < k) {
            /* 35695 */
            char c1 = paramArrayOfchar[j++];
            /* 35696 */
            char c2 = paramArrayOfchar[j++];
            /* 35697 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35698 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35700 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35701 */
                return new byte[0];
                /*       */
            }
            /* 35703 */
            byte b3 = au[c1];
            /* 35704 */
            byte b4 = au[c2];
            /* 35705 */
            byte b5 = au[b1];
            /* 35706 */
            byte b6 = au[b2];
            /* 35707 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35708 */
                return new byte[0];
                /*       */
            }
            /* 35710 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35711 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35712 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35713 */
            arrayOfByte[b++] = (byte) m;
            /* 35714 */
            if (b < i) {
                /* 35715 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35717 */
            if (b < i) {
                /* 35718 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35721 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] mM(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 35725 */
        if (paramInt2 % 4 != 0) {
            /* 35726 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 35729 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 35730 */
            paramInt2--;
            /*       */
        }
        /* 35732 */
        int i = paramInt2 * 3 / 4;
        /* 35733 */
        byte[] arrayOfByte = new byte[i];
        /* 35734 */
        int j = paramInt1;
        /* 35735 */
        int k = paramInt1 + paramInt2;
        /* 35736 */
        byte b = 0;
        /* 35737 */
        while (j < k) {
            /* 35738 */
            char c1 = paramArrayOfchar[j++];
            /* 35739 */
            char c2 = paramArrayOfchar[j++];
            /* 35740 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 35741 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 35743 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 35744 */
                return new byte[0];
                /*       */
            }
            /* 35746 */
            byte b3 = au[c1];
            /* 35747 */
            byte b4 = au[c2];
            /* 35748 */
            byte b5 = au[b1];
            /* 35749 */
            byte b6 = au[b2];
            /* 35750 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 35751 */
                return new byte[0];
                /*       */
            }
            /* 35753 */
            int m = b3 << 2 | b4 >>> 4;
            /* 35754 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 35755 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 35756 */
            arrayOfByte[b++] = (byte) m;
            /* 35757 */
            if (b < i) {
                /* 35758 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 35760 */
            if (b < i) {
                /* 35761 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 35764 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */   static
        /*       */ {
        /* 35769 */
        b = 0;
        /* 35770 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 35771 */
            N[b++] = c;
            /*       */
        }
        /* 35773 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 35774 */
            N[b++] = c;
            /*       */
        }
        /* 35776 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 35777 */
            N[b++] = c;
            /*       */
        }
        /* 35779 */
        N[b++] = '+';
        /* 35780 */
        N[b++] = '/';
        /*       */
        /*       */
        /* 36480 */
        b = 0;
        /* 36481 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 36482 */
            O[b++] = c;
            /*       */
        }
        /* 36484 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 36485 */
            O[b++] = c;
            /*       */
        }
        /* 36487 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 36488 */
            O[b++] = c;
            /*       */
        }
        /* 36490 */
        O[b++] = '+';
        /* 36491 */
        O[b++] = '/';

        /* 37400 */
        b = 0;
        /* 37401 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 37402 */
            P[b++] = c;
            /*       */
        }
        /* 37404 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 37405 */
            P[b++] = c;
            /*       */
        }
        /* 37407 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 37408 */
            P[b++] = c;
            /*       */
        }
        /* 37410 */
        P[b++] = '+';
        /* 37411 */
        P[b++] = '/';
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /*       */
        /* 37931 */
        b = 0;
        /* 37932 */
        for (c = 'A'; c <= 'Z'; c = (char) (c + 1)) {
            /* 37933 */
            Q[b++] = c;
            /*       */
        }
        /* 37935 */
        for (c = 'a'; c <= 'z'; c = (char) (c + 1)) {
            /* 37936 */
            Q[b++] = c;
            /*       */
        }
        /* 37938 */
        for (c = '0'; c <= '9'; c = (char) (c + 1)) {
            /* 37939 */
            Q[b++] = c;
            /*       */
        }
        /* 37941 */
        Q[b++] = '+';
        /* 37942 */
        Q[b++] = '/';
        /*       */
    }

    private static byte[] mN(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] mO(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] mP(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] mQ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] mR(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] mS(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] mT(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] mU(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] mV(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] mW(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] mX(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] mY(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] mZ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] na(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    public final String a(String paramString, byte[] paramArrayOfbyte1, byte[] paramArrayOfbyte2) throws Exception {
        return paramArrayOfbyte2.toString();
    }

    private static byte[] nb(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nc(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nd(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ne(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nf(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ng(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nh(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ni(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nj(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nk(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nl(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nm(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    class a {
        /*       */     private Cipher b;
        private Cipher c;

        private a(byte[] param1ArrayOfbyte1, byte[] param1ArrayOfbyte2) throws Exception {
            this.b = null;
            this.c = null;
            this.b = Cipher.getInstance(new String(a(param1ArrayOfbyte1), StandardCharsets.UTF_8));
            this.c = Cipher.getInstance(new String(c(param1ArrayOfbyte2)));
            SecretKeySpec secretKeySpec = new SecretKeySpec(param1ArrayOfbyte1, "");
            IvParameterSpec ivParameterSpec = new IvParameterSpec(param1ArrayOfbyte2);
            this.b.init(1, secretKeySpec, ivParameterSpec);
            this.c.init(2, secretKeySpec, ivParameterSpec);
        }

        private byte[] a(byte[] param1ArrayOfbyte) throws Exception {
            return this.b.doFinal(param1ArrayOfbyte);
        }

        private byte[] b(byte[] param1ArrayOfbyte) throws Exception {
            return this.c.doFinal(param1ArrayOfbyte);
        }

        private byte[] a(String param1String) throws Exception {
            byte[] arrayOfByte1 = param1String.getBytes("utf-8");
            byte[] arrayOfByte2 = a(arrayOfByte1);
            return a(arrayOfByte2);
        }

        private String b(String param1String) throws Exception {
            byte[] arrayOfByte1 = a(param1String);
            byte[] arrayOfByte2 = b(arrayOfByte1);
            return new String(arrayOfByte2, "utf-8");
        }

        private final a a(byte[] param1ArrayOfbyte1, byte[] param1ArrayOfbyte2) throws Exception {
            return new a(param1ArrayOfbyte1, param1ArrayOfbyte2);
        }
    }

    private static byte[] nn(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] no(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] np(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nq(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nr(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ns(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nt(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nu(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nv(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nw(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nx(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] ny(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nz(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nA(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nB(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nC(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nD(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nE(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nF(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nG(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    private static byte[] nH(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    /*       */
    private static byte[] nI(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) return new byte[0];
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') paramInt2--;
        int i = paramInt2 * 3 / 4;
        byte[] arrayOfByte = new byte[i];
        int j = paramInt1;
        int k = paramInt1 + paramInt2;
        byte b = 0;
        while (j < k) {
            char c1 = paramArrayOfchar[j++];
            char c2 = paramArrayOfchar[j++];
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) return new byte[0];
            byte b3 = au[c1];
            byte b4 = au[c2];
            byte b5 = au[b1];
            byte b6 = au[b2];
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) return new byte[0];
            int m = b3 << 2 | b4 >>> 4;
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            int i1 = (b5 & 0x3) << 6 | b6;
            arrayOfByte[b++] = (byte) m;
            if (b < i) arrayOfByte[b++] = (byte) n;
            if (b < i) arrayOfByte[b++] = (byte) i1;
        }
        return arrayOfByte;
    }

    /* 37946 */
    private static byte[] nJ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        if (paramInt2 % 4 != 0) {
            /* 37947 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 37950 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 37951 */
            paramInt2--;
            /*       */
        }
        /* 37953 */
        int i = paramInt2 * 3 / 4;
        /* 37954 */
        byte[] arrayOfByte = new byte[i];
        /* 37955 */
        int j = paramInt1;
        /* 37956 */
        int k = paramInt1 + paramInt2;
        /* 37957 */
        byte b = 0;
        /* 37958 */
        while (j < k) {
            /* 37959 */
            char c1 = paramArrayOfchar[j++];
            /* 37960 */
            char c2 = paramArrayOfchar[j++];
            /* 37961 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 37962 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 37964 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 37965 */
                return new byte[0];
                /*       */
            }
            /* 37967 */
            byte b3 = au[c1];
            /* 37968 */
            byte b4 = au[c2];
            /* 37969 */
            byte b5 = au[b1];
            /* 37970 */
            byte b6 = au[b2];
            /* 37971 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 37972 */
                return new byte[0];
                /*       */
            }
            /* 37974 */
            int m = b3 << 2 | b4 >>> 4;
            /* 37975 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 37976 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 37977 */
            arrayOfByte[b++] = (byte) m;
            /* 37978 */
            if (b < i) {
                /* 37979 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 37981 */
            if (b < i) {
                /* 37982 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 37985 */
        return arrayOfByte;
    }

    /*       */
    /*       */
    /*       */
    private static byte[] nK(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 37989 */
        if (paramInt2 % 4 != 0) {
            /* 37990 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 37993 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 37994 */
            paramInt2--;
            /*       */
        }
        /* 37996 */
        int i = paramInt2 * 3 / 4;
        /* 37997 */
        byte[] arrayOfByte = new byte[i];
        /* 37998 */
        int j = paramInt1;
        /* 37999 */
        int k = paramInt1 + paramInt2;
        /* 38000 */
        byte b = 0;
        /* 38001 */
        while (j < k) {
            /* 38002 */
            char c1 = paramArrayOfchar[j++];
            /* 38003 */
            char c2 = paramArrayOfchar[j++];
            /* 38004 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38005 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38007 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38008 */
                return new byte[0];
                /*       */
            }
            /* 38010 */
            byte b3 = au[c1];
            /* 38011 */
            byte b4 = au[c2];
            /* 38012 */
            byte b5 = au[b1];
            /* 38013 */
            byte b6 = au[b2];
            /* 38014 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38015 */
                return new byte[0];
                /*       */
            }
            /* 38017 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38018 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38019 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38020 */
            arrayOfByte[b++] = (byte) m;
            /* 38021 */
            if (b < i) {
                /* 38022 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38024 */
            if (b < i) {
                /* 38025 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38028 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] nL(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38032 */
        if (paramInt2 % 4 != 0) {
            /* 38033 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38036 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38037 */
            paramInt2--;
            /*       */
        }
        /* 38039 */
        int i = paramInt2 * 3 / 4;
        /* 38040 */
        byte[] arrayOfByte = new byte[i];
        /* 38041 */
        int j = paramInt1;
        /* 38042 */
        int k = paramInt1 + paramInt2;
        /* 38043 */
        byte b = 0;
        /* 38044 */
        while (j < k) {
            /* 38045 */
            char c1 = paramArrayOfchar[j++];
            /* 38046 */
            char c2 = paramArrayOfchar[j++];
            /* 38047 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38048 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38050 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38051 */
                return new byte[0];
                /*       */
            }
            /* 38053 */
            byte b3 = au[c1];
            /* 38054 */
            byte b4 = au[c2];
            /* 38055 */
            byte b5 = au[b1];
            /* 38056 */
            byte b6 = au[b2];
            /* 38057 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38058 */
                return new byte[0];
                /*       */
            }
            /* 38060 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38061 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38062 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38063 */
            arrayOfByte[b++] = (byte) m;
            /* 38064 */
            if (b < i) {
                /* 38065 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38067 */
            if (b < i) {
                /* 38068 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38071 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] nM(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38075 */
        if (paramInt2 % 4 != 0) {
            /* 38076 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38079 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38080 */
            paramInt2--;
            /*       */
        }
        /* 38082 */
        int i = paramInt2 * 3 / 4;
        /* 38083 */
        byte[] arrayOfByte = new byte[i];
        /* 38084 */
        int j = paramInt1;
        /* 38085 */
        int k = paramInt1 + paramInt2;
        /* 38086 */
        byte b = 0;
        /* 38087 */
        while (j < k) {
            /* 38088 */
            char c1 = paramArrayOfchar[j++];
            /* 38089 */
            char c2 = paramArrayOfchar[j++];
            /* 38090 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38091 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38093 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38094 */
                return new byte[0];
                /*       */
            }
            /* 38096 */
            byte b3 = au[c1];
            /* 38097 */
            byte b4 = au[c2];
            /* 38098 */
            byte b5 = au[b1];
            /* 38099 */
            byte b6 = au[b2];
            /* 38100 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38101 */
                return new byte[0];
                /*       */
            }
            /* 38103 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38104 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38105 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38106 */
            arrayOfByte[b++] = (byte) m;
            /* 38107 */
            if (b < i) {
                /* 38108 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38110 */
            if (b < i) {
                /* 38111 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38114 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] nN(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38118 */
        if (paramInt2 % 4 != 0) {
            /* 38119 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38122 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38123 */
            paramInt2--;
            /*       */
        }
        /* 38125 */
        int i = paramInt2 * 3 / 4;
        /* 38126 */
        byte[] arrayOfByte = new byte[i];
        /* 38127 */
        int j = paramInt1;
        /* 38128 */
        int k = paramInt1 + paramInt2;
        /* 38129 */
        byte b = 0;
        /* 38130 */
        while (j < k) {
            /* 38131 */
            char c1 = paramArrayOfchar[j++];
            /* 38132 */
            char c2 = paramArrayOfchar[j++];
            /* 38133 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38134 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38136 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38137 */
                return new byte[0];
                /*       */
            }
            /* 38139 */
            byte b3 = au[c1];
            /* 38140 */
            byte b4 = au[c2];
            /* 38141 */
            byte b5 = au[b1];
            /* 38142 */
            byte b6 = au[b2];
            /* 38143 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38144 */
                return new byte[0];
                /*       */
            }
            /* 38146 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38147 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38148 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38149 */
            arrayOfByte[b++] = (byte) m;
            /* 38150 */
            if (b < i) {
                /* 38151 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38153 */
            if (b < i) {
                /* 38154 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38157 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] nO(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38161 */
        if (paramInt2 % 4 != 0) {
            /* 38162 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38165 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38166 */
            paramInt2--;
            /*       */
        }
        /* 38168 */
        int i = paramInt2 * 3 / 4;
        /* 38169 */
        byte[] arrayOfByte = new byte[i];
        /* 38170 */
        int j = paramInt1;
        /* 38171 */
        int k = paramInt1 + paramInt2;
        /* 38172 */
        byte b = 0;
        /* 38173 */
        while (j < k) {
            /* 38174 */
            char c1 = paramArrayOfchar[j++];
            /* 38175 */
            char c2 = paramArrayOfchar[j++];
            /* 38176 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38177 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38179 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38180 */
                return new byte[0];
                /*       */
            }
            /* 38182 */
            byte b3 = au[c1];
            /* 38183 */
            byte b4 = au[c2];
            /* 38184 */
            byte b5 = au[b1];
            /* 38185 */
            byte b6 = au[b2];
            /* 38186 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38187 */
                return new byte[0];
                /*       */
            }
            /* 38189 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38190 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38191 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38192 */
            arrayOfByte[b++] = (byte) m;
            /* 38193 */
            if (b < i) {
                /* 38194 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38196 */
            if (b < i) {
                /* 38197 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38200 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] nP(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38204 */
        if (paramInt2 % 4 != 0) {
            /* 38205 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38208 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38209 */
            paramInt2--;
            /*       */
        }
        /* 38211 */
        int i = paramInt2 * 3 / 4;
        /* 38212 */
        byte[] arrayOfByte = new byte[i];
        /* 38213 */
        int j = paramInt1;
        /* 38214 */
        int k = paramInt1 + paramInt2;
        /* 38215 */
        byte b = 0;
        /* 38216 */
        while (j < k) {
            /* 38217 */
            char c1 = paramArrayOfchar[j++];
            /* 38218 */
            char c2 = paramArrayOfchar[j++];
            /* 38219 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38220 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38222 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38223 */
                return new byte[0];
                /*       */
            }
            /* 38225 */
            byte b3 = au[c1];
            /* 38226 */
            byte b4 = au[c2];
            /* 38227 */
            byte b5 = au[b1];
            /* 38228 */
            byte b6 = au[b2];
            /* 38229 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38230 */
                return new byte[0];
                /*       */
            }
            /* 38232 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38233 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38234 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38235 */
            arrayOfByte[b++] = (byte) m;
            /* 38236 */
            if (b < i) {
                /* 38237 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38239 */
            if (b < i) {
                /* 38240 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38243 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] nQ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38247 */
        if (paramInt2 % 4 != 0) {
            /* 38248 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38251 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38252 */
            paramInt2--;
            /*       */
        }
        /* 38254 */
        int i = paramInt2 * 3 / 4;
        /* 38255 */
        byte[] arrayOfByte = new byte[i];
        /* 38256 */
        int j = paramInt1;
        /* 38257 */
        int k = paramInt1 + paramInt2;
        /* 38258 */
        byte b = 0;
        /* 38259 */
        while (j < k) {
            /* 38260 */
            char c1 = paramArrayOfchar[j++];
            /* 38261 */
            char c2 = paramArrayOfchar[j++];
            /* 38262 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38263 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38265 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38266 */
                return new byte[0];
                /*       */
            }
            /* 38268 */
            byte b3 = au[c1];
            /* 38269 */
            byte b4 = au[c2];
            /* 38270 */
            byte b5 = au[b1];
            /* 38271 */
            byte b6 = au[b2];
            /* 38272 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38273 */
                return new byte[0];
                /*       */
            }
            /* 38275 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38276 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38277 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38278 */
            arrayOfByte[b++] = (byte) m;
            /* 38279 */
            if (b < i) {
                /* 38280 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38282 */
            if (b < i) {
                /* 38283 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38286 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] nR(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38290 */
        if (paramInt2 % 4 != 0) {
            /* 38291 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38294 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38295 */
            paramInt2--;
            /*       */
        }
        /* 38297 */
        int i = paramInt2 * 3 / 4;
        /* 38298 */
        byte[] arrayOfByte = new byte[i];
        /* 38299 */
        int j = paramInt1;
        /* 38300 */
        int k = paramInt1 + paramInt2;
        /* 38301 */
        byte b = 0;
        /* 38302 */
        while (j < k) {
            /* 38303 */
            char c1 = paramArrayOfchar[j++];
            /* 38304 */
            char c2 = paramArrayOfchar[j++];
            /* 38305 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38306 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38308 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38309 */
                return new byte[0];
                /*       */
            }
            /* 38311 */
            byte b3 = au[c1];
            /* 38312 */
            byte b4 = au[c2];
            /* 38313 */
            byte b5 = au[b1];
            /* 38314 */
            byte b6 = au[b2];
            /* 38315 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38316 */
                return new byte[0];
                /*       */
            }
            /* 38318 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38319 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38320 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38321 */
            arrayOfByte[b++] = (byte) m;
            /* 38322 */
            if (b < i) {
                /* 38323 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38325 */
            if (b < i) {
                /* 38326 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38329 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] nS(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38333 */
        if (paramInt2 % 4 != 0) {
            /* 38334 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38337 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38338 */
            paramInt2--;
            /*       */
        }
        /* 38340 */
        int i = paramInt2 * 3 / 4;
        /* 38341 */
        byte[] arrayOfByte = new byte[i];
        /* 38342 */
        int j = paramInt1;
        /* 38343 */
        int k = paramInt1 + paramInt2;
        /* 38344 */
        byte b = 0;
        /* 38345 */
        while (j < k) {
            /* 38346 */
            char c1 = paramArrayOfchar[j++];
            /* 38347 */
            char c2 = paramArrayOfchar[j++];
            /* 38348 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38349 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38351 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38352 */
                return new byte[0];
                /*       */
            }
            /* 38354 */
            byte b3 = au[c1];
            /* 38355 */
            byte b4 = au[c2];
            /* 38356 */
            byte b5 = au[b1];
            /* 38357 */
            byte b6 = au[b2];
            /* 38358 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38359 */
                return new byte[0];
                /*       */
            }
            /* 38361 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38362 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38363 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38364 */
            arrayOfByte[b++] = (byte) m;
            /* 38365 */
            if (b < i) {
                /* 38366 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38368 */
            if (b < i) {
                /* 38369 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38372 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */   class ar
            /*       */ {
        /*       */ Policy.Parameters a;
        /*       */
        /* 38380 */     private double c = 0.0D;
        /* 38381 */     private double d = 0.0D;
        /* 38382 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public ar(a this$0) {
            /* 38387 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 38392 */
            if (param1Int == 0 || param1Int == 1)
                /* 38393 */ return 1;
            /* 38394 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 38403 */
            double d = param1Double;
            /* 38404 */
            if (this.f == true)
                /* 38405 */ d = Math.toRadians(param1Double);
            /* 38406 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 38411 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 38417 */
            byte b1 = 0;
            /* 38418 */
            byte b2 = 0;
            /* 38419 */
            byte b3 = 40;
            /* 38420 */
            byte b4 = 41;
            /* 38421 */
            String str = param1String;
            /* 38422 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 38423 */
                if (param1String.charAt(b5) == b3) {
                    /* 38424 */
                    b1++;
                    /* 38425 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 38426 */
                    b2++;
                    /*       */
                }
                /* 38428 */
            }
            while (b1 > 0) {
                /* 38429 */
                str = str + b4;
                /* 38430 */
                b1--;
                /*       */
            }
            /* 38432 */
            while (b2 > 0) {
                /* 38433 */
                str = b3 + str;
                /* 38434 */
                b2--;
                /*       */
            }
            /* 38436 */
            str = b(str);
            /* 38437 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 38442 */
            String str = "";
            /* 38443 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 38444 */
                str = str + param1String.charAt(b);
                /* 38445 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 38447 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 38448 */ str = str + '*';
                    /* 38449 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 38450 */ str = str + '1';
                    /*       */
                }
                /* 38452 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    private static byte[] nT(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38457 */
        if (paramInt2 % 4 != 0) {
            /* 38458 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38461 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38462 */
            paramInt2--;
            /*       */
        }
        /* 38464 */
        int i = paramInt2 * 3 / 4;
        /* 38465 */
        byte[] arrayOfByte = new byte[i];
        /* 38466 */
        int j = paramInt1;
        /* 38467 */
        int k = paramInt1 + paramInt2;
        /* 38468 */
        byte b = 0;
        /* 38469 */
        while (j < k) {
            /* 38470 */
            char c1 = paramArrayOfchar[j++];
            /* 38471 */
            char c2 = paramArrayOfchar[j++];
            /* 38472 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38473 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38475 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38476 */
                return new byte[0];
                /*       */
            }
            /* 38478 */
            byte b3 = au[c1];
            /* 38479 */
            byte b4 = au[c2];
            /* 38480 */
            byte b5 = au[b1];
            /* 38481 */
            byte b6 = au[b2];
            /* 38482 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38483 */
                return new byte[0];
                /*       */
            }
            /* 38485 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38486 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38487 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38488 */
            arrayOfByte[b++] = (byte) m;
            /* 38489 */
            if (b < i) {
                /* 38490 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38492 */
            if (b < i) {
                /* 38493 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38496 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] nU(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38500 */
        if (paramInt2 % 4 != 0) {
            /* 38501 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38504 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38505 */
            paramInt2--;
            /*       */
        }
        /* 38507 */
        int i = paramInt2 * 3 / 4;
        /* 38508 */
        byte[] arrayOfByte = new byte[i];
        /* 38509 */
        int j = paramInt1;
        /* 38510 */
        int k = paramInt1 + paramInt2;
        /* 38511 */
        byte b = 0;
        /* 38512 */
        while (j < k) {
            /* 38513 */
            char c1 = paramArrayOfchar[j++];
            /* 38514 */
            char c2 = paramArrayOfchar[j++];
            /* 38515 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38516 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38518 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38519 */
                return new byte[0];
                /*       */
            }
            /* 38521 */
            byte b3 = au[c1];
            /* 38522 */
            byte b4 = au[c2];
            /* 38523 */
            byte b5 = au[b1];
            /* 38524 */
            byte b6 = au[b2];
            /* 38525 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38526 */
                return new byte[0];
                /*       */
            }
            /* 38528 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38529 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38530 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38531 */
            arrayOfByte[b++] = (byte) m;
            /* 38532 */
            if (b < i) {
                /* 38533 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38535 */
            if (b < i) {
                /* 38536 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38539 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] nV(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38543 */
        if (paramInt2 % 4 != 0) {
            /* 38544 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38547 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38548 */
            paramInt2--;
            /*       */
        }
        /* 38550 */
        int i = paramInt2 * 3 / 4;
        /* 38551 */
        byte[] arrayOfByte = new byte[i];
        /* 38552 */
        int j = paramInt1;
        /* 38553 */
        int k = paramInt1 + paramInt2;
        /* 38554 */
        byte b = 0;
        /* 38555 */
        while (j < k) {
            /* 38556 */
            char c1 = paramArrayOfchar[j++];
            /* 38557 */
            char c2 = paramArrayOfchar[j++];
            /* 38558 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38559 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38561 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38562 */
                return new byte[0];
                /*       */
            }
            /* 38564 */
            byte b3 = au[c1];
            /* 38565 */
            byte b4 = au[c2];
            /* 38566 */
            byte b5 = au[b1];
            /* 38567 */
            byte b6 = au[b2];
            /* 38568 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38569 */
                return new byte[0];
                /*       */
            }
            /* 38571 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38572 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38573 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38574 */
            arrayOfByte[b++] = (byte) m;
            /* 38575 */
            if (b < i) {
                /* 38576 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38578 */
            if (b < i) {
                /* 38579 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38582 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] nW(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38586 */
        if (paramInt2 % 4 != 0) {
            /* 38587 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38590 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38591 */
            paramInt2--;
            /*       */
        }
        /* 38593 */
        int i = paramInt2 * 3 / 4;
        /* 38594 */
        byte[] arrayOfByte = new byte[i];
        /* 38595 */
        int j = paramInt1;
        /* 38596 */
        int k = paramInt1 + paramInt2;
        /* 38597 */
        byte b = 0;
        /* 38598 */
        while (j < k) {
            /* 38599 */
            char c1 = paramArrayOfchar[j++];
            /* 38600 */
            char c2 = paramArrayOfchar[j++];
            /* 38601 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38602 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38604 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38605 */
                return new byte[0];
                /*       */
            }
            /* 38607 */
            byte b3 = au[c1];
            /* 38608 */
            byte b4 = au[c2];
            /* 38609 */
            byte b5 = au[b1];
            /* 38610 */
            byte b6 = au[b2];
            /* 38611 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38612 */
                return new byte[0];
                /*       */
            }
            /* 38614 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38615 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38616 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38617 */
            arrayOfByte[b++] = (byte) m;
            /* 38618 */
            if (b < i) {
                /* 38619 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38621 */
            if (b < i) {
                /* 38622 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38625 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] nX(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38629 */
        if (paramInt2 % 4 != 0) {
            /* 38630 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38633 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38634 */
            paramInt2--;
            /*       */
        }
        /* 38636 */
        int i = paramInt2 * 3 / 4;
        /* 38637 */
        byte[] arrayOfByte = new byte[i];
        /* 38638 */
        int j = paramInt1;
        /* 38639 */
        int k = paramInt1 + paramInt2;
        /* 38640 */
        byte b = 0;
        /* 38641 */
        while (j < k) {
            /* 38642 */
            char c1 = paramArrayOfchar[j++];
            /* 38643 */
            char c2 = paramArrayOfchar[j++];
            /* 38644 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38645 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38647 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38648 */
                return new byte[0];
                /*       */
            }
            /* 38650 */
            byte b3 = au[c1];
            /* 38651 */
            byte b4 = au[c2];
            /* 38652 */
            byte b5 = au[b1];
            /* 38653 */
            byte b6 = au[b2];
            /* 38654 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38655 */
                return new byte[0];
                /*       */
            }
            /* 38657 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38658 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38659 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38660 */
            arrayOfByte[b++] = (byte) m;
            /* 38661 */
            if (b < i) {
                /* 38662 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38664 */
            if (b < i) {
                /* 38665 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38668 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] nY(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38672 */
        if (paramInt2 % 4 != 0) {
            /* 38673 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38676 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38677 */
            paramInt2--;
            /*       */
        }
        /* 38679 */
        int i = paramInt2 * 3 / 4;
        /* 38680 */
        byte[] arrayOfByte = new byte[i];
        /* 38681 */
        int j = paramInt1;
        /* 38682 */
        int k = paramInt1 + paramInt2;
        /* 38683 */
        byte b = 0;
        /* 38684 */
        while (j < k) {
            /* 38685 */
            char c1 = paramArrayOfchar[j++];
            /* 38686 */
            char c2 = paramArrayOfchar[j++];
            /* 38687 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38688 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38690 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38691 */
                return new byte[0];
                /*       */
            }
            /* 38693 */
            byte b3 = au[c1];
            /* 38694 */
            byte b4 = au[c2];
            /* 38695 */
            byte b5 = au[b1];
            /* 38696 */
            byte b6 = au[b2];
            /* 38697 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38698 */
                return new byte[0];
                /*       */
            }
            /* 38700 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38701 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38702 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38703 */
            arrayOfByte[b++] = (byte) m;
            /* 38704 */
            if (b < i) {
                /* 38705 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38707 */
            if (b < i) {
                /* 38708 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38711 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] nZ(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38716 */
        if (paramInt2 % 4 != 0) {
            /* 38717 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38720 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38721 */
            paramInt2--;
            /*       */
        }
        /* 38723 */
        int i = paramInt2 * 3 / 4;
        /* 38724 */
        byte[] arrayOfByte = new byte[i];
        /* 38725 */
        int j = paramInt1;
        /* 38726 */
        int k = paramInt1 + paramInt2;
        /* 38727 */
        byte b = 0;
        /* 38728 */
        while (j < k) {
            /* 38729 */
            char c1 = paramArrayOfchar[j++];
            /* 38730 */
            char c2 = paramArrayOfchar[j++];
            /* 38731 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38732 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38734 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38735 */
                return new byte[0];
                /*       */
            }
            /* 38737 */
            byte b3 = au[c1];
            /* 38738 */
            byte b4 = au[c2];
            /* 38739 */
            byte b5 = au[b1];
            /* 38740 */
            byte b6 = au[b2];
            /* 38741 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38742 */
                return new byte[0];
                /*       */
            }
            /* 38744 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38745 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38746 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38747 */
            arrayOfByte[b++] = (byte) m;
            /* 38748 */
            if (b < i) {
                /* 38749 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38751 */
            if (b < i) {
                /* 38752 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38755 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] oa(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38759 */
        if (paramInt2 % 4 != 0) {
            /* 38760 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38763 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38764 */
            paramInt2--;
            /*       */
        }
        /* 38766 */
        int i = paramInt2 * 3 / 4;
        /* 38767 */
        byte[] arrayOfByte = new byte[i];
        /* 38768 */
        int j = paramInt1;
        /* 38769 */
        int k = paramInt1 + paramInt2;
        /* 38770 */
        byte b = 0;
        /* 38771 */
        while (j < k) {
            /* 38772 */
            char c1 = paramArrayOfchar[j++];
            /* 38773 */
            char c2 = paramArrayOfchar[j++];
            /* 38774 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38775 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38777 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38778 */
                return new byte[0];
                /*       */
            }
            /* 38780 */
            byte b3 = au[c1];
            /* 38781 */
            byte b4 = au[c2];
            /* 38782 */
            byte b5 = au[b1];
            /* 38783 */
            byte b6 = au[b2];
            /* 38784 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38785 */
                return new byte[0];
                /*       */
            }
            /* 38787 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38788 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38789 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38790 */
            arrayOfByte[b++] = (byte) m;
            /* 38791 */
            if (b < i) {
                /* 38792 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38794 */
            if (b < i) {
                /* 38795 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38798 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ob(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38802 */
        if (paramInt2 % 4 != 0) {
            /* 38803 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38806 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38807 */
            paramInt2--;
            /*       */
        }
        /* 38809 */
        int i = paramInt2 * 3 / 4;
        /* 38810 */
        byte[] arrayOfByte = new byte[i];
        /* 38811 */
        int j = paramInt1;
        /* 38812 */
        int k = paramInt1 + paramInt2;
        /* 38813 */
        byte b = 0;
        /* 38814 */
        while (j < k) {
            /* 38815 */
            char c1 = paramArrayOfchar[j++];
            /* 38816 */
            char c2 = paramArrayOfchar[j++];
            /* 38817 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38818 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38820 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38821 */
                return new byte[0];
                /*       */
            }
            /* 38823 */
            byte b3 = au[c1];
            /* 38824 */
            byte b4 = au[c2];
            /* 38825 */
            byte b5 = au[b1];
            /* 38826 */
            byte b6 = au[b2];
            /* 38827 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38828 */
                return new byte[0];
                /*       */
            }
            /* 38830 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38831 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38832 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38833 */
            arrayOfByte[b++] = (byte) m;
            /* 38834 */
            if (b < i) {
                /* 38835 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38837 */
            if (b < i) {
                /* 38838 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38841 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] oc(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38845 */
        if (paramInt2 % 4 != 0) {
            /* 38846 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38849 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38850 */
            paramInt2--;
            /*       */
        }
        /* 38852 */
        int i = paramInt2 * 3 / 4;
        /* 38853 */
        byte[] arrayOfByte = new byte[i];
        /* 38854 */
        int j = paramInt1;
        /* 38855 */
        int k = paramInt1 + paramInt2;
        /* 38856 */
        byte b = 0;
        /* 38857 */
        while (j < k) {
            /* 38858 */
            char c1 = paramArrayOfchar[j++];
            /* 38859 */
            char c2 = paramArrayOfchar[j++];
            /* 38860 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38861 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38863 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38864 */
                return new byte[0];
                /*       */
            }
            /* 38866 */
            byte b3 = au[c1];
            /* 38867 */
            byte b4 = au[c2];
            /* 38868 */
            byte b5 = au[b1];
            /* 38869 */
            byte b6 = au[b2];
            /* 38870 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38871 */
                return new byte[0];
                /*       */
            }
            /* 38873 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38874 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38875 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38876 */
            arrayOfByte[b++] = (byte) m;
            /* 38877 */
            if (b < i) {
                /* 38878 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38880 */
            if (b < i) {
                /* 38881 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38884 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] od(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38888 */
        if (paramInt2 % 4 != 0) {
            /* 38889 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38892 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38893 */
            paramInt2--;
            /*       */
        }
        /* 38895 */
        int i = paramInt2 * 3 / 4;
        /* 38896 */
        byte[] arrayOfByte = new byte[i];
        /* 38897 */
        int j = paramInt1;
        /* 38898 */
        int k = paramInt1 + paramInt2;
        /* 38899 */
        byte b = 0;
        /* 38900 */
        while (j < k) {
            /* 38901 */
            char c1 = paramArrayOfchar[j++];
            /* 38902 */
            char c2 = paramArrayOfchar[j++];
            /* 38903 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38904 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38906 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38907 */
                return new byte[0];
                /*       */
            }
            /* 38909 */
            byte b3 = au[c1];
            /* 38910 */
            byte b4 = au[c2];
            /* 38911 */
            byte b5 = au[b1];
            /* 38912 */
            byte b6 = au[b2];
            /* 38913 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38914 */
                return new byte[0];
                /*       */
            }
            /* 38916 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38917 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38918 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38919 */
            arrayOfByte[b++] = (byte) m;
            /* 38920 */
            if (b < i) {
                /* 38921 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38923 */
            if (b < i) {
                /* 38924 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38927 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] oe(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38932 */
        if (paramInt2 % 4 != 0) {
            /* 38933 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38936 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38937 */
            paramInt2--;
            /*       */
        }
        /* 38939 */
        int i = paramInt2 * 3 / 4;
        /* 38940 */
        byte[] arrayOfByte = new byte[i];
        /* 38941 */
        int j = paramInt1;
        /* 38942 */
        int k = paramInt1 + paramInt2;
        /* 38943 */
        byte b = 0;
        /* 38944 */
        while (j < k) {
            /* 38945 */
            char c1 = paramArrayOfchar[j++];
            /* 38946 */
            char c2 = paramArrayOfchar[j++];
            /* 38947 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38948 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38950 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38951 */
                return new byte[0];
                /*       */
            }
            /* 38953 */
            byte b3 = au[c1];
            /* 38954 */
            byte b4 = au[c2];
            /* 38955 */
            byte b5 = au[b1];
            /* 38956 */
            byte b6 = au[b2];
            /* 38957 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 38958 */
                return new byte[0];
                /*       */
            }
            /* 38960 */
            int m = b3 << 2 | b4 >>> 4;
            /* 38961 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 38962 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 38963 */
            arrayOfByte[b++] = (byte) m;
            /* 38964 */
            if (b < i) {
                /* 38965 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 38967 */
            if (b < i) {
                /* 38968 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 38971 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] of(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 38975 */
        if (paramInt2 % 4 != 0) {
            /* 38976 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 38979 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 38980 */
            paramInt2--;
            /*       */
        }
        /* 38982 */
        int i = paramInt2 * 3 / 4;
        /* 38983 */
        byte[] arrayOfByte = new byte[i];
        /* 38984 */
        int j = paramInt1;
        /* 38985 */
        int k = paramInt1 + paramInt2;
        /* 38986 */
        byte b = 0;
        /* 38987 */
        while (j < k) {
            /* 38988 */
            char c1 = paramArrayOfchar[j++];
            /* 38989 */
            char c2 = paramArrayOfchar[j++];
            /* 38990 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 38991 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 38993 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 38994 */
                return new byte[0];
                /*       */
            }
            /* 38996 */
            byte b3 = au[c1];
            /* 38997 */
            byte b4 = au[c2];
            /* 38998 */
            byte b5 = au[b1];
            /* 38999 */
            byte b6 = au[b2];
            /* 39000 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 39001 */
                return new byte[0];
                /*       */
            }
            /* 39003 */
            int m = b3 << 2 | b4 >>> 4;
            /* 39004 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 39005 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 39006 */
            arrayOfByte[b++] = (byte) m;
            /* 39007 */
            if (b < i) {
                /* 39008 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 39010 */
            if (b < i) {
                /* 39011 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 39014 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] og(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 39018 */
        if (paramInt2 % 4 != 0) {
            /* 39019 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 39022 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 39023 */
            paramInt2--;
            /*       */
        }
        /* 39025 */
        int i = paramInt2 * 3 / 4;
        /* 39026 */
        byte[] arrayOfByte = new byte[i];
        /* 39027 */
        int j = paramInt1;
        /* 39028 */
        int k = paramInt1 + paramInt2;
        /* 39029 */
        byte b = 0;
        /* 39030 */
        while (j < k) {
            /* 39031 */
            char c1 = paramArrayOfchar[j++];
            /* 39032 */
            char c2 = paramArrayOfchar[j++];
            /* 39033 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 39034 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 39036 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 39037 */
                return new byte[0];
                /*       */
            }
            /* 39039 */
            byte b3 = au[c1];
            /* 39040 */
            byte b4 = au[c2];
            /* 39041 */
            byte b5 = au[b1];
            /* 39042 */
            byte b6 = au[b2];
            /* 39043 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 39044 */
                return new byte[0];
                /*       */
            }
            /* 39046 */
            int m = b3 << 2 | b4 >>> 4;
            /* 39047 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 39048 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 39049 */
            arrayOfByte[b++] = (byte) m;
            /* 39050 */
            if (b < i) {
                /* 39051 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 39053 */
            if (b < i) {
                /* 39054 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 39057 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] oh(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 39061 */
        if (paramInt2 % 4 != 0) {
            /* 39062 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 39065 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 39066 */
            paramInt2--;
            /*       */
        }
        /* 39068 */
        int i = paramInt2 * 3 / 4;
        /* 39069 */
        byte[] arrayOfByte = new byte[i];
        /* 39070 */
        int j = paramInt1;
        /* 39071 */
        int k = paramInt1 + paramInt2;
        /* 39072 */
        byte b = 0;
        /* 39073 */
        while (j < k) {
            /* 39074 */
            char c1 = paramArrayOfchar[j++];
            /* 39075 */
            char c2 = paramArrayOfchar[j++];
            /* 39076 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 39077 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 39079 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 39080 */
                return new byte[0];
                /*       */
            }
            /* 39082 */
            byte b3 = au[c1];
            /* 39083 */
            byte b4 = au[c2];
            /* 39084 */
            byte b5 = au[b1];
            /* 39085 */
            byte b6 = au[b2];
            /* 39086 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 39087 */
                return new byte[0];
                /*       */
            }
            /* 39089 */
            int m = b3 << 2 | b4 >>> 4;
            /* 39090 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 39091 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 39092 */
            arrayOfByte[b++] = (byte) m;
            /* 39093 */
            if (b < i) {
                /* 39094 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 39096 */
            if (b < i) {
                /* 39097 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 39100 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] oi(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 39104 */
        if (paramInt2 % 4 != 0) {
            /* 39105 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 39108 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 39109 */
            paramInt2--;
            /*       */
        }
        /* 39111 */
        int i = paramInt2 * 3 / 4;
        /* 39112 */
        byte[] arrayOfByte = new byte[i];
        /* 39113 */
        int j = paramInt1;
        /* 39114 */
        int k = paramInt1 + paramInt2;
        /* 39115 */
        byte b = 0;
        /* 39116 */
        while (j < k) {
            /* 39117 */
            char c1 = paramArrayOfchar[j++];
            /* 39118 */
            char c2 = paramArrayOfchar[j++];
            /* 39119 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 39120 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 39122 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 39123 */
                return new byte[0];
                /*       */
            }
            /* 39125 */
            byte b3 = au[c1];
            /* 39126 */
            byte b4 = au[c2];
            /* 39127 */
            byte b5 = au[b1];
            /* 39128 */
            byte b6 = au[b2];
            /* 39129 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 39130 */
                return new byte[0];
                /*       */
            }
            /* 39132 */
            int m = b3 << 2 | b4 >>> 4;
            /* 39133 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 39134 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 39135 */
            arrayOfByte[b++] = (byte) m;
            /* 39136 */
            if (b < i) {
                /* 39137 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 39139 */
            if (b < i) {
                /* 39140 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 39143 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] oj(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 39147 */
        if (paramInt2 % 4 != 0) {
            /* 39148 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 39151 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 39152 */
            paramInt2--;
            /*       */
        }
        /* 39154 */
        int i = paramInt2 * 3 / 4;
        /* 39155 */
        byte[] arrayOfByte = new byte[i];
        /* 39156 */
        int j = paramInt1;
        /* 39157 */
        int k = paramInt1 + paramInt2;
        /* 39158 */
        byte b = 0;
        /* 39159 */
        while (j < k) {
            /* 39160 */
            char c1 = paramArrayOfchar[j++];
            /* 39161 */
            char c2 = paramArrayOfchar[j++];
            /* 39162 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 39163 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 39165 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 39166 */
                return new byte[0];
                /*       */
            }
            /* 39168 */
            byte b3 = au[c1];
            /* 39169 */
            byte b4 = au[c2];
            /* 39170 */
            byte b5 = au[b1];
            /* 39171 */
            byte b6 = au[b2];
            /* 39172 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 39173 */
                return new byte[0];
                /*       */
            }
            /* 39175 */
            int m = b3 << 2 | b4 >>> 4;
            /* 39176 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 39177 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 39178 */
            arrayOfByte[b++] = (byte) m;
            /* 39179 */
            if (b < i) {
                /* 39180 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 39182 */
            if (b < i) {
                /* 39183 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 39186 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ok(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 39190 */
        if (paramInt2 % 4 != 0) {
            /* 39191 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 39194 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 39195 */
            paramInt2--;
            /*       */
        }
        /* 39197 */
        int i = paramInt2 * 3 / 4;
        /* 39198 */
        byte[] arrayOfByte = new byte[i];
        /* 39199 */
        int j = paramInt1;
        /* 39200 */
        int k = paramInt1 + paramInt2;
        /* 39201 */
        byte b = 0;
        /* 39202 */
        while (j < k) {
            /* 39203 */
            char c1 = paramArrayOfchar[j++];
            /* 39204 */
            char c2 = paramArrayOfchar[j++];
            /* 39205 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 39206 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 39208 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 39209 */
                return new byte[0];
                /*       */
            }
            /* 39211 */
            byte b3 = au[c1];
            /* 39212 */
            byte b4 = au[c2];
            /* 39213 */
            byte b5 = au[b1];
            /* 39214 */
            byte b6 = au[b2];
            /* 39215 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 39216 */
                return new byte[0];
                /*       */
            }
            /* 39218 */
            int m = b3 << 2 | b4 >>> 4;
            /* 39219 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 39220 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 39221 */
            arrayOfByte[b++] = (byte) m;
            /* 39222 */
            if (b < i) {
                /* 39223 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 39225 */
            if (b < i) {
                /* 39226 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 39229 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */   class as
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 39236 */     private double c = 0.0D;
        /* 39237 */     private double d = 0.0D;
        /* 39238 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public as(a this$0) {
            /* 39243 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 39248 */
            if (param1Int == 0 || param1Int == 1)
                /* 39249 */ return 1;
            /* 39250 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 39259 */
            double d = param1Double;
            /* 39260 */
            if (this.f == true)
                /* 39261 */ d = Math.toRadians(param1Double);
            /* 39262 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 39267 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 39273 */
            byte b1 = 0;
            /* 39274 */
            byte b2 = 0;
            /* 39275 */
            byte b3 = 40;
            /* 39276 */
            byte b4 = 41;
            /* 39277 */
            String str = param1String;
            /* 39278 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 39279 */
                if (param1String.charAt(b5) == b3) {
                    /* 39280 */
                    b1++;
                    /* 39281 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 39282 */
                    b2++;
                    /*       */
                }
                /* 39284 */
            }
            while (b1 > 0) {
                /* 39285 */
                str = str + b4;
                /* 39286 */
                b1--;
                /*       */
            }
            /* 39288 */
            while (b2 > 0) {
                /* 39289 */
                str = b3 + str;
                /* 39290 */
                b2--;
                /*       */
            }
            /* 39292 */
            str = b(str);
            /* 39293 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 39298 */
            String str = "";
            /* 39299 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 39300 */
                str = str + param1String.charAt(b);
                /* 39301 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 39303 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 39304 */ str = str + '*';
                    /* 39305 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 39306 */ str = str + '1';
                    /*       */
                }
                /* 39308 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ol(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 39313 */
        if (paramInt2 % 4 != 0) {
            /* 39314 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 39317 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 39318 */
            paramInt2--;
            /*       */
        }
        /* 39320 */
        int i = paramInt2 * 3 / 4;
        /* 39321 */
        byte[] arrayOfByte = new byte[i];
        /* 39322 */
        int j = paramInt1;
        /* 39323 */
        int k = paramInt1 + paramInt2;
        /* 39324 */
        byte b = 0;
        /* 39325 */
        while (j < k) {
            /* 39326 */
            char c1 = paramArrayOfchar[j++];
            /* 39327 */
            char c2 = paramArrayOfchar[j++];
            /* 39328 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 39329 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 39331 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 39332 */
                return new byte[0];
                /*       */
            }
            /* 39334 */
            byte b3 = au[c1];
            /* 39335 */
            byte b4 = au[c2];
            /* 39336 */
            byte b5 = au[b1];
            /* 39337 */
            byte b6 = au[b2];
            /* 39338 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 39339 */
                return new byte[0];
                /*       */
            }
            /* 39341 */
            int m = b3 << 2 | b4 >>> 4;
            /* 39342 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 39343 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 39344 */
            arrayOfByte[b++] = (byte) m;
            /* 39345 */
            if (b < i) {
                /* 39346 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 39348 */
            if (b < i) {
                /* 39349 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 39352 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] om(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 39356 */
        if (paramInt2 % 4 != 0) {
            /* 39357 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 39360 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 39361 */
            paramInt2--;
            /*       */
        }
        /* 39363 */
        int i = paramInt2 * 3 / 4;
        /* 39364 */
        byte[] arrayOfByte = new byte[i];
        /* 39365 */
        int j = paramInt1;
        /* 39366 */
        int k = paramInt1 + paramInt2;
        /* 39367 */
        byte b = 0;
        /* 39368 */
        while (j < k) {
            /* 39369 */
            char c1 = paramArrayOfchar[j++];
            /* 39370 */
            char c2 = paramArrayOfchar[j++];
            /* 39371 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 39372 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 39374 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 39375 */
                return new byte[0];
                /*       */
            }
            /* 39377 */
            byte b3 = au[c1];
            /* 39378 */
            byte b4 = au[c2];
            /* 39379 */
            byte b5 = au[b1];
            /* 39380 */
            byte b6 = au[b2];
            /* 39381 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 39382 */
                return new byte[0];
                /*       */
            }
            /* 39384 */
            int m = b3 << 2 | b4 >>> 4;
            /* 39385 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 39386 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 39387 */
            arrayOfByte[b++] = (byte) m;
            /* 39388 */
            if (b < i) {
                /* 39389 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 39391 */
            if (b < i) {
                /* 39392 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 39395 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */   class at
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 39402 */     private double c = 0.0D;
        /* 39403 */     private double d = 0.0D;
        /* 39404 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public at(a this$0) {
            /* 39409 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 39414 */
            if (param1Int == 0 || param1Int == 1)
                /* 39415 */ return 1;
            /* 39416 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 39425 */
            double d = param1Double;
            /* 39426 */
            if (this.f == true)
                /* 39427 */ d = Math.toRadians(param1Double);
            /* 39428 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 39433 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 39439 */
            byte b1 = 0;
            /* 39440 */
            byte b2 = 0;
            /* 39441 */
            byte b3 = 40;
            /* 39442 */
            byte b4 = 41;
            /* 39443 */
            String str = param1String;
            /* 39444 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 39445 */
                if (param1String.charAt(b5) == b3) {
                    /* 39446 */
                    b1++;
                    /* 39447 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 39448 */
                    b2++;
                    /*       */
                }
                /* 39450 */
            }
            while (b1 > 0) {
                /* 39451 */
                str = str + b4;
                /* 39452 */
                b1--;
                /*       */
            }
            /* 39454 */
            while (b2 > 0) {
                /* 39455 */
                str = b3 + str;
                /* 39456 */
                b2--;
                /*       */
            }
            /* 39458 */
            str = b(str);
            /* 39459 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 39464 */
            String str = "";
            /* 39465 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 39466 */
                str = str + param1String.charAt(b);
                /* 39467 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 39469 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 39470 */ str = str + '*';
                    /* 39471 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 39472 */ str = str + '1';
                    /*       */
                }
                /* 39474 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */   class av
            /*       */ {
        /*       */ Policy.Parameters a;
        /*       */
        /* 39483 */     private double c = 0.0D;
        /* 39484 */     private double d = 0.0D;
        /* 39485 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public av(a this$0) {
            /* 39490 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 39495 */
            if (param1Int == 0 || param1Int == 1)
                /* 39496 */ return 1;
            /* 39497 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 39506 */
            double d = param1Double;
            /* 39507 */
            if (this.f == true)
                /* 39508 */ d = Math.toRadians(param1Double);
            /* 39509 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 39514 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 39520 */
            byte b1 = 0;
            /* 39521 */
            byte b2 = 0;
            /* 39522 */
            byte b3 = 40;
            /* 39523 */
            byte b4 = 41;
            /* 39524 */
            String str = param1String;
            /* 39525 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 39526 */
                if (param1String.charAt(b5) == b3) {
                    /* 39527 */
                    b1++;
                    /* 39528 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 39529 */
                    b2++;
                    /*       */
                }
                /* 39531 */
            }
            while (b1 > 0) {
                /* 39532 */
                str = str + b4;
                /* 39533 */
                b1--;
                /*       */
            }
            /* 39535 */
            while (b2 > 0) {
                /* 39536 */
                str = b3 + str;
                /* 39537 */
                b2--;
                /*       */
            }
            /* 39539 */
            str = b(str);
            /* 39540 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 39545 */
            String str = "";
            /* 39546 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 39547 */
                str = str + param1String.charAt(b);
                /* 39548 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 39550 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 39551 */ str = str + '*';
                    /* 39552 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 39553 */ str = str + '1';
                    /*       */
                }
                /* 39555 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    private static byte[] on(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 39560 */
        if (paramInt2 % 4 != 0) {
            /* 39561 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 39564 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 39565 */
            paramInt2--;
            /*       */
        }
        /* 39567 */
        int i = paramInt2 * 3 / 4;
        /* 39568 */
        byte[] arrayOfByte = new byte[i];
        /* 39569 */
        int j = paramInt1;
        /* 39570 */
        int k = paramInt1 + paramInt2;
        /* 39571 */
        byte b = 0;
        /* 39572 */
        while (j < k) {
            /* 39573 */
            char c1 = paramArrayOfchar[j++];
            /* 39574 */
            char c2 = paramArrayOfchar[j++];
            /* 39575 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 39576 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 39578 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 39579 */
                return new byte[0];
                /*       */
            }
            /* 39581 */
            byte b3 = au[c1];
            /* 39582 */
            byte b4 = au[c2];
            /* 39583 */
            byte b5 = au[b1];
            /* 39584 */
            byte b6 = au[b2];
            /* 39585 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 39586 */
                return new byte[0];
                /*       */
            }
            /* 39588 */
            int m = b3 << 2 | b4 >>> 4;
            /* 39589 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 39590 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 39591 */
            arrayOfByte[b++] = (byte) m;
            /* 39592 */
            if (b < i) {
                /* 39593 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 39595 */
            if (b < i) {
                /* 39596 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 39599 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] oo(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 39603 */
        if (paramInt2 % 4 != 0) {
            /* 39604 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 39607 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 39608 */
            paramInt2--;
            /*       */
        }
        /* 39610 */
        int i = paramInt2 * 3 / 4;
        /* 39611 */
        byte[] arrayOfByte = new byte[i];
        /* 39612 */
        int j = paramInt1;
        /* 39613 */
        int k = paramInt1 + paramInt2;
        /* 39614 */
        byte b = 0;
        /* 39615 */
        while (j < k) {
            /* 39616 */
            char c1 = paramArrayOfchar[j++];
            /* 39617 */
            char c2 = paramArrayOfchar[j++];
            /* 39618 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 39619 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 39621 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 39622 */
                return new byte[0];
                /*       */
            }
            /* 39624 */
            byte b3 = au[c1];
            /* 39625 */
            byte b4 = au[c2];
            /* 39626 */
            byte b5 = au[b1];
            /* 39627 */
            byte b6 = au[b2];
            /* 39628 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 39629 */
                return new byte[0];
                /*       */
            }
            /* 39631 */
            int m = b3 << 2 | b4 >>> 4;
            /* 39632 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 39633 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 39634 */
            arrayOfByte[b++] = (byte) m;
            /* 39635 */
            if (b < i) {
                /* 39636 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 39638 */
            if (b < i) {
                /* 39639 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 39642 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] op(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 39647 */
        if (paramInt2 % 4 != 0) {
            /* 39648 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 39651 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 39652 */
            paramInt2--;
            /*       */
        }
        /* 39654 */
        int i = paramInt2 * 3 / 4;
        /* 39655 */
        byte[] arrayOfByte = new byte[i];
        /* 39656 */
        int j = paramInt1;
        /* 39657 */
        int k = paramInt1 + paramInt2;
        /* 39658 */
        byte b = 0;
        /* 39659 */
        while (j < k) {
            /* 39660 */
            char c1 = paramArrayOfchar[j++];
            /* 39661 */
            char c2 = paramArrayOfchar[j++];
            /* 39662 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 39663 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 39665 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 39666 */
                return new byte[0];
                /*       */
            }
            /* 39668 */
            byte b3 = au[c1];
            /* 39669 */
            byte b4 = au[c2];
            /* 39670 */
            byte b5 = au[b1];
            /* 39671 */
            byte b6 = au[b2];
            /* 39672 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 39673 */
                return new byte[0];
                /*       */
            }
            /* 39675 */
            int m = b3 << 2 | b4 >>> 4;
            /* 39676 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 39677 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 39678 */
            arrayOfByte[b++] = (byte) m;
            /* 39679 */
            if (b < i) {
                /* 39680 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 39682 */
            if (b < i) {
                /* 39683 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 39686 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */   class aw
            /*       */ {
        /*       */ Policy.Parameters a;
        /*       */
        /* 39694 */     private double c = 0.0D;
        /* 39695 */     private double d = 0.0D;
        /* 39696 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public aw(a this$0) {
            /* 39701 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 39706 */
            if (param1Int == 0 || param1Int == 1)
                /* 39707 */ return 1;
            /* 39708 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 39717 */
            double d = param1Double;
            /* 39718 */
            if (this.f == true)
                /* 39719 */ d = Math.toRadians(param1Double);
            /* 39720 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 39725 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 39731 */
            byte b1 = 0;
            /* 39732 */
            byte b2 = 0;
            /* 39733 */
            byte b3 = 40;
            /* 39734 */
            byte b4 = 41;
            /* 39735 */
            String str = param1String;
            /* 39736 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 39737 */
                if (param1String.charAt(b5) == b3) {
                    /* 39738 */
                    b1++;
                    /* 39739 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 39740 */
                    b2++;
                    /*       */
                }
                /* 39742 */
            }
            while (b1 > 0) {
                /* 39743 */
                str = str + b4;
                /* 39744 */
                b1--;
                /*       */
            }
            /* 39746 */
            while (b2 > 0) {
                /* 39747 */
                str = b3 + str;
                /* 39748 */
                b2--;
                /*       */
            }
            /* 39750 */
            str = b(str);
            /* 39751 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 39756 */
            String str = "";
            /* 39757 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 39758 */
                str = str + param1String.charAt(b);
                /* 39759 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 39761 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 39762 */ str = str + '*';
                    /* 39763 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 39764 */ str = str + '1';
                    /*       */
                }
                /* 39766 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] oq(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 39772 */
        if (paramInt2 % 4 != 0) {
            /* 39773 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 39776 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 39777 */
            paramInt2--;
            /*       */
        }
        /* 39779 */
        int i = paramInt2 * 3 / 4;
        /* 39780 */
        byte[] arrayOfByte = new byte[i];
        /* 39781 */
        int j = paramInt1;
        /* 39782 */
        int k = paramInt1 + paramInt2;
        /* 39783 */
        byte b = 0;
        /* 39784 */
        while (j < k) {
            /* 39785 */
            char c1 = paramArrayOfchar[j++];
            /* 39786 */
            char c2 = paramArrayOfchar[j++];
            /* 39787 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 39788 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 39790 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 39791 */
                return new byte[0];
                /*       */
            }
            /* 39793 */
            byte b3 = au[c1];
            /* 39794 */
            byte b4 = au[c2];
            /* 39795 */
            byte b5 = au[b1];
            /* 39796 */
            byte b6 = au[b2];
            /* 39797 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 39798 */
                return new byte[0];
                /*       */
            }
            /* 39800 */
            int m = b3 << 2 | b4 >>> 4;
            /* 39801 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 39802 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 39803 */
            arrayOfByte[b++] = (byte) m;
            /* 39804 */
            if (b < i) {
                /* 39805 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 39807 */
            if (b < i) {
                /* 39808 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 39811 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */   class ax
            /*       */ {
        /*       */ Policy.Parameters a;
        /* 39818 */     private double c = 0.0D;
        /* 39819 */     private double d = 0.0D;
        /* 39820 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public ax(a this$0) {
            /* 39825 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 39830 */
            if (param1Int == 0 || param1Int == 1)
                /* 39831 */ return 1;
            /* 39832 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 39841 */
            double d = param1Double;
            /* 39842 */
            if (this.f == true)
                /* 39843 */ d = Math.toRadians(param1Double);
            /* 39844 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 39849 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 39855 */
            byte b1 = 0;
            /* 39856 */
            byte b2 = 0;
            /* 39857 */
            byte b3 = 40;
            /* 39858 */
            byte b4 = 41;
            /* 39859 */
            String str = param1String;
            /* 39860 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 39861 */
                if (param1String.charAt(b5) == b3) {
                    /* 39862 */
                    b1++;
                    /* 39863 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 39864 */
                    b2++;
                    /*       */
                }
                /* 39866 */
            }
            while (b1 > 0) {
                /* 39867 */
                str = str + b4;
                /* 39868 */
                b1--;
                /*       */
            }
            /* 39870 */
            while (b2 > 0) {
                /* 39871 */
                str = b3 + str;
                /* 39872 */
                b2--;
                /*       */
            }
            /* 39874 */
            str = b(str);
            /* 39875 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 39880 */
            String str = "";
            /* 39881 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 39882 */
                str = str + param1String.charAt(b);
                /* 39883 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 39885 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 39886 */ str = str + '*';
                    /* 39887 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 39888 */ str = str + '1';
                    /*       */
                }
                /* 39890 */
            }
            return str;
            /*       */
        }
        /*       */
    }

    /*       */
    /*       */
    /*       */
    private static byte[] or(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 39896 */
        if (paramInt2 % 4 != 0) {
            /* 39897 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 39900 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 39901 */
            paramInt2--;
            /*       */
        }
        /* 39903 */
        int i = paramInt2 * 3 / 4;
        /* 39904 */
        byte[] arrayOfByte = new byte[i];
        /* 39905 */
        int j = paramInt1;
        /* 39906 */
        int k = paramInt1 + paramInt2;
        /* 39907 */
        byte b = 0;
        /* 39908 */
        while (j < k) {
            /* 39909 */
            char c1 = paramArrayOfchar[j++];
            /* 39910 */
            char c2 = paramArrayOfchar[j++];
            /* 39911 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 39912 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 39914 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 39915 */
                return new byte[0];
                /*       */
            }
            /* 39917 */
            byte b3 = au[c1];
            /* 39918 */
            byte b4 = au[c2];
            /* 39919 */
            byte b5 = au[b1];
            /* 39920 */
            byte b6 = au[b2];
            /* 39921 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 39922 */
                return new byte[0];
                /*       */
            }
            /* 39924 */
            int m = b3 << 2 | b4 >>> 4;
            /* 39925 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 39926 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 39927 */
            arrayOfByte[b++] = (byte) m;
            /* 39928 */
            if (b < i) {
                /* 39929 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 39931 */
            if (b < i) {
                /* 39932 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 39935 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] os(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 39939 */
        if (paramInt2 % 4 != 0) {
            /* 39940 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 39943 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 39944 */
            paramInt2--;
            /*       */
        }
        /* 39946 */
        int i = paramInt2 * 3 / 4;
        /* 39947 */
        byte[] arrayOfByte = new byte[i];
        /* 39948 */
        int j = paramInt1;
        /* 39949 */
        int k = paramInt1 + paramInt2;
        /* 39950 */
        byte b = 0;
        /* 39951 */
        while (j < k) {
            /* 39952 */
            char c1 = paramArrayOfchar[j++];
            /* 39953 */
            char c2 = paramArrayOfchar[j++];
            /* 39954 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 39955 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 39957 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 39958 */
                return new byte[0];
                /*       */
            }
            /* 39960 */
            byte b3 = au[c1];
            /* 39961 */
            byte b4 = au[c2];
            /* 39962 */
            byte b5 = au[b1];
            /* 39963 */
            byte b6 = au[b2];
            /* 39964 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 39965 */
                return new byte[0];
                /*       */
            }
            /* 39967 */
            int m = b3 << 2 | b4 >>> 4;
            /* 39968 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 39969 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 39970 */
            arrayOfByte[b++] = (byte) m;
            /* 39971 */
            if (b < i) {
                /* 39972 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 39974 */
            if (b < i) {
                /* 39975 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 39978 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ot(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 39982 */
        if (paramInt2 % 4 != 0) {
            /* 39983 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 39986 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 39987 */
            paramInt2--;
            /*       */
        }
        /* 39989 */
        int i = paramInt2 * 3 / 4;
        /* 39990 */
        byte[] arrayOfByte = new byte[i];
        /* 39991 */
        int j = paramInt1;
        /* 39992 */
        int k = paramInt1 + paramInt2;
        /* 39993 */
        byte b = 0;
        /* 39994 */
        while (j < k) {
            /* 39995 */
            char c1 = paramArrayOfchar[j++];
            /* 39996 */
            char c2 = paramArrayOfchar[j++];
            /* 39997 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 39998 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 40000 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 40001 */
                return new byte[0];
                /*       */
            }
            /* 40003 */
            byte b3 = au[c1];
            /* 40004 */
            byte b4 = au[c2];
            /* 40005 */
            byte b5 = au[b1];
            /* 40006 */
            byte b6 = au[b2];
            /* 40007 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 40008 */
                return new byte[0];
                /*       */
            }
            /* 40010 */
            int m = b3 << 2 | b4 >>> 4;
            /* 40011 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 40012 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 40013 */
            arrayOfByte[b++] = (byte) m;
            /* 40014 */
            if (b < i) {
                /* 40015 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 40017 */
            if (b < i) {
                /* 40018 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 40021 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ou(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 40025 */
        if (paramInt2 % 4 != 0) {
            /* 40026 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 40029 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 40030 */
            paramInt2--;
            /*       */
        }
        /* 40032 */
        int i = paramInt2 * 3 / 4;
        /* 40033 */
        byte[] arrayOfByte = new byte[i];
        /* 40034 */
        int j = paramInt1;
        /* 40035 */
        int k = paramInt1 + paramInt2;
        /* 40036 */
        byte b = 0;
        /* 40037 */
        while (j < k) {
            /* 40038 */
            char c1 = paramArrayOfchar[j++];
            /* 40039 */
            char c2 = paramArrayOfchar[j++];
            /* 40040 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 40041 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 40043 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 40044 */
                return new byte[0];
                /*       */
            }
            /* 40046 */
            byte b3 = au[c1];
            /* 40047 */
            byte b4 = au[c2];
            /* 40048 */
            byte b5 = au[b1];
            /* 40049 */
            byte b6 = au[b2];
            /* 40050 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 40051 */
                return new byte[0];
                /*       */
            }
            /* 40053 */
            int m = b3 << 2 | b4 >>> 4;
            /* 40054 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 40055 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 40056 */
            arrayOfByte[b++] = (byte) m;
            /* 40057 */
            if (b < i) {
                /* 40058 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 40060 */
            if (b < i) {
                /* 40061 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 40064 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ov(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 40068 */
        if (paramInt2 % 4 != 0) {
            /* 40069 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 40072 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 40073 */
            paramInt2--;
            /*       */
        }
        /* 40075 */
        int i = paramInt2 * 3 / 4;
        /* 40076 */
        byte[] arrayOfByte = new byte[i];
        /* 40077 */
        int j = paramInt1;
        /* 40078 */
        int k = paramInt1 + paramInt2;
        /* 40079 */
        byte b = 0;
        /* 40080 */
        while (j < k) {
            /* 40081 */
            char c1 = paramArrayOfchar[j++];
            /* 40082 */
            char c2 = paramArrayOfchar[j++];
            /* 40083 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 40084 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 40086 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 40087 */
                return new byte[0];
                /*       */
            }
            /* 40089 */
            byte b3 = au[c1];
            /* 40090 */
            byte b4 = au[c2];
            /* 40091 */
            byte b5 = au[b1];
            /* 40092 */
            byte b6 = au[b2];
            /* 40093 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 40094 */
                return new byte[0];
                /*       */
            }
            /* 40096 */
            int m = b3 << 2 | b4 >>> 4;
            /* 40097 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 40098 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 40099 */
            arrayOfByte[b++] = (byte) m;
            /* 40100 */
            if (b < i) {
                /* 40101 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 40103 */
            if (b < i) {
                /* 40104 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 40107 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ow(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 40111 */
        if (paramInt2 % 4 != 0) {
            /* 40112 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 40115 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 40116 */
            paramInt2--;
            /*       */
        }
        /* 40118 */
        int i = paramInt2 * 3 / 4;
        /* 40119 */
        byte[] arrayOfByte = new byte[i];
        /* 40120 */
        int j = paramInt1;
        /* 40121 */
        int k = paramInt1 + paramInt2;
        /* 40122 */
        byte b = 0;
        /* 40123 */
        while (j < k) {
            /* 40124 */
            char c1 = paramArrayOfchar[j++];
            /* 40125 */
            char c2 = paramArrayOfchar[j++];
            /* 40126 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 40127 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 40129 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 40130 */
                return new byte[0];
                /*       */
            }
            /* 40132 */
            byte b3 = au[c1];
            /* 40133 */
            byte b4 = au[c2];
            /* 40134 */
            byte b5 = au[b1];
            /* 40135 */
            byte b6 = au[b2];
            /* 40136 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 40137 */
                return new byte[0];
                /*       */
            }
            /* 40139 */
            int m = b3 << 2 | b4 >>> 4;
            /* 40140 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 40141 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 40142 */
            arrayOfByte[b++] = (byte) m;
            /* 40143 */
            if (b < i) {
                /* 40144 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 40146 */
            if (b < i) {
                /* 40147 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 40150 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    private static byte[] ox(char[] paramArrayOfchar, int paramInt1, int paramInt2) {
        /* 40154 */
        if (paramInt2 % 4 != 0) {
            /* 40155 */
            return new byte[0];
            /*       */
        }
        /*       */
        /* 40158 */
        while (paramInt2 > 0 && paramArrayOfchar[paramInt1 + paramInt2 - 1] == '=') {
            /* 40159 */
            paramInt2--;
            /*       */
        }
        /* 40161 */
        int i = paramInt2 * 3 / 4;
        /* 40162 */
        byte[] arrayOfByte = new byte[i];
        /* 40163 */
        int j = paramInt1;
        /* 40164 */
        int k = paramInt1 + paramInt2;
        /* 40165 */
        byte b = 0;
        /* 40166 */
        while (j < k) {
            /* 40167 */
            char c1 = paramArrayOfchar[j++];
            /* 40168 */
            char c2 = paramArrayOfchar[j++];
            /* 40169 */
            byte b1 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /* 40170 */
            byte b2 = (byte) ((j < k) ? paramArrayOfchar[j++] : 65);
            /*       */
            /* 40172 */
            if (c1 > '' || c2 > '' || b1 > 127 || b2 > 127) {
                /* 40173 */
                return new byte[0];
                /*       */
            }
            /* 40175 */
            byte b3 = au[c1];
            /* 40176 */
            byte b4 = au[c2];
            /* 40177 */
            byte b5 = au[b1];
            /* 40178 */
            byte b6 = au[b2];
            /* 40179 */
            if (b3 < 0 || b4 < 0 || b5 < 0 || b6 < 0) {
                /* 40180 */
                return new byte[0];
                /*       */
            }
            /* 40182 */
            int m = b3 << 2 | b4 >>> 4;
            /* 40183 */
            int n = (b4 & 0xF) << 4 | b5 >>> 2;
            /* 40184 */
            int i1 = (b5 & 0x3) << 6 | b6;
            /* 40185 */
            arrayOfByte[b++] = (byte) m;
            /* 40186 */
            if (b < i) {
                /* 40187 */
                arrayOfByte[b++] = (byte) n;
                /*       */
            }
            /* 40189 */
            if (b < i) {
                /* 40190 */
                arrayOfByte[b++] = (byte) i1;
                /*       */
            }
            /*       */
        }
        /* 40193 */
        return arrayOfByte;
        /*       */
    }

    /*       */
    /*       */
    /*       */   class ay
            /*       */ {
        /*       */ Policy.Parameters a;
        /*       */
        /* 40201 */     private double c = 0.0D;
        /* 40202 */     private double d = 0.0D;
        /* 40203 */     private String e = "";
        /*       */
        /*       */     private boolean f = false;

        /*       */
        /*       */
        public ay(a this$0) {
            /* 40208 */
            a();
            /*       */
        }

        /*       */
        /*       */
        /*       */
        private int a(int param1Int) {
            /* 40213 */
            if (param1Int == 0 || param1Int == 1)
                /* 40214 */ return 1;
            /* 40215 */
            return a(param1Int - 1) * param1Int;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public void a() {
        }

        /*       */
        /*       */
        /*       */
        public double a(double param1Double) {
            /* 40224 */
            double d = param1Double;
            /* 40225 */
            if (this.f == true)
                /* 40226 */ d = Math.toRadians(param1Double);
            /* 40227 */
            return d;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b() {
            /* 40232 */
            return this.e;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        /*       */
        public String a(String param1String) {
            /* 40238 */
            byte b1 = 0;
            /* 40239 */
            byte b2 = 0;
            /* 40240 */
            byte b3 = 40;
            /* 40241 */
            byte b4 = 41;
            /* 40242 */
            String str = param1String;
            /* 40243 */
            for (byte b5 = 0; b5 < param1String.length(); b5++) {
                /* 40244 */
                if (param1String.charAt(b5) == b3) {
                    /* 40245 */
                    b1++;
                    /* 40246 */
                } else if (param1String.charAt(b5) == b4) {
                    /* 40247 */
                    b2++;
                    /*       */
                }
                /* 40249 */
            }
            while (b1 > 0) {
                /* 40250 */
                str = str + b4;
                /* 40251 */
                b1--;
                /*       */
            }
            /* 40253 */
            while (b2 > 0) {
                /* 40254 */
                str = b3 + str;
                /* 40255 */
                b2--;
                /*       */
            }
            /* 40257 */
            str = b(str);
            /* 40258 */
            return str;
            /*       */
        }

        /*       */
        /*       */
        /*       */
        public String b(String param1String) {
            /* 40263 */
            String str = "";
            /* 40264 */
            for (byte b = 0; b < param1String.length(); b++) {
                /* 40265 */
                str = str + param1String.charAt(b);
                /* 40266 */
                if (b != param1String.length() - 1) {
                    /*       */
                    /* 40268 */
                    if (param1String.charAt(b) == ')' && param1String.charAt(b + 1) == '(')
                        /* 40269 */ str = str + '*';
                    /* 40270 */
                    if (param1String.charAt(b) == '(' && param1String.charAt(b + 1) == ')')
                        /* 40271 */ str = str + '1';
                    /*       */
                }
                /* 40273 */
            }
            return str;
            /*       */
        }
        /*       */
    }
    /*       */
}


/* Location:              /Users/anasnadeem/Downloads/projectlibfiledriver/classes.jar!/com/a.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */